{"version":3,"sources":["webpack://@findora-network/findora-sdk.js/webpack/runtime/async module","webpack://@findora-network/findora-sdk.js/./node_modules/atob/node-atob.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/index.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/adapters/http.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/adapters/xhr.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/axios.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/cancel/Cancel.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/cancel/CancelToken.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/cancel/isCancel.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/core/Axios.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/core/InterceptorManager.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/core/buildFullPath.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/core/createError.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/core/dispatchRequest.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/core/enhanceError.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/core/mergeConfig.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/core/settle.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/core/transformData.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/defaults.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/helpers/bind.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/helpers/buildURL.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/helpers/combineURLs.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/helpers/cookies.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/helpers/spread.js","webpack://@findora-network/findora-sdk.js/./node_modules/axios/lib/utils.js","webpack://@findora-network/findora-sdk.js/./node_modules/bignumber.js/bignumber.mjs","webpack://@findora-network/findora-sdk.js/./node_modules/debug/src/browser.js","webpack://@findora-network/findora-sdk.js/./node_modules/debug/src/common.js","webpack://@findora-network/findora-sdk.js/./node_modules/debug/src/index.js","webpack://@findora-network/findora-sdk.js/./node_modules/debug/src/node.js","webpack://@findora-network/findora-sdk.js/./node_modules/findora-wallet-wasm/bundler/wasm_bg.js","webpack://@findora-network/findora-sdk.js/./node_modules/findora-wallet-wasm/nodejs/wasm.js","webpack://@findora-network/findora-sdk.js//Users/okovalov/prj/Findora/findora-sdk/node_modules/findora-wallet-wasm/nodejs|sync|/^util.*$/","webpack://@findora-network/findora-sdk.js/./node_modules/follow-redirects/debug.js","webpack://@findora-network/findora-sdk.js/./node_modules/follow-redirects/index.js","webpack://@findora-network/findora-sdk.js/./node_modules/has-flag/index.js","webpack://@findora-network/findora-sdk.js/./node_modules/json-bigint/index.js","webpack://@findora-network/findora-sdk.js/./node_modules/json-bigint/lib/parse.js","webpack://@findora-network/findora-sdk.js/./node_modules/json-bigint/lib/stringify.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_Hash.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_ListCache.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_Map.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_MapCache.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_Symbol.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_arrayMap.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_assocIndexOf.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_baseGet.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_baseGetTag.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_baseIsNative.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_baseToString.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_castPath.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_coreJsData.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_freeGlobal.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_getMapData.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_getNative.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_getRawTag.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_getValue.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_hashClear.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_hashDelete.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_hashGet.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_hashHas.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_hashSet.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_isKey.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_isKeyable.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_isMasked.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_listCacheClear.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_listCacheDelete.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_listCacheGet.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_listCacheHas.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_listCacheSet.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_mapCacheClear.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_mapCacheDelete.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_mapCacheGet.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_mapCacheHas.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_mapCacheSet.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_memoizeCapped.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_nativeCreate.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_objectToString.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_root.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_stringToPath.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_toKey.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/_toSource.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/eq.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/get.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/isArray.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/isFunction.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/isObject.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/isObjectLike.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/isSymbol.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/memoize.js","webpack://@findora-network/findora-sdk.js/./node_modules/lodash/toString.js","webpack://@findora-network/findora-sdk.js/./node_modules/ms/index.js","webpack://@findora-network/findora-sdk.js/./node_modules/supports-color/index.js","webpack://@findora-network/findora-sdk.js/./src/Sdk.ts","webpack://@findora-network/findora-sdk.js/./src/api/account/account.ts","webpack://@findora-network/findora-sdk.js/./src/api/account/index.ts","webpack://@findora-network/findora-sdk.js/./src/api/index.ts","webpack://@findora-network/findora-sdk.js/./src/api/keypair/index.ts","webpack://@findora-network/findora-sdk.js/./src/api/keypair/keypair.ts","webpack://@findora-network/findora-sdk.js/./src/api/network/index.ts","webpack://@findora-network/findora-sdk.js/./src/api/network/network.ts","webpack://@findora-network/findora-sdk.js/./src/api/sdkAsset/index.ts","webpack://@findora-network/findora-sdk.js/./src/api/sdkAsset/sdkAsset.ts","webpack://@findora-network/findora-sdk.js/./src/api/transaction/helpers.ts","webpack://@findora-network/findora-sdk.js/./src/api/transaction/index.ts","webpack://@findora-network/findora-sdk.js/./src/api/transaction/operationProcessors/defineAsset.ts","webpack://@findora-network/findora-sdk.js/./src/api/transaction/operationProcessors/index.ts","webpack://@findora-network/findora-sdk.js/./src/api/transaction/operationProcessors/issueAsset.ts","webpack://@findora-network/findora-sdk.js/./src/api/transaction/operationProcessors/transferAsset.ts","webpack://@findora-network/findora-sdk.js/./src/api/transaction/operationProcessors/unsupported.ts","webpack://@findora-network/findora-sdk.js/./src/api/transaction/processor.ts","webpack://@findora-network/findora-sdk.js/./src/api/transaction/transaction.ts","webpack://@findora-network/findora-sdk.js/./src/config/asset.ts","webpack://@findora-network/findora-sdk.js/./src/config/cache.ts","webpack://@findora-network/findora-sdk.js/./src/index.ts","webpack://@findora-network/findora-sdk.js/./src/random.ts","webpack://@findora-network/findora-sdk.js/./src/services/bigNumber.ts","webpack://@findora-network/findora-sdk.js/./src/services/cacheStore/factory.ts","webpack://@findora-network/findora-sdk.js/./src/services/cacheStore/providers/fileCacheProvider.ts","webpack://@findora-network/findora-sdk.js/./src/services/cacheStore/providers/index.ts","webpack://@findora-network/findora-sdk.js/./src/services/cacheStore/providers/memoryCacheProvider.ts","webpack://@findora-network/findora-sdk.js/./src/services/fee.ts","webpack://@findora-network/findora-sdk.js/./src/services/ledger/ledgerWrapper.ts","webpack://@findora-network/findora-sdk.js/./src/services/ledger/nodeLedger.ts","webpack://@findora-network/findora-sdk.js/./src/services/ledger/webLedger.ts","webpack://@findora-network/findora-sdk.js/./src/services/utils.ts","webpack://@findora-network/findora-sdk.js/./src/services/utxoHelper.ts","webpack://@findora-network/findora-sdk.js/external \"assert\"","webpack://@findora-network/findora-sdk.js/external \"fs\"","webpack://@findora-network/findora-sdk.js/external \"http\"","webpack://@findora-network/findora-sdk.js/external \"https\"","webpack://@findora-network/findora-sdk.js/external \"os\"","webpack://@findora-network/findora-sdk.js/external \"path\"","webpack://@findora-network/findora-sdk.js/external \"stream\"","webpack://@findora-network/findora-sdk.js/external \"tty\"","webpack://@findora-network/findora-sdk.js/external \"url\"","webpack://@findora-network/findora-sdk.js/external \"util\"","webpack://@findora-network/findora-sdk.js/external \"zlib\"","webpack://@findora-network/findora-sdk.js/webpack/bootstrap","webpack://@findora-network/findora-sdk.js/webpack/runtime/define property getters","webpack://@findora-network/findora-sdk.js/webpack/runtime/harmony module decorator","webpack://@findora-network/findora-sdk.js/webpack/runtime/hasOwnProperty shorthand","webpack://@findora-network/findora-sdk.js/webpack/runtime/make namespace object","webpack://@findora-network/findora-sdk.js/webpack/runtime/node module decorator","webpack://@findora-network/findora-sdk.js/webpack/runtime/publicPath","webpack://@findora-network/findora-sdk.js/webpack/runtime/wasm chunk loading","webpack://@findora-network/findora-sdk.js/webpack/startup"],"names":["webpackThen","webpackExports","completeQueue","completeFunction","queueFunction","atob","str","Buffer","from","toString","module","exports","utils","settle","buildFullPath","buildURL","http","https","httpFollow","httpsFollow","url","zlib","pkg","createError","enhanceError","isHttps","setProxy","options","proxy","location","hostname","host","port","path","auth","base64","username","password","headers","beforeRedirect","redirection","href","config","Promise","resolvePromise","rejectPromise","resolve","value","reject","data","version","isStream","isBuffer","isArrayBuffer","Uint8Array","isString","length","undefined","fullPath","baseURL","parsed","parse","protocol","urlAuth","split","Authorization","isHttpsRequest","test","agent","httpsAgent","httpAgent","params","paramsSerializer","replace","method","toUpperCase","agents","socketPath","transport","proxyEnv","slice","proxyUrl","process","env","parsedProxyUrl","noProxyEnv","no_proxy","NO_PROXY","shouldProxy","map","s","trim","some","proxyElement","substr","proxyUrlAuth","isHttpsProxy","maxRedirects","maxBodyLength","req","request","res","aborted","stream","lastRequest","statusCode","decompress","pipe","createUnzip","response","status","statusText","statusMessage","responseType","responseBuffer","on","chunk","push","maxContentLength","concat","destroy","err","responseData","responseEncoding","stripBOM","code","timeout","setTimeout","abort","cancelToken","promise","then","cancel","end","cookies","parseHeaders","isURLSameOrigin","requestData","requestHeaders","isFormData","XMLHttpRequest","unescape","encodeURIComponent","btoa","open","onreadystatechange","readyState","responseURL","indexOf","responseHeaders","getAllResponseHeaders","responseText","onabort","onerror","ontimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","isUndefined","e","onDownloadProgress","addEventListener","onUploadProgress","upload","send","bind","Axios","mergeConfig","createInstance","defaultConfig","context","instance","prototype","extend","axios","create","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","default","message","this","__CANCEL__","executor","TypeError","token","reason","throwIfRequested","source","c","InterceptorManager","dispatchRequest","interceptors","arguments","chain","interceptor","unshift","fulfilled","rejected","shift","getUri","handlers","use","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","error","Error","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","toJSON","name","description","number","fileName","lineNumber","columnNumber","stack","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","isPlainObject","isArray","mergeDeepProperties","prop","axiosKeys","otherKeys","Object","keys","filter","validateStatus","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","call","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","JSON","stringify","thisArg","args","Array","i","apply","encode","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","domain","secure","cookie","isNumber","Date","toGMTString","document","match","RegExp","decodeURIComponent","remove","now","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","setAttribute","search","hash","pathname","charAt","window","requestURL","normalizedName","ignoreDuplicateOf","line","callback","arr","getPrototypeOf","isFunction","obj","l","hasOwnProperty","constructor","FormData","ArrayBuffer","isView","URLSearchParams","product","result","assignValue","a","b","content","charCodeAt","isNumeric","mathceil","Math","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","n","coeffToString","z","j","r","compare","x","y","xc","yc","k","intCheck","min","max","String","isOdd","toExponential","toFixedPoint","len","zs","BigNumber","clone","configObject","div","convertBase","parseNumeric","pow2_53","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabet","caseChanged","isNum","_isBigNumber","substring","round","DEBUG","format","rm","c0","ne","maxOrMin","m","normalise","pop","sd","d","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","p","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","lt","minimum","gt","random","dp","rand","Uint32Array","copy","splice","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","reverse","sign","callerIsToString","pow","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","Symbol","toStringTag","for","formatArgs","useColors","namespace","humanize","diff","color","index","lastC","save","namespaces","storage","setItem","removeItem","load","getItem","type","__nwjs","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","$1","localStorage","localstorage","warned","warn","colors","log","debug","formatters","createDebug","prevTime","enableOverride","enabled","self","curr","Number","ms","prev","coerce","formatter","selectColor","defineProperty","enumerable","configurable","get","init","delimiter","newDebug","toNamespace","regexp","disable","names","skips","enable","browser","tty","util","inspectOpts","stderr","colorCode","hideDate","Boolean","isatty","fd","deprecate","supportsColor","level","reduce","_","o","inspect","O","heap","fill","getObject","idx","heap_next","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachegetUint8Memory0","getUint8Memory0","cachedTextEncoder","TextEncoder","require","encodeString","encodeInto","arg","view","buf","written","passStringToWasm0","malloc","realloc","ptr","subarray","mem","offset","cachegetInt32Memory0","getInt32Memory0","Int32Array","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm0","decode","addHeapObject","debugString","builtInMatches","exec","className","u32CvtShim","uint64CvtShim","BigUint64Array","stack_pointer","addBorrowedObject","_assertClass","klass","build_id","r0","r1","random_asset_type","asset_type_from_jsvalue","verify_authenticated_txn","state_commitment","authenticated_txn","ptr0","len0","ptr1","len1","verify_authenticated_custom_data_result","authenticated_res","calculate_fee","ir_numerator","ir_denominator","outstanding_balance","low0","high0","low1","high1","low2","high2","get_null_pk","XfrPublicKey","__wrap","create_default_policy_info","create_debt_policy_info","fiat_code","loan_amount","ptr2","len2","low3","high3","create_debt_memo","isLikeNone","cachegetUint32Memory0","open_client_asset_record","record","owner_memo","keypair","ClientAssetRecord","OwnerMemo","XfrKeyPair","get_pub_key_str","key_pair","get_priv_key_str","new_keypair","new_keypair_from_seed","seed_str","public_key_to_base64","public_key_from_base64","pk","keypair_to_str","keypair_from_str","wasm_credential_issuer_key_gen","attributes","CredentialIssuerKeyPair","wasm_credential_verify_commitment","issuer_pub_key","commitment","pok","xfr_pk","CredIssuerPublicKey","CredentialCommitment","CredentialPoK","wasm_credential_open_commitment","user_secret_key","credential","reveal_fields","CredUserSecretKey","Credential","CredentialCommitmentKey","wasm_credential_user_key_gen","CredentialUserKeyPair","wasm_credential_sign","issuer_secret_key","user_public_key","CredIssuerSecretKey","CredUserPublicKey","CredentialSignature","create_credential","issuer_public_key","signature","wasm_credential_commit","CredentialCommitmentData","wasm_credential_reveal","user_sk","CredentialRevealSig","wasm_credential_verify","trace_assets","xfr_body","tracer_keypair","_candidate_assets","AssetTracerKeyPair","public_key_to_bech32","public_key_from_bech32","addr","bech32_to_base64","base64_to_bech32","getArrayU8FromWasm0","encryption_pbkdf2_aes256gcm","v2","decryption_pbkdf2_aes256gcm","enc_key_pair","passArray8ToWasm0","create_keypair_from_secret","sk_str","get_pk_from_keypair","kp","generate_mnemonic_default","generate_mnemonic_custom","wordslen","lang","restore_keypair_from_mnemonic_default","phrase","restore_keypair_from_mnemonic_bip44","BipPath","restore_keypair_from_mnemonic_bip49","fra_get_asset_code","fra_get_minimal_fee","fra_get_dest_pubkey","handleError","f","AssetRules","policy","TracingPolicy","max_units","transferable","updatable","multisig_rules","SignatureRules","decimals","AssetType","json","TracingPolicies","AuthenticatedAIRResult","AuthenticatedAssetRecord","coin","account","change","address","FeeInputs","am","tr","ar","om","TxoRef","ptr3","ptr4","KVBlind","KVHash","kv_blind","Key","string","PublicParams","threshold","weights","tracing_key","cred_issuer_key","reveal_map","tracing","TransactionBuilder","v0","getArrayJsValueFromWasm0","inputs","seq_id","memo","token_code","asset_rules","policy_choice","which_check","seq_num","amount","conf_amount","zei_params","auth_key_pair","kv_hash","new_memo","op","TransferOperationBuilder","txo_ref","asset_record","tracing_policies","recipient","conf_type","input_idx","arg0","__wbindgen_object_drop_ref","__wbindgen_json_serialize","arg1","__wbindgen_string_new","__wbindgen_json_parse","__wbg_getRandomValues_57e4008f45f0e105","__wbg_randomFillSync_d90848a552cbd666","arg2","randomFillSync","__wbg_self_f865985e662246aa","__wbg_static_accessor_MODULE_39947eb3fe77895f","__wbg_require_c59851dfa0dc7e78","__wbg_crypto_bfb05100db79193b","__wbg_msCrypto_f6dddc6ae048b7e2","msCrypto","__wbindgen_is_undefined","__wbg_self_86b4b13392c7af56","__wbg_static_accessor_MODULE_452b4680e8614c81","__wbg_require_f5521a5b85ad2542","__wbg_crypto_b8c92eaac23d0d80","__wbg_msCrypto_9ad6677321a08dd8","__wbg_getRandomValues_dd27e6b0652b3236","__wbg_getRandomValues_e57c9b75ddead065","__wbg_randomFillSync_d2ba53160aec6aba","__wbg_buffer_eb5185aa4a8e9c62","__wbg_length_2e324c9c0e74a81d","__wbg_new_3d94e83f0a6bf252","__wbg_set_d4d7629a896d4b3e","__wbg_newwithlength_02a009c0728d3ba1","__wbg_subarray_cc54babc55409ee0","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_memory","wasm","imports","raw","cachegetNodeBufferMemory0","byteLength","memory","__wbindgen_free","__wbindgen_malloc","__wbindgen_realloc","__wbindgen_exn_store","__wbg_assetrules_free","assetrules_new","assetrules_add_tracing_policy","assetrules_set_max_units","assetrules_set_transferable","assetrules_set_updatable","assetrules_set_transfer_multisig_rules","assetrules_set_decimals","__wbg_assettracerkeypair_free","assettracerkeypair_new","__wbg_assettype_free","assettype_from_json","assettype_get_tracing_policies","__wbg_authenticatedairresult_free","authenticatedairresult_from_json","authenticatedairresult_is_valid","authenticatedairresult_get_commitment","__wbg_authenticatedassetrecord_free","authenticatedassetrecord_is_valid","authenticatedassetrecord_from_json_record","__wbg_bippath_free","bippath_new","__wbg_clientassetrecord_free","clientassetrecord_from_json","clientassetrecord_to_json","__wbg_credissuerpublickey_free","__wbg_credissuersecretkey_free","__wbg_creduserpublickey_free","__wbg_credusersecretkey_free","__wbg_credential_free","__wbg_credentialcommitment_free","__wbg_credentialcommitmentdata_free","credentialcommitmentdata_get_commitment","credentialcommitmentdata_get_pok","credentialcommitmentdata_get_commit_key","__wbg_credentialcommitmentkey_free","__wbg_credentialissuerkeypair_free","credentialissuerkeypair_get_pk","credentialissuerkeypair_get_sk","credentialissuerkeypair_to_json","credentialissuerkeypair_from_json","__wbg_credentialpok_free","__wbg_credentialrevealsig_free","credentialrevealsig_get_pok","__wbg_credentialsignature_free","__wbg_credentialuserkeypair_free","credentialuserkeypair_get_pk","credentialuserkeypair_get_sk","credentialuserkeypair_to_json","credentialuserkeypair_from_json","__wbg_feeinputs_free","feeinputs_new","feeinputs_append","feeinputs_append2","__wbg_kvblind_free","kvblind_gen_random","kvblind_to_json","kvblind_from_json","__wbg_kvhash_free","kvhash_new_no_blind","kvhash_new_with_blind","__wbg_key_free","key_gen_random","key_to_base64","key_from_base64","__wbg_ownermemo_free","ownermemo_from_json","ownermemo_clone","__wbg_publicparams_free","publicparams_new","__wbg_signaturerules_free","signaturerules_new","__wbg_tracingpolicies_free","__wbg_tracingpolicy_free","tracingpolicy_new_with_tracing","tracingpolicy_new_with_identity_tracing","__wbg_transactionbuilder_free","transactionbuilder_add_fee_relative_auto","transactionbuilder_get_relative_outputs","transactionbuilder_add_fee","transactionbuilder_check_fee","transactionbuilder_new","transactionbuilder_add_operation_create_asset","transactionbuilder_add_operation_create_asset_with_policy","transactionbuilder_add_policy_option","transactionbuilder_add_basic_issue_asset","transactionbuilder_add_operation_air_assign","transactionbuilder_add_operation_kv_update_no_hash","transactionbuilder_add_operation_kv_update_with_hash","transactionbuilder_add_operation_update_memo","transactionbuilder_add_transfer_operation","transactionbuilder_sign","transactionbuilder_transaction","transactionbuilder_transaction_handle","transactionbuilder_get_owner_record","transactionbuilder_get_owner_memo","__wbg_transferoperationbuilder_free","transferoperationbuilder_new","transferoperationbuilder_debug","transferoperationbuilder_add_input_with_tracing","transferoperationbuilder_add_input_no_tracing","transferoperationbuilder_add_output_with_tracing","transferoperationbuilder_add_output_no_tracing","transferoperationbuilder_balance","transferoperationbuilder_create","transferoperationbuilder_sign","transferoperationbuilder_add_cosignature","transferoperationbuilder_builder","transferoperationbuilder_transaction","__wbg_txoref_free","txoref_relative","txoref_absolute","__wbg_xfrkeypair_free","__wbg_get_xfrkeypair_pub_key","__wbg_set_xfrkeypair_pub_key","__wbg_xfrpublickey_free","__dirname","bytes","wasmModule","WebAssembly","Module","wasmInstance","Instance","__wasm","webpackEmptyContext","URL","Writable","assert","eventHandlers","event","arg3","_redirectable","emit","RedirectionError","createErrorType","TooManyRedirectsError","MaxBodyLengthExceededError","WriteAfterEndError","RedirectableRequest","responseCallback","_sanitizeOptions","_options","_ended","_ending","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","_onNativeResponse","_processResponse","_performRequest","wrap","protocols","nativeProtocols","scheme","nativeProtocol","wrappedProtocol","defineProperties","input","urlStr","urlToOptions","assign","equal","writable","wrappedRequest","noop","urlObject","startsWith","removeMatchingHeaders","regex","lastValue","header","defaultMessage","CustomError","captureStackTrace","_currentRequest","removeAllListeners","encoding","currentRequest","setHeader","removeHeader","msecs","startTimer","_timeout","clearTimeout","clearTimer","removeListener","socket","once","property","searchPos","_currentUrl","_isRedirect","buffers","writeNext","finished","trackRedirects","followRedirects","previousHostName","redirectUrl","redirectUrlParts","responseDetails","cause","responseUrl","redirects","flag","argv","position","terminatorPosition","json_stringify","json_parse","suspectProtoRx","suspectConstructorRx","strict","storeAsString","alwaysParseAsBig","useNativeBigInt","protoAction","constructorAction","at","ch","text","escapee","next","BigInt","hex","uffff","startAt","fromCharCode","white","object","array","word","reviver","walk","holder","gap","indent","escapable","meta","quote","lastIndex","partial","mind","replacer","space","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","entries","clear","entry","has","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","Map","getNative","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","iteratee","castPath","toKey","getRawTag","objectToString","symToStringTag","isMasked","toSource","reIsHostCtor","funcProto","Function","objectProto","funcToString","reIsNative","arrayMap","isSymbol","symbolProto","symbolToString","baseToString","isKey","stringToPath","coreJsData","freeGlobal","global","isKeyable","__data__","baseIsNative","getValue","nativeObjectToString","isOwn","tag","unmasked","nativeCreate","size","reIsDeepProp","reIsPlainProp","uid","maskSrcKey","IE_PROTO","func","assocIndexOf","getMapData","memoize","cache","freeSelf","root","memoizeCapped","rePropName","reEscapeChar","subString","other","baseGet","defaultValue","baseGetTag","isObjectLike","resolver","memoized","Cache","plural","msAbs","isPlural","parseFloat","long","fmtShort","os","hasFlag","forceColor","translateLevel","hasBasic","has256","has16m","haveStream","streamIsTTY","TERM","platform","osRelease","release","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","FORCE_COLOR","isTTY","stdout","sdkEnv","Sdk","environment","setUtxoData","walletAddress","utxoCache","cacheDataToSave","item","sid","CACHE_ENTRIES","UTXO_DATA","cacheProvider","hostUrl","queryPort","ledgerPort","submissionPort","explorerApiPort","MemoryCacheProvider","cachePath","getAssetBalance","walletKeypair","assetCode","sids","addUtxo","utxoDataList","filteredUtxoList","row","body","asset_type","currentBalance","acc","currentUtxoItem","getBalance","Network","getOwnedSids","publickey","sidsResult","getFraAssetCode","fraAssetCode","assetCodeToUse","balanceInWei","fromWei","createKeypair","walletKeyPair","getPrivateKeyStr","getLedger","getPublicKeyStr","getAddress","ledger","getAddressByPublicKey","publicKey","getAddressPublicAndKey","restoreFromPrivateKey","privateStr","toSend","keypairStr","encrypted","keyStore","restoreFromMnemonic","mnemonic","keyPairStr","restoreFromKeystore","restoreFromKeystoreString","keyStoreString","keyStoreObject","encryptedKey","values","getMnemonic","desiredLength","mnemonicLang","getQueryRoute","getSubmitRoute","getLedgerRoute","getExplorerApiRoute","apiPost","post","axiosResponse","apiGet","getUtxo","utxoSid","getOwnerMemo","getStateCommitment","getSubmitTransactionData","txData","submitTransaction","getAssetToken","getTransactionStatus","handle","getBlock","height","getHashSwap","query","getTxList","page","per_page","order_by","getTransactionDetails","getAssetCode","getRandomAssetCode","getAssetRules","newAssetRules","defaultTransferable","DEFAULT_ASSET_RULES","defaultUpdatable","defaultDecimals","new","set_transferable","set_updatable","set_decimals","traceable","maxNumbers","assetRules","set_max_units","trackingKey","tracingPolicy","new_with_tracing","add_tracing_policy","getDefineAssetTransactionBuilder","assetName","assetMemo","stateCommitment","blockCount","add_operation_create_asset","getIssueAssetTransactionBuilder","amountToIssue","assetBlindRules","assetDecimals","utxoNumbers","toWei","blindIsAmount","isAmountBlind","zeiParams","add_basic_issue_asset","defineAsset","walletInfo","Fee","buildTransferOperationWithFee","transferOperationBuilder","receivedTransferOperation","transaction","messaage","transactionBuilder","add_transfer_operation","submitData","submitError","issueAsset","getAssetDetails","assetResult","asset","properties","issuer","issuerAddress","numbers","getTxListFromResponse","getTxOperationsList","parsedTx","getBlockTime","blockDetailsResult","block","time","processDefineAsset","operationItem","operation","DefineAsset","Keypair","to","originalOperation","getOperationProcessor","processors","el","Unsupported","processorsMap","TransferAsset","processTransferAsset","IssueAsset","processIssueAsset","processUnsupported","Asset","pubkey","transfer","fromPromise","public_key","toPromise","outputs","transferAsset","processTxOperationList","operationsList","dataProcessor","processTxOperationItem","processTxInfoItem","txItem","tx","helpers","tx_result","processedOperationList","processedUpdatedTxList","txOperation","processeTxInfoList","txList","getTransactionBuilder","sendToMany","recieversList","recieversInfo","reciver","toWalletInfo","recieverInfoItem","toPublickey","buildTransferOperation","transferOperationBuilderFee","receivedTransferOperationFee","sendToAddress","toWalletInfoLight","reciverWalletInfo","sendToPublicKey","dataResult","processedTxList","total_count","txs","transfer_multisig_rules","Random","getWebLedger","getNodeLedger","getBytes","count","calDecimalPrecision","num","totalSum","amounts","currentAmount","currentValue","valueToAdd","factory","entryName","provider","prune","fileCacheProvider","filePath","cacheData","existsSync","readFile","fileContent","writeFile","memoryCacheProvider","MemoryCache","getTransferOperation","utxoInputs","totalUtxoNumbers","blindIsType","isTypeBlind","transferOp","inputParametersList","inputAmount","inputParameters","txoRef","assetRecord","memoData","ownerMemo","from_json","newOwnerMemo","add_input_no_tracing","reciverInfo","add_output_no_tracing","numberToSubmit","minimalFee","sendUtxoList","getSendUtxo","addUtxoInputs","utxoInputsInfo","receiver","uint8arrayToHexStr","decryptUtxoItem","utxoData","utxo","decryptAssetData","decryptedAsetType","getUtxoItem","cachedItem","utxoDataResult","utxoError","memoDataResult","memoError","addSids","cacheEntryName","fullPathToCacheEntry","utxoDataCache","balance","assetItem","_amount","originAmount","utxoSids","absolute","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","queue","hasAwait","currentDeps","outerResolve","isEvaluating","nested","whenAll","deps","onResolve","onReject","dep","rej","rejectFn","catch","wrapDeps","definition","hmd","children","nmd","paths","wasmModuleId","wasmModuleHash","importsObj","arrayBuffer","instantiate","__webpack_exports__"],"mappings":"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","file":"bundle.node.js","sourcesContent":["var webpackThen = typeof Symbol === \"function\" ? Symbol(\"webpack then\") : \"__webpack_then__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar completeQueue = (queue) => {\n\tif(queue) {\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar completeFunction = (fn) => (!--fn.r && fn());\nvar queueFunction = (queue, fn) => (queue ? queue.push(fn) : completeFunction(fn));\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackThen]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tcompleteQueue(queue);\n\t\t\t\tqueue = 0;\n\t\t\t});\n\t\t\tvar obj = { [webpackThen]: (fn, reject) => (queueFunction(queue, fn), dep.catch(reject)) };\n\t\t\treturn obj;\n\t\t}\n\t}\n\treturn { [webpackThen]: (fn) => (completeFunction(fn)), [webpackExports]: dep };\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue = hasAwait && [];\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar isEvaluating = true;\n\tvar nested = false;\n\tvar whenAll = (deps, onResolve, onReject) => {\n\t\tif (nested) return;\n\t\tnested = true;\n\t\tonResolve.r += deps.length;\n\t\tdeps.map((dep, i) => (dep[webpackThen](onResolve, onReject)));\n\t\tnested = false;\n\t};\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = () => (resolve(exports), completeQueue(queue), queue = 0);\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackThen] = (fn, rejectFn) => {\n\t\tif (isEvaluating) { return completeFunction(fn); }\n\t\tif (currentDeps) whenAll(currentDeps, fn, rejectFn);\n\t\tqueueFunction(queue, fn);\n\t\tpromise.catch(rejectFn);\n\t};\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tif(!deps) return outerResolve();\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn, result;\n\t\tvar promise = new Promise((resolve, reject) => {\n\t\t\tfn = () => (resolve(result = currentDeps.map((d) => (d[webpackExports]))));\n\t\t\tfn.r = 0;\n\t\t\twhenAll(currentDeps, fn, reject);\n\t\t});\n\t\treturn fn.r ? promise : result;\n\t}).then(outerResolve, reject);\n\tisEvaluating = false;\n};","\"use strict\";\n\nfunction atob(str) {\n  return Buffer.from(str, 'base64').toString('binary');\n}\n\nmodule.exports = atob.atob = atob;\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildFullPath = require('../core/buildFullPath');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\nvar isHttps = /https:?/;\n\n/**\n *\n * @param {http.ClientRequestArgs} options\n * @param {AxiosProxyConfig} proxy\n * @param {string} location\n */\nfunction setProxy(options, proxy, location) {\n  options.hostname = proxy.host;\n  options.host = proxy.host;\n  options.port = proxy.port;\n  options.path = location;\n\n  // Basic proxy authorization\n  if (proxy.auth) {\n    var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n    options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n  }\n\n  // If a proxy is used, any redirects must also pass through the proxy\n  options.beforeRedirect = function beforeRedirect(redirection) {\n    redirection.headers.host = redirection.host;\n    setProxy(redirection, proxy, redirection.href);\n  };\n}\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var resolve = function resolve(value) {\n      resolvePromise(value);\n    };\n    var reject = function reject(value) {\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    var parsed = url.parse(fullPath);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      agents: { http: config.httpAgent, https: config.httpsAgent },\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port,\n            protocol: parsedProxyUrl.protocol\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      setProxy(options, proxy, protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path);\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxBodyLength > -1) {\n      options.maxBodyLength = config.maxBodyLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n\n      // if no content, is HEAD request or decompress disabled we should not decompress\n      if (res.statusCode !== 204 && lastRequest.method !== 'HEAD' && config.decompress !== false) {\n        switch (res.headers['content-encoding']) {\n        /*eslint default-case:0*/\n        case 'gzip':\n        case 'compress':\n        case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n          stream = stream.pipe(zlib.createUnzip());\n\n          // remove the content-encoding in order to not confuse downstream operations\n          delete res.headers['content-encoding'];\n          break;\n        }\n      }\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString(config.responseEncoding);\n            if (!config.responseEncoding || config.responseEncoding === 'utf8') {\n              responseData = utils.stripBOM(responseData);\n            }\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted && err.code !== 'ERR_FR_TOO_MANY_REDIRECTS') return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      // Sometime, the response will be very slow, and does not respond, the connect event will be block by event loop system.\n      // And timer callback will be fired, and abort() will be invoked before connection, then get \"socket hang up\" and code ECONNRESET.\n      // At this time, if we have a large number of request, nodejs will hang up some socket on background. and the number will up and up.\n      // And then these socket which be hang up will devoring CPU little by little.\n      // ClientRequest.setTimeout will be fired on the specify milliseconds, and can make sure that abort() will be fired after connect.\n      req.setTimeout(config.timeout, function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      });\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","/*\r\n *      bignumber.js v9.0.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                     not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if only one character,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","import * as wasm from './wasm_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n* Returns the git commit hash and commit date of the commit this library was built against.\n* @returns {string}\n*/\nexport function build_id() {\n    try {\n        wasm.build_id(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Generates random Base64 encoded asset type as a Base64 string. Used in asset definitions.\n* @see {@link\n* module:Findora-Wasm~TransactionBuilder#add_operation_create_asset|add_operation_create_asset}\n* for instructions on how to define an asset with a new\n* asset type\n* @returns {string}\n*/\nexport function random_asset_type() {\n    try {\n        wasm.random_asset_type(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Generates asset type as a Base64 string from a JSON-serialized JavaScript value.\n* @param {any} val\n* @returns {string}\n*/\nexport function asset_type_from_jsvalue(val) {\n    try {\n        wasm.asset_type_from_jsvalue(8, addBorrowedObject(val));\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        heap[stack_pointer++] = undefined;\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Given a serialized state commitment and transaction, returns true if the transaction correctly\n* hashes up to the state commitment and false otherwise.\n* @param {string} state_commitment - String representing the state commitment.\n* @param {string} authenticated_txn - String representing the transaction.\n* @see {@link module:Network~Network#getTxn|Network.getTxn} for instructions on fetching a transaction from the ledger.\n* @see {@link module:Network~Network#getStateCommitment|Network.getStateCommitment}\n* for instructions on fetching a ledger state commitment.\n* @throws Will throw an error if the state commitment or the transaction fails to deserialize.\n* @param {string} state_commitment\n* @param {string} authenticated_txn\n* @returns {boolean}\n*/\nexport function verify_authenticated_txn(state_commitment, authenticated_txn) {\n    var ptr0 = passStringToWasm0(state_commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(authenticated_txn, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.verify_authenticated_txn(ptr0, len0, ptr1, len1);\n    return ret !== 0;\n}\n\n/**\n* Given a serialized state commitment and an authenticated custom data result, returns true if the custom data result correctly\n* hashes up to the state commitment and false otherwise.\n* @param {string} state_commitment - String representing the state commitment.\n* @param {JsValue} authenticated_txn - JSON-encoded value representing the authenticated custom\n* data result.\n* @throws Will throw an error if the state commitment or the authenticated result fail to deserialize.\n* @param {string} state_commitment\n* @param {any} authenticated_res\n* @returns {boolean}\n*/\nexport function verify_authenticated_custom_data_result(state_commitment, authenticated_res) {\n    var ptr0 = passStringToWasm0(state_commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.verify_authenticated_custom_data_result(ptr0, len0, addHeapObject(authenticated_res));\n    return ret !== 0;\n}\n\n/**\n* Performs a simple loan repayment fee calculation.\n*\n* The returned fee is a fraction of the `outstanding_balance`\n* where the interest rate is expressed as a fraction `ir_numerator` / `ir_denominator`.\n*\n* This function is specific to the  Lending Demo.\n* @param {BigInt} ir_numerator - Interest rate numerator.\n* @param {BigInt} ir_denominator - Interest rate denominator.\n* @param {BigInt} outstanding_balance - Amount of outstanding debt.\n* @ignore\n* @param {BigInt} ir_numerator\n* @param {BigInt} ir_denominator\n* @param {BigInt} outstanding_balance\n* @returns {BigInt}\n*/\nexport function calculate_fee(ir_numerator, ir_denominator, outstanding_balance) {\n    uint64CvtShim[0] = ir_numerator;\n    const low0 = u32CvtShim[0];\n    const high0 = u32CvtShim[1];\n    uint64CvtShim[0] = ir_denominator;\n    const low1 = u32CvtShim[0];\n    const high1 = u32CvtShim[1];\n    uint64CvtShim[0] = outstanding_balance;\n    const low2 = u32CvtShim[0];\n    const high2 = u32CvtShim[1];\n    wasm.calculate_fee(8, low0, high0, low1, high1, low2, high2);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    u32CvtShim[0] = r0;\n    u32CvtShim[1] = r1;\n    const n3 = uint64CvtShim[0];\n    return n3;\n}\n\n/**\n* Returns an address to use for cancelling debt tokens in a debt swap.\n* @ignore\n* @returns {XfrPublicKey}\n*/\nexport function get_null_pk() {\n    var ret = wasm.get_null_pk();\n    return XfrPublicKey.__wrap(ret);\n}\n\n/**\n* @ignore\n* @returns {string}\n*/\nexport function create_default_policy_info() {\n    try {\n        wasm.create_default_policy_info(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Create policy information needed for debt token asset types.\n* This data will be parsed by the policy evalautor to ensure\n* that all payment and fee amounts are correct.\n* # Arguments\n*\n* * `ir_numerator` - interest rate numerator\n* * `ir_denominator`- interest rate denominator\n* * `fiat_code` - Base64 string representing asset type used to pay off the loan\n* * `amount` - loan amount\n* @ignore\n* @param {BigInt} ir_numerator\n* @param {BigInt} ir_denominator\n* @param {string} fiat_code\n* @param {BigInt} loan_amount\n* @returns {string}\n*/\nexport function create_debt_policy_info(ir_numerator, ir_denominator, fiat_code, loan_amount) {\n    try {\n        uint64CvtShim[0] = ir_numerator;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        uint64CvtShim[0] = ir_denominator;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        var ptr2 = passStringToWasm0(fiat_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = loan_amount;\n        const low3 = u32CvtShim[0];\n        const high3 = u32CvtShim[1];\n        wasm.create_debt_policy_info(8, low0, high0, low1, high1, ptr2, len2, low3, high3);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Creates the memo needed for debt token asset types. The memo will be parsed by the policy evaluator to ensure\n* that all payment and fee amounts are correct.\n* @param {BigInt} ir_numerator  - Interest rate numerator.\n* @param {BigInt} ir_denominator - Interest rate denominator.\n* @param {string} fiat_code - Base64 string representing asset type used to pay off the loan.\n* @param {BigInt} loan_amount - Loan amount.\n* @throws Will throw an error if `fiat_code` fails to deserialize.\n* @ignore\n* @param {BigInt} ir_numerator\n* @param {BigInt} ir_denominator\n* @param {string} fiat_code\n* @param {BigInt} loan_amount\n* @returns {string}\n*/\nexport function create_debt_memo(ir_numerator, ir_denominator, fiat_code, loan_amount) {\n    try {\n        uint64CvtShim[0] = ir_numerator;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        uint64CvtShim[0] = ir_denominator;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        var ptr2 = passStringToWasm0(fiat_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = loan_amount;\n        const low3 = u32CvtShim[0];\n        const high3 = u32CvtShim[1];\n        wasm.create_debt_memo(8, low0, high0, low1, high1, ptr2, len2, low3, high3);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    const mem = getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n/**\n* Returns a JavaScript object containing decrypted owner record information,\n* where `amount` is the decrypted asset amount, and `asset_type` is the decrypted asset type code.\n*\n* @param {ClientAssetRecord} record - Owner record.\n* @param {OwnerMemo} owner_memo - Owner memo of the associated record.\n* @param {XfrKeyPair} keypair - Keypair of asset owner.\n* @see {@link module:Findora-Wasm~ClientAssetRecord#from_json_record|ClientAssetRecord.from_json_record} for information about how to construct an asset record object\n* from a JSON result returned from the ledger server.\n* @param {ClientAssetRecord} record\n* @param {OwnerMemo | undefined} owner_memo\n* @param {XfrKeyPair} keypair\n* @returns {any}\n*/\nexport function open_client_asset_record(record, owner_memo, keypair) {\n    _assertClass(record, ClientAssetRecord);\n    let ptr0 = 0;\n    if (!isLikeNone(owner_memo)) {\n        _assertClass(owner_memo, OwnerMemo);\n        ptr0 = owner_memo.ptr;\n        owner_memo.ptr = 0;\n    }\n    _assertClass(keypair, XfrKeyPair);\n    var ret = wasm.open_client_asset_record(record.ptr, ptr0, keypair.ptr);\n    return takeObject(ret);\n}\n\n/**\n* Extracts the public key as a string from a transfer key pair.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nexport function get_pub_key_str(key_pair) {\n    try {\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.get_pub_key_str(8, key_pair.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Extracts the private key as a string from a transfer key pair.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nexport function get_priv_key_str(key_pair) {\n    try {\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.get_priv_key_str(8, key_pair.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Creates a new transfer key pair.\n* @returns {XfrKeyPair}\n*/\nexport function new_keypair() {\n    var ret = wasm.new_keypair();\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Generates a new keypair deterministically from a seed string and an optional name.\n* @param {string} seed_str\n* @param {string | undefined} name\n* @returns {XfrKeyPair}\n*/\nexport function new_keypair_from_seed(seed_str, name) {\n    var ptr0 = passStringToWasm0(seed_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = isLikeNone(name) ? 0 : passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.new_keypair_from_seed(ptr0, len0, ptr1, len1);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Returns base64 encoded representation of an XfrPublicKey.\n* @param {XfrPublicKey} key\n* @returns {string}\n*/\nexport function public_key_to_base64(key) {\n    try {\n        _assertClass(key, XfrPublicKey);\n        wasm.public_key_to_base64(8, key.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Converts a base64 encoded public key string to a public key.\n* @param {string} pk\n* @returns {XfrPublicKey}\n*/\nexport function public_key_from_base64(pk) {\n    var ptr0 = passStringToWasm0(pk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.public_key_from_base64(ptr0, len0);\n    return XfrPublicKey.__wrap(ret);\n}\n\n/**\n* Expresses a transfer key pair as a hex-encoded string.\n* To decode the string, use `keypair_from_str` function.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nexport function keypair_to_str(key_pair) {\n    try {\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.keypair_to_str(8, key_pair.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Constructs a transfer key pair from a hex-encoded string.\n* The encode a key pair, use `keypair_to_str` function.\n* @param {string} str\n* @returns {XfrKeyPair}\n*/\nexport function keypair_from_str(str) {\n    var ptr0 = passStringToWasm0(str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.keypair_from_str(ptr0, len0);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Generates a new credential issuer key.\n* @param {JsValue} attributes - Array of attribute types of the form `[{name: \"credit_score\",\n* size: 3}]`. The size refers to byte-size of the credential. In this case, the \"credit_score\"\n* attribute is represented as a 3 byte string \"760\". `attributes` is the list of attribute types\n* that the issuer can sign off on.\n* @param {any} attributes\n* @returns {CredentialIssuerKeyPair}\n*/\nexport function wasm_credential_issuer_key_gen(attributes) {\n    var ret = wasm.wasm_credential_issuer_key_gen(addHeapObject(attributes));\n    return CredentialIssuerKeyPair.__wrap(ret);\n}\n\n/**\n* Verifies a credential commitment. Used to confirm that a credential is tied to a ledger\n* address.\n* @param {CredIssuerPublicKey} issuer_pub_key - The credential issuer that has attested to the\n* credentials that have been committed to.\n* @param {CredentialCommitment} Credential commitment\n* @param {CredPoK} Proof of knowledge of the underlying commitment\n* @param {XfrPublicKey} Ledger address linked to this credential commitment.\n* @throws Will throw an error during verification failure (i.e. the supplied ledger address is\n* incorrect, the commitment is tied to a different credential issuer, or the proof of knowledge is\n* invalid, etc.)\n* @param {CredIssuerPublicKey} issuer_pub_key\n* @param {CredentialCommitment} commitment\n* @param {CredentialPoK} pok\n* @param {XfrPublicKey} xfr_pk\n*/\nexport function wasm_credential_verify_commitment(issuer_pub_key, commitment, pok, xfr_pk) {\n    _assertClass(issuer_pub_key, CredIssuerPublicKey);\n    _assertClass(commitment, CredentialCommitment);\n    _assertClass(pok, CredentialPoK);\n    _assertClass(xfr_pk, XfrPublicKey);\n    wasm.wasm_credential_verify_commitment(issuer_pub_key.ptr, commitment.ptr, pok.ptr, xfr_pk.ptr);\n}\n\n/**\n* Generates a new reveal proof from a credential commitment key.\n* @param {CredUserSecretKey} user_secret_key - Secret key of the credential user who owns\n* the credentials.\n* @param {Credential} credential - Credential whose attributes will be revealed.\n* @param {JsValue} reveal_fields - Array of strings representing attribute fields to reveal.\n* @throws Will throw an error if a reveal proof cannot be generated from the credential\n* or ```reveal_fields``` fails to deserialize.\n* @param {CredUserSecretKey} user_secret_key\n* @param {Credential} credential\n* @param {CredentialCommitmentKey} key\n* @param {any} reveal_fields\n* @returns {CredentialPoK}\n*/\nexport function wasm_credential_open_commitment(user_secret_key, credential, key, reveal_fields) {\n    _assertClass(user_secret_key, CredUserSecretKey);\n    _assertClass(credential, Credential);\n    _assertClass(key, CredentialCommitmentKey);\n    var ret = wasm.wasm_credential_open_commitment(user_secret_key.ptr, credential.ptr, key.ptr, addHeapObject(reveal_fields));\n    return CredentialPoK.__wrap(ret);\n}\n\n/**\n* Generates a new credential user key.\n* @param {CredIssuerPublicKey} issuer_pub_key - The credential issuer that can sign off on this\n* user's attributes.\n* @param {CredIssuerPublicKey} issuer_pub_key\n* @returns {CredentialUserKeyPair}\n*/\nexport function wasm_credential_user_key_gen(issuer_pub_key) {\n    _assertClass(issuer_pub_key, CredIssuerPublicKey);\n    var ret = wasm.wasm_credential_user_key_gen(issuer_pub_key.ptr);\n    return CredentialUserKeyPair.__wrap(ret);\n}\n\n/**\n* Generates a signature on user attributes that can be used to create a credential.\n* @param {CredIssuerSecretKey} issuer_secret_key - Secret key of credential issuer.\n* @param {CredUserPublicKey} user_public_key - Public key of credential user.\n* @param {JsValue} attributes - Array of attribute assignments of the form `[{name: \"credit_score\",\n* val: \"760\"}]`.\n* @throws Will throw an error if the signature cannot be generated.\n* @param {CredIssuerSecretKey} issuer_secret_key\n* @param {CredUserPublicKey} user_public_key\n* @param {any} attributes\n* @returns {CredentialSignature}\n*/\nexport function wasm_credential_sign(issuer_secret_key, user_public_key, attributes) {\n    _assertClass(issuer_secret_key, CredIssuerSecretKey);\n    _assertClass(user_public_key, CredUserPublicKey);\n    var ret = wasm.wasm_credential_sign(issuer_secret_key.ptr, user_public_key.ptr, addHeapObject(attributes));\n    return CredentialSignature.__wrap(ret);\n}\n\n/**\n* Generates a signature on user attributes that can be used to create a credential.\n* @param {CredIssuerPublicKey} issuer_public_key - Public key of credential issuer.\n* @param {CredentialSignature} signature - Credential issuer signature on attributes.\n* @param {JsValue} attributes - Array of attribute assignments of the form `[{name: \"credit_score\",\n* val: \"760\"}]'.\n* @param {CredIssuerPublicKey} issuer_public_key\n* @param {CredentialSignature} signature\n* @param {any} attributes\n* @returns {Credential}\n*/\nexport function create_credential(issuer_public_key, signature, attributes) {\n    try {\n        _assertClass(issuer_public_key, CredIssuerPublicKey);\n        _assertClass(signature, CredentialSignature);\n        var ret = wasm.create_credential(issuer_public_key.ptr, signature.ptr, addBorrowedObject(attributes));\n        return Credential.__wrap(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* Generates a credential commitment. A credential commitment can be used to selectively reveal\n* attribute assignments.\n* @param {CredUserSecretKey} user_secret_key - Secret key of credential user.\n* @param {XfrPublicKey} user_public_key - Ledger signing key to link this credential to.\n* @param {Credential} credential - Credential object.\n* @param {CredUserSecretKey} user_secret_key\n* @param {XfrPublicKey} user_public_key\n* @param {Credential} credential\n* @returns {CredentialCommitmentData}\n*/\nexport function wasm_credential_commit(user_secret_key, user_public_key, credential) {\n    _assertClass(user_secret_key, CredUserSecretKey);\n    _assertClass(user_public_key, XfrPublicKey);\n    _assertClass(credential, Credential);\n    var ret = wasm.wasm_credential_commit(user_secret_key.ptr, user_public_key.ptr, credential.ptr);\n    return CredentialCommitmentData.__wrap(ret);\n}\n\n/**\n* Selectively reveals attributes committed to in a credential commitment\n* @param {CredUserSecretKey} user_sk - Secret key of credential user.\n* @param {Credential} credential - Credential object.\n* @param {JsValue} reveal_fields - Array of string names representing credentials to reveal (i.e.\n* `[\"credit_score\"]`).\n* @param {CredUserSecretKey} user_sk\n* @param {Credential} credential\n* @param {any} reveal_fields\n* @returns {CredentialRevealSig}\n*/\nexport function wasm_credential_reveal(user_sk, credential, reveal_fields) {\n    _assertClass(user_sk, CredUserSecretKey);\n    _assertClass(credential, Credential);\n    var ret = wasm.wasm_credential_reveal(user_sk.ptr, credential.ptr, addHeapObject(reveal_fields));\n    return CredentialRevealSig.__wrap(ret);\n}\n\n/**\n* Verifies revealed attributes from a commitment.\n* @param {CredIssuerPublicKey} issuer_pub_key - Public key of credential issuer.\n* @param {JsValue} attributes - Array of attribute assignments to check of the form `[{name: \"credit_score\",\n* val: \"760\"}]`.\n* @param {CredentialCommitment} commitment - Commitment to the credential.\n* @param {CredentialPoK} pok - Proof that the credential commitment is valid and commits\n* to the attribute values being revealed.\n* @param {CredIssuerPublicKey} issuer_pub_key\n* @param {any} attributes\n* @param {CredentialCommitment} commitment\n* @param {CredentialPoK} pok\n*/\nexport function wasm_credential_verify(issuer_pub_key, attributes, commitment, pok) {\n    _assertClass(issuer_pub_key, CredIssuerPublicKey);\n    _assertClass(commitment, CredentialCommitment);\n    _assertClass(pok, CredentialPoK);\n    wasm.wasm_credential_verify(issuer_pub_key.ptr, addHeapObject(attributes), commitment.ptr, pok.ptr);\n}\n\n/**\n* Returns information about traceable assets for a given transfer.\n* @param {JsValue} xfr_body - JSON of a transfer note from a transfer operation.\n* @param {AssetTracerKeyPair} tracer_keypair - Asset tracer keypair.\n* @param {JsValue} candidate_assets - List of asset types traced by the tracer keypair.\n* @param {any} xfr_body\n* @param {AssetTracerKeyPair} tracer_keypair\n* @param {any} _candidate_assets\n* @returns {any}\n*/\nexport function trace_assets(xfr_body, tracer_keypair, _candidate_assets) {\n    _assertClass(tracer_keypair, AssetTracerKeyPair);\n    var ret = wasm.trace_assets(addHeapObject(xfr_body), tracer_keypair.ptr, addHeapObject(_candidate_assets));\n    return takeObject(ret);\n}\n\n/**\n* Returns bech32 encoded representation of an XfrPublicKey.\n* @param {XfrPublicKey} key\n* @returns {string}\n*/\nexport function public_key_to_bech32(key) {\n    try {\n        _assertClass(key, XfrPublicKey);\n        wasm.public_key_to_bech32(8, key.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Converts a bech32 encoded public key string to a public key.\n* @param {string} addr\n* @returns {XfrPublicKey}\n*/\nexport function public_key_from_bech32(addr) {\n    var ptr0 = passStringToWasm0(addr, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.public_key_from_bech32(ptr0, len0);\n    return XfrPublicKey.__wrap(ret);\n}\n\n/**\n* @param {string} pk\n* @returns {string}\n*/\nexport function bech32_to_base64(pk) {\n    try {\n        var ptr0 = passStringToWasm0(pk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.bech32_to_base64(8, ptr0, len0);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} pk\n* @returns {string}\n*/\nexport function base64_to_bech32(pk) {\n    try {\n        var ptr0 = passStringToWasm0(pk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.base64_to_bech32(8, ptr0, len0);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} key_pair\n* @param {string} password\n* @returns {Uint8Array}\n*/\nexport function encryption_pbkdf2_aes256gcm(key_pair, password) {\n    var ptr0 = passStringToWasm0(key_pair, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.encryption_pbkdf2_aes256gcm(8, ptr0, len0, ptr1, len1);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v2;\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} enc_key_pair\n* @param {string} password\n* @returns {string}\n*/\nexport function decryption_pbkdf2_aes256gcm(enc_key_pair, password) {\n    try {\n        var ptr0 = passArray8ToWasm0(enc_key_pair, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.decryption_pbkdf2_aes256gcm(8, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* @param {string} sk_str\n* @returns {XfrKeyPair | undefined}\n*/\nexport function create_keypair_from_secret(sk_str) {\n    var ptr0 = passStringToWasm0(sk_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.create_keypair_from_secret(ptr0, len0);\n    return ret === 0 ? undefined : XfrKeyPair.__wrap(ret);\n}\n\n/**\n* @param {XfrKeyPair} kp\n* @returns {XfrPublicKey}\n*/\nexport function get_pk_from_keypair(kp) {\n    _assertClass(kp, XfrKeyPair);\n    var ret = wasm.get_pk_from_keypair(kp.ptr);\n    return XfrPublicKey.__wrap(ret);\n}\n\n/**\n* Randomly generate a 12words-length mnemonic.\n* @returns {string}\n*/\nexport function generate_mnemonic_default() {\n    try {\n        wasm.generate_mnemonic_default(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Generate mnemonic with custom length and language.\n* - @param `wordslen`: acceptable value are one of [ 12, 15, 18, 21, 24 ]\n* - @param `lang`: acceptable value are one of [ \"en\", \"zh\", \"zh_traditional\", \"fr\", \"it\", \"ko\", \"sp\", \"jp\" ]\n* @param {number} wordslen\n* @param {string} lang\n* @returns {string}\n*/\nexport function generate_mnemonic_custom(wordslen, lang) {\n    try {\n        var ptr0 = passStringToWasm0(lang, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.generate_mnemonic_custom(8, wordslen, ptr0, len0);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Restore the XfrKeyPair from a mnemonic with a default bip44-path,\n* that is \"m/44'/917'/0'/0/0\" (\"m/44'/coin'/account'/change/address\").\n* @param {string} phrase\n* @returns {XfrKeyPair}\n*/\nexport function restore_keypair_from_mnemonic_default(phrase) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.restore_keypair_from_mnemonic_default(ptr0, len0);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Restore the XfrKeyPair from a mnemonic with custom params,\n* in bip44 form.\n* @param {string} phrase\n* @param {string} lang\n* @param {BipPath} path\n* @returns {XfrKeyPair}\n*/\nexport function restore_keypair_from_mnemonic_bip44(phrase, lang, path) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(lang, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    _assertClass(path, BipPath);\n    var ret = wasm.restore_keypair_from_mnemonic_bip44(ptr0, len0, ptr1, len1, path.ptr);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* Restore the XfrKeyPair from a mnemonic with custom params,\n* in bip49 form.\n* @param {string} phrase\n* @param {string} lang\n* @param {BipPath} path\n* @returns {XfrKeyPair}\n*/\nexport function restore_keypair_from_mnemonic_bip49(phrase, lang, path) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(lang, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    _assertClass(path, BipPath);\n    var ret = wasm.restore_keypair_from_mnemonic_bip49(ptr0, len0, ptr1, len1, path.ptr);\n    return XfrKeyPair.__wrap(ret);\n}\n\n/**\n* ID of FRA, in `String` format.\n* @returns {string}\n*/\nexport function fra_get_asset_code() {\n    try {\n        wasm.fra_get_asset_code(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n}\n\n/**\n* Fee smaller than this value will be denied.\n* @returns {BigInt}\n*/\nexport function fra_get_minimal_fee() {\n    wasm.fra_get_minimal_fee(8);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    u32CvtShim[0] = r0;\n    u32CvtShim[1] = r1;\n    const n0 = uint64CvtShim[0];\n    return n0;\n}\n\n/**\n* The destination for fee to be transfered to.\n* @returns {XfrPublicKey}\n*/\nexport function fra_get_dest_pubkey() {\n    var ret = wasm.fra_get_dest_pubkey();\n    return XfrPublicKey.__wrap(ret);\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n/**\n* When an asset is defined, several options governing the assets must be\n* specified:\n* 1. **Traceable**: Records and identities of traceable assets can be decrypted by a provided tracing key. By defaults, assets do not have\n* any tracing policies.\n* 2. **Transferable**: Non-transferable assets can only be transferred once from the issuer to another user. By default, assets are transferable.\n* 3. **Updatable**: Whether the asset memo can be updated. By default, assets are not updatable.\n* 4. **Transfer signature rules**: Signature weights and threshold for a valid transfer. By\n*    default, there are no special signature requirements.\n* 5. **Max units**: Optional limit on the total number of units of this asset that can be issued.\n*    By default, assets do not have issuance caps.\n* @see {@link module:Findora-Wasm~TracingPolicies|TracingPolicies} for more information about tracing policies.\n* @see {@link module:Findora-Wasm~TransactionBuilder#add_operation_update_memo|add_operation_update_memo} for more information about how to add\n* a memo update operation to a transaction.\n* @see {@link module:Findora-Wasm~SignatureRules|SignatureRules} for more information about co-signatures.\n* @see {@link\n* module:Findora-Wasm~TransactionBuilder#add_operation_create_asset|add_operation_create_asset}\n* for information about how to add asset rules to an asset definition.\n*/\nexport class AssetRules {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetRules.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_assetrules_free(ptr);\n    }\n    /**\n    * Create a default set of asset rules. See class description for defaults.\n    * @returns {AssetRules}\n    */\n    static new() {\n        var ret = wasm.assetrules_new();\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Adds an asset tracing policy.\n    * @param {TracingPolicy} policy - Tracing policy for the new asset.\n    * @param {TracingPolicy} policy\n    * @returns {AssetRules}\n    */\n    add_tracing_policy(policy) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(policy, TracingPolicy);\n        var ret = wasm.assetrules_add_tracing_policy(ptr, policy.ptr);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Set a cap on the number of units of this asset that can be issued.\n    * @param {BigInt} max_units - Maximum number of units that can be issued.\n    * @param {BigInt} max_units\n    * @returns {AssetRules}\n    */\n    set_max_units(max_units) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        uint64CvtShim[0] = max_units;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.assetrules_set_max_units(ptr, low0, high0);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Transferability toggle. Assets that are not transferable can only be transferred by the asset\n    * issuer.\n    * @param {boolean} transferable - Boolean indicating whether asset can be transferred.\n    * @param {boolean} transferable\n    * @returns {AssetRules}\n    */\n    set_transferable(transferable) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ret = wasm.assetrules_set_transferable(ptr, transferable);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * The updatable flag determines whether the asset memo can be updated after issuance.\n    * @param {boolean} updatable - Boolean indicating whether asset memo can be updated.\n    * @see {@link module:Findora-Wasm~TransactionBuilder#add_operation_update_memo|add_operation_update_memo} for more information about how to add\n    * a memo update operation to a transaction.\n    * @param {boolean} updatable\n    * @returns {AssetRules}\n    */\n    set_updatable(updatable) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ret = wasm.assetrules_set_updatable(ptr, updatable);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Co-signature rules. Assets with co-signatue rules require additional weighted signatures to\n    * be transferred.\n    * @param {SignatureRules} multisig_rules - Co-signature restrictions.\n    * @param {SignatureRules} multisig_rules\n    * @returns {AssetRules}\n    */\n    set_transfer_multisig_rules(multisig_rules) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(multisig_rules, SignatureRules);\n        var ptr0 = multisig_rules.ptr;\n        multisig_rules.ptr = 0;\n        var ret = wasm.assetrules_set_transfer_multisig_rules(ptr, ptr0);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Set the decimal number of asset. Return error string if failed, otherwise return changed asset.\n    * #param {Number} decimals - The number of decimals used to set its user representation.\n    * Decimals should be 0 ~ 255.\n    * @param {number} decimals\n    * @returns {AssetRules}\n    */\n    set_decimals(decimals) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ret = wasm.assetrules_set_decimals(ptr, decimals);\n        return AssetRules.__wrap(ret);\n    }\n}\n/**\n* Key pair used by asset tracers to decrypt asset amounts, types, and identity\n* commitments associated with traceable asset transfers.\n* @see {@link module:Findora-Wasm.TracingPolicy|TracingPolicy} for information about tracing policies.\n* @see {@link module:Findora-Wasm~AssetRules#add_tracing_policy|add_tracing_policy} for information about how to add a tracing policy to\n* an asset definition.\n*/\nexport class AssetTracerKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetTracerKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_assettracerkeypair_free(ptr);\n    }\n    /**\n    * Creates a new tracer key pair.\n    * @returns {AssetTracerKeyPair}\n    */\n    static new() {\n        var ret = wasm.assettracerkeypair_new();\n        return AssetTracerKeyPair.__wrap(ret);\n    }\n}\n/**\n* Object representing an asset definition. Used to fetch tracing policies and any other\n* information that may be required to construct a valid transfer or issuance.\n*/\nexport class AssetType {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetType.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_assettype_free(ptr);\n    }\n    /**\n    * Builds an asset type from a JSON-encoded JavaScript value.\n    * @param {JsValue} val - JSON-encoded asset type fetched from ledger server with the `asset_token/{code}` route.\n    * Note: The first field of an asset type is `properties`. See the example below.\n    *\n    * @example\n    * \"properties\":{\n    *   \"code\":{\n    *     \"val\":[151,8,106,38,126,101,250,236,134,77,83,180,43,152,47,57,83,30,60,8,132,218,48,52,167,167,190,244,34,45,78,80]\n    *   },\n    *   \"issuer\":{\"key\":“iFW4jY_DQVSGED05kTseBBn0BllPB9Q9escOJUpf4DY=”},\n    *   \"memo\":“test memo”,\n    *   \"asset_rules\":{\n    *     \"transferable\":true,\n    *     \"updatable\":false,\n    *     \"transfer_multisig_rules\":null,\n    *     \"max_units\":5000\n    *   }\n    * }\n    *\n    * @see {@link module:Findora-Network~Network#getAssetProperties|Network.getAsset} for information about how to\n    * fetch an asset type from the ledger server.\n    * @param {any} json\n    * @returns {AssetType}\n    */\n    static from_json(json) {\n        try {\n            var ret = wasm.assettype_from_json(addBorrowedObject(json));\n            return AssetType.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Fetch the tracing policies associated with this asset type.\n    * @returns {TracingPolicies}\n    */\n    get_tracing_policies() {\n        var ret = wasm.assettype_get_tracing_policies(this.ptr);\n        return TracingPolicies.__wrap(ret);\n    }\n}\n/**\n* Authenticated address identity registry value. Contains a proof that the AIR result is stored\n* on the ledger.\n*/\nexport class AuthenticatedAIRResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AuthenticatedAIRResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_authenticatedairresult_free(ptr);\n    }\n    /**\n    * Construct an AIRResult from the JSON-encoded value returned by the ledger.\n    * @see {@link module:Findora-Network~Network#getAIRResult|Network.getAIRResult} for information about how to fetch a\n    * value from the address identity registry.\n    * @param {any} json\n    * @returns {AuthenticatedAIRResult}\n    */\n    static from_json(json) {\n        try {\n            var ret = wasm.authenticatedairresult_from_json(addBorrowedObject(json));\n            return AuthenticatedAIRResult.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Returns true if the authenticated AIR result proofs verify succesfully. If the proofs are\n    * valid, the identity commitment contained in the AIR result is a valid part of the ledger.\n    * @param {string} state_commitment - String representing the ledger state commitment.\n    * @param {string} state_commitment\n    * @returns {boolean}\n    */\n    is_valid(state_commitment) {\n        var ptr0 = passStringToWasm0(state_commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.authenticatedairresult_is_valid(this.ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n    * Returns the underlying credential commitment of the AIR result.\n    * @returns {CredentialCommitment | undefined}\n    */\n    get_commitment() {\n        var ret = wasm.authenticatedairresult_get_commitment(this.ptr);\n        return ret === 0 ? undefined : CredentialCommitment.__wrap(ret);\n    }\n}\n/**\n* Object representing an authenticable asset record. Clients can validate authentication proofs\n* against a ledger state commitment.\n*/\nexport class AuthenticatedAssetRecord {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AuthenticatedAssetRecord.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_authenticatedassetrecord_free(ptr);\n    }\n    /**\n    * Given a serialized state commitment, returns true if the\n    * authenticated UTXO proofs validate correctly and false otherwise. If the proofs validate, the\n    * asset record contained in this structure exists on the ledger and is unspent.\n    * @param {string} state_commitment - String representing the state commitment.\n    * @see {@link module:Findora-Network~Network#getStateCommitment|getStateCommitment} for instructions on fetching a ledger state commitment.\n    * @throws Will throw an error if the state commitment fails to deserialize.\n    * @param {string} state_commitment\n    * @returns {boolean}\n    */\n    is_valid(state_commitment) {\n        var ptr0 = passStringToWasm0(state_commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.authenticatedassetrecord_is_valid(this.ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n    * Builds an AuthenticatedAssetRecord from a JSON-encoded asset record returned from the ledger\n    * server.\n    * @param {JsValue} val - JSON-encoded asset record fetched from ledger server.\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for information about how to\n    * fetch an asset record from the ledger server.\n    * @param {any} record\n    * @returns {AuthenticatedAssetRecord}\n    */\n    static from_json_record(record) {\n        try {\n            var ret = wasm.authenticatedassetrecord_from_json_record(addBorrowedObject(record));\n            return AuthenticatedAssetRecord.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n* Use this struct to express a Bip44/Bip49 path.\n*/\nexport class BipPath {\n\n    static __wrap(ptr) {\n        const obj = Object.create(BipPath.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_bippath_free(ptr);\n    }\n    /**\n    * @param {number} coin\n    * @param {number} account\n    * @param {number} change\n    * @param {number} address\n    * @returns {BipPath}\n    */\n    static new(coin, account, change, address) {\n        var ret = wasm.bippath_new(coin, account, change, address);\n        return BipPath.__wrap(ret);\n    }\n}\n/**\n* This object represents an asset record owned by a ledger key pair.\n* @see {@link module:Findora-Wasm.open_client_asset_record|open_client_asset_record} for information about how to decrypt an encrypted asset\n* record.\n*/\nexport class ClientAssetRecord {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ClientAssetRecord.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_clientassetrecord_free(ptr);\n    }\n    /**\n    * Builds a client record from a JSON-encoded JavaScript value.\n    *\n    * @param {JsValue} val - JSON-encoded autehtnicated asset record fetched from ledger server with the `utxo_sid/{sid}` route,\n    * where `sid` can be fetched from the query server with the `get_owned_utxos/{address}` route.\n    * Note: The first field of an asset record is `utxo`. See the example below.\n    *\n    * @example\n    * \"utxo\":{\n    *   \"amount\":{\n    *     \"NonConfidential\":5\n    *   },\n    *  \"asset_type\":{\n    *     \"NonConfidential\":[113,168,158,149,55,64,18,189,88,156,133,204,156,46,106,46,232,62,69,233,157,112,240,132,164,120,4,110,14,247,109,127]\n    *   },\n    *   \"public_key\":\"Glf8dKF6jAPYHzR_PYYYfzaWqpYcMvnrIcazxsilmlA=\"\n    * }\n    *\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for information about how to\n    * fetch an asset record from the ledger server.\n    * @param {any} val\n    * @returns {ClientAssetRecord}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.clientassetrecord_from_json(addBorrowedObject(val));\n            return ClientAssetRecord.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * ClientAssetRecord ==> JsValue\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.clientassetrecord_to_json(this.ptr);\n        return takeObject(ret);\n    }\n}\n/**\n* Public key of a credential issuer.\n*/\nexport class CredIssuerPublicKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredIssuerPublicKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credissuerpublickey_free(ptr);\n    }\n}\n/**\n* Secret key of a credential issuer.\n*/\nexport class CredIssuerSecretKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredIssuerSecretKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credissuersecretkey_free(ptr);\n    }\n}\n/**\n* Public key of a credential user.\n*/\nexport class CredUserPublicKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredUserPublicKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_creduserpublickey_free(ptr);\n    }\n}\n/**\n* Secret key of a credential user.\n*/\nexport class CredUserSecretKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredUserSecretKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credusersecretkey_free(ptr);\n    }\n}\n/**\n* A user credential that can be used to selectively reveal credential attributes.\n* @see {@link module:Findora-Wasm.wasm_credential_commit|wasm_credential_commit} for information about how to commit to a credential.\n* @see {@link module:Findora-Wasm.wasm_credential_reveal|wasm_credential_reveal} for information about how to selectively reveal credential\n* attributes.\n*/\nexport class Credential {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Credential.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credential_free(ptr);\n    }\n}\n/**\n* Commitment to a credential record.\n* @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n* credential commitment.\n*/\nexport class CredentialCommitment {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialCommitment.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialcommitment_free(ptr);\n    }\n}\n/**\n* Commitment to a credential record, proof that the commitment is valid, and credential key that can be used\n* to open a commitment.\n*/\nexport class CredentialCommitmentData {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialCommitmentData.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialcommitmentdata_free(ptr);\n    }\n    /**\n    * Returns the underlying credential commitment.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialCommitment}\n    */\n    get_commitment() {\n        var ret = wasm.credentialcommitmentdata_get_commitment(this.ptr);\n        return CredentialCommitment.__wrap(ret);\n    }\n    /**\n    * Returns the underlying proof of knowledge that the credential is valid.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialPoK}\n    */\n    get_pok() {\n        var ret = wasm.credentialcommitmentdata_get_pok(this.ptr);\n        return CredentialPoK.__wrap(ret);\n    }\n    /**\n    * Returns the key used to generate the commitment.\n    * @see {@link module:Findora-Wasm.wasm_credential_open_commitment|wasm_credential_open_commitment} for information about how to open a\n    * credential commitment.\n    * @returns {CredentialCommitmentKey}\n    */\n    get_commit_key() {\n        var ret = wasm.credentialcommitmentdata_get_commit_key(this.ptr);\n        return CredentialCommitmentKey.__wrap(ret);\n    }\n}\n/**\n* Key used to generate a credential commitment.\n* @see {@link module:Findora-Wasm.wasm_credential_open_commitment|wasm_credential_open_commitment} for information about how to\n* open a credential commitment.\n*/\nexport class CredentialCommitmentKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialCommitmentKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialcommitmentkey_free(ptr);\n    }\n}\n/**\n* Key pair of a credential issuer.\n*/\nexport class CredentialIssuerKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialIssuerKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialissuerkeypair_free(ptr);\n    }\n    /**\n    * Returns the credential issuer's public key.\n    * @returns {CredIssuerPublicKey}\n    */\n    get_pk() {\n        var ret = wasm.credentialissuerkeypair_get_pk(this.ptr);\n        return CredIssuerPublicKey.__wrap(ret);\n    }\n    /**\n    * Returns the credential issuer's secret key.\n    * @returns {CredIssuerSecretKey}\n    */\n    get_sk() {\n        var ret = wasm.credentialissuerkeypair_get_sk(this.ptr);\n        return CredIssuerSecretKey.__wrap(ret);\n    }\n    /**\n    * Convert the key pair to a serialized value that can be used in the browser.\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.credentialissuerkeypair_to_json(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Generate a key pair from a JSON-serialized JavaScript value.\n    * @param {any} val\n    * @returns {CredentialIssuerKeyPair}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.credentialissuerkeypair_from_json(addBorrowedObject(val));\n            return CredentialIssuerKeyPair.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n* Proof that a credential is a valid re-randomization of a credential signed by a certain asset\n* issuer.\n* @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n* credential commitment.\n*/\nexport class CredentialPoK {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialPoK.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialpok_free(ptr);\n    }\n}\n/**\n* Reveal signature of a credential record.\n*/\nexport class CredentialRevealSig {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialRevealSig.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialrevealsig_free(ptr);\n    }\n    /**\n    * Returns the underlying credential commitment.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialCommitment}\n    */\n    get_commitment() {\n        var ret = wasm.credentialcommitmentdata_get_commitment(this.ptr);\n        return CredentialCommitment.__wrap(ret);\n    }\n    /**\n    * Returns the underlying proof of knowledge that the credential is valid.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialPoK}\n    */\n    get_pok() {\n        var ret = wasm.credentialrevealsig_get_pok(this.ptr);\n        return CredentialPoK.__wrap(ret);\n    }\n}\n/**\n* Signature of a credential record.\n*/\nexport class CredentialSignature {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialSignature.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialsignature_free(ptr);\n    }\n}\n/**\n* Key pair of a credential user.\n*/\nexport class CredentialUserKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialUserKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialuserkeypair_free(ptr);\n    }\n    /**\n    * Returns the credential issuer's public key.\n    * @returns {CredUserPublicKey}\n    */\n    get_pk() {\n        var ret = wasm.credentialuserkeypair_get_pk(this.ptr);\n        return CredUserPublicKey.__wrap(ret);\n    }\n    /**\n    * Returns the credential issuer's secret key.\n    * @returns {CredUserSecretKey}\n    */\n    get_sk() {\n        var ret = wasm.credentialuserkeypair_get_sk(this.ptr);\n        return CredUserSecretKey.__wrap(ret);\n    }\n    /**\n    * Convert the key pair to a serialized value that can be used in the browser.\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.credentialuserkeypair_to_json(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Generate a key pair from a JSON-serialized JavaScript value.\n    * @param {any} val\n    * @returns {CredentialUserKeyPair}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.credentialuserkeypair_from_json(addBorrowedObject(val));\n            return CredentialUserKeyPair.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n*/\nexport class FeeInputs {\n\n    static __wrap(ptr) {\n        const obj = Object.create(FeeInputs.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_feeinputs_free(ptr);\n    }\n    /**\n    * @returns {FeeInputs}\n    */\n    static new() {\n        var ret = wasm.feeinputs_new();\n        return FeeInputs.__wrap(ret);\n    }\n    /**\n    * @param {BigInt} am\n    * @param {TxoRef} tr\n    * @param {ClientAssetRecord} ar\n    * @param {OwnerMemo | undefined} om\n    * @param {XfrKeyPair} kp\n    */\n    append(am, tr, ar, om, kp) {\n        uint64CvtShim[0] = am;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(tr, TxoRef);\n        var ptr1 = tr.ptr;\n        tr.ptr = 0;\n        _assertClass(ar, ClientAssetRecord);\n        var ptr2 = ar.ptr;\n        ar.ptr = 0;\n        let ptr3 = 0;\n        if (!isLikeNone(om)) {\n            _assertClass(om, OwnerMemo);\n            ptr3 = om.ptr;\n            om.ptr = 0;\n        }\n        _assertClass(kp, XfrKeyPair);\n        var ptr4 = kp.ptr;\n        kp.ptr = 0;\n        wasm.feeinputs_append(this.ptr, low0, high0, ptr1, ptr2, ptr3, ptr4);\n    }\n    /**\n    * @param {BigInt} am\n    * @param {TxoRef} tr\n    * @param {ClientAssetRecord} ar\n    * @param {OwnerMemo | undefined} om\n    * @param {XfrKeyPair} kp\n    * @returns {FeeInputs}\n    */\n    append2(am, tr, ar, om, kp) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        uint64CvtShim[0] = am;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(tr, TxoRef);\n        var ptr1 = tr.ptr;\n        tr.ptr = 0;\n        _assertClass(ar, ClientAssetRecord);\n        var ptr2 = ar.ptr;\n        ar.ptr = 0;\n        let ptr3 = 0;\n        if (!isLikeNone(om)) {\n            _assertClass(om, OwnerMemo);\n            ptr3 = om.ptr;\n            om.ptr = 0;\n        }\n        _assertClass(kp, XfrKeyPair);\n        var ptr4 = kp.ptr;\n        kp.ptr = 0;\n        var ret = wasm.feeinputs_append2(ptr, low0, high0, ptr1, ptr2, ptr3, ptr4);\n        return FeeInputs.__wrap(ret);\n    }\n}\n/**\n* Blinding factor for a custom data operation. A blinding factor adds a random value to the\n* custom data being hashed to make the hash hiding.\n*/\nexport class KVBlind {\n\n    static __wrap(ptr) {\n        const obj = Object.create(KVBlind.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_kvblind_free(ptr);\n    }\n    /**\n    * Generate a random blinding factor.\n    * @returns {KVBlind}\n    */\n    static gen_random() {\n        var ret = wasm.kvblind_gen_random();\n        return KVBlind.__wrap(ret);\n    }\n    /**\n    * Convert the key pair to a JSON-encoded value that can be used in the browser.\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.kvblind_to_json(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Create a KVBlind from a JSON-encoded value.\n    * @param {any} val\n    * @returns {KVBlind}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.kvblind_from_json(addBorrowedObject(val));\n            return KVBlind.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n* Hash that can be stored in the ledger's custom data store.\n*/\nexport class KVHash {\n\n    static __wrap(ptr) {\n        const obj = Object.create(KVHash.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_kvhash_free(ptr);\n    }\n    /**\n    * Generate a new custom data hash without a blinding factor.\n    * @param {JsValue} data - Data to hash. Must be an array of bytes.\n    * @param {any} data\n    * @returns {KVHash}\n    */\n    static new_no_blind(data) {\n        try {\n            var ret = wasm.kvhash_new_no_blind(addBorrowedObject(data));\n            return KVHash.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Generate a new custom data hash with a blinding factor.\n    * @param {JsValue} data - Data to hash. Must be an array of bytes.\n    * @param {KVBlind} kv_blind - Optional blinding factor.\n    * @param {any} data\n    * @param {KVBlind} kv_blind\n    * @returns {KVHash}\n    */\n    static new_with_blind(data, kv_blind) {\n        try {\n            _assertClass(kv_blind, KVBlind);\n            var ret = wasm.kvhash_new_with_blind(addBorrowedObject(data), kv_blind.ptr);\n            return KVHash.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\n/**\n* Key for hashes in the ledger's custom data store.\n*/\nexport class Key {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Key.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_key_free(ptr);\n    }\n    /**\n    * Generate a random key.\n    * Figure out how to store prng ref in browser: https://bugtracker.findora.org/issues/63\n    * @returns {Key}\n    */\n    static gen_random() {\n        var ret = wasm.key_gen_random();\n        return Key.__wrap(ret);\n    }\n    /**\n    * Returns a base64 encoded version of the Key.\n    * @returns {string}\n    */\n    to_base64() {\n        try {\n            wasm.key_to_base64(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Generates a Key from a base64-encoded String.\n    * @param {string} string\n    * @returns {Key}\n    */\n    static from_base64(string) {\n        var ptr0 = passStringToWasm0(string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.key_from_base64(ptr0, len0);\n        return Key.__wrap(ret);\n    }\n}\n/**\n* Asset owner memo. Contains information needed to decrypt an asset record.\n* @see {@link module:Findora-Wasm.ClientAssetRecord|ClientAssetRecord} for more details about asset records.\n*/\nexport class OwnerMemo {\n\n    static __wrap(ptr) {\n        const obj = Object.create(OwnerMemo.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_ownermemo_free(ptr);\n    }\n    /**\n    * Builds an owner memo from a JSON-serialized JavaScript value.\n    * @param {JsValue} val - JSON owner memo fetched from query server with the `get_owner_memo/{sid}` route,\n    * where `sid` can be fetched from the query server with the `get_owned_utxos/{address}` route. See the example below.\n    *\n    * @example\n    * {\n    *   \"blind_share\":[91,251,44,28,7,221,67,155,175,213,25,183,70,90,119,232,212,238,226,142,159,200,54,19,60,115,38,221,248,202,74,248],\n    *   \"lock\":{\"ciphertext\":[119,54,117,136,125,133,112,193],\"encoded_rand\":\"8KDql2JphPB5WLd7-aYE1bxTQAcweFSmrqymLvPDntM=\"}\n    * }\n    * @param {any} val\n    * @returns {OwnerMemo}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.ownermemo_from_json(addBorrowedObject(val));\n            return OwnerMemo.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Creates a clone of the owner memo.\n    * @returns {OwnerMemo}\n    */\n    clone() {\n        var ret = wasm.ownermemo_clone(this.ptr);\n        return OwnerMemo.__wrap(ret);\n    }\n}\n/**\n* Public parameters necessary for generating asset records. Generating this is expensive and\n* should be done as infrequently as possible.\n* @see {@link module:Findora-Wasm~TransactionBuilder#add_basic_issue_asset|add_basic_issue_asset}\n* for information using public parameters to create issuance asset records.\n*/\nexport class PublicParams {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PublicParams.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_publicparams_free(ptr);\n    }\n    /**\n    * Generates a new set of parameters.\n    * @returns {PublicParams}\n    */\n    static new() {\n        var ret = wasm.publicparams_new();\n        return PublicParams.__wrap(ret);\n    }\n}\n/**\n* Stores threshold and weights for a multisignature requirement.\n*/\nexport class SignatureRules {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SignatureRules.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_signaturerules_free(ptr);\n    }\n    /**\n    * Creates a new set of co-signature rules.\n    *\n    * @param {BigInt} threshold - Minimum sum of signature weights that is required for an asset\n    * transfer.\n    * @param {JsValue} weights - Array of public key weights of the form `[[\"kAb...\", BigInt(5)]]', where the\n    * first element of each tuple is a base64 encoded public key and the second is the key's\n    * associated weight.\n    * @param {BigInt} threshold\n    * @param {any} weights\n    * @returns {SignatureRules}\n    */\n    static new(threshold, weights) {\n        uint64CvtShim[0] = threshold;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.signaturerules_new(low0, high0, addHeapObject(weights));\n        return SignatureRules.__wrap(ret);\n    }\n}\n/**\n* A collection of tracing policies. Use this object when constructing asset transfers to generate\n* the correct tracing proofs for traceable assets.\n*/\nexport class TracingPolicies {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TracingPolicies.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_tracingpolicies_free(ptr);\n    }\n}\n/**\n* Tracing policy for asset transfers. Can be configured to track credentials, the asset type and\n* amount, or both.\n*/\nexport class TracingPolicy {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TracingPolicy.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_tracingpolicy_free(ptr);\n    }\n    /**\n    * @param {AssetTracerKeyPair} tracing_key\n    * @returns {TracingPolicy}\n    */\n    static new_with_tracing(tracing_key) {\n        _assertClass(tracing_key, AssetTracerKeyPair);\n        var ret = wasm.tracingpolicy_new_with_tracing(tracing_key.ptr);\n        return TracingPolicy.__wrap(ret);\n    }\n    /**\n    * @param {AssetTracerKeyPair} tracing_key\n    * @param {CredIssuerPublicKey} cred_issuer_key\n    * @param {any} reveal_map\n    * @param {boolean} tracing\n    * @returns {TracingPolicy}\n    */\n    static new_with_identity_tracing(tracing_key, cred_issuer_key, reveal_map, tracing) {\n        _assertClass(tracing_key, AssetTracerKeyPair);\n        _assertClass(cred_issuer_key, CredIssuerPublicKey);\n        var ret = wasm.tracingpolicy_new_with_identity_tracing(tracing_key.ptr, cred_issuer_key.ptr, addHeapObject(reveal_map), tracing);\n        return TracingPolicy.__wrap(ret);\n    }\n}\n/**\n* Structure that allows users to construct arbitrary transactions.\n*/\nexport class TransactionBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TransactionBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_transactionbuilder_free(ptr);\n    }\n    /**\n    * @param am: amount to pay\n    * @param kp: owner's XfrKeyPair\n    * @param {BigInt} am\n    * @param {XfrKeyPair} kp\n    * @returns {TransactionBuilder}\n    */\n    add_fee_relative_auto(am, kp) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        uint64CvtShim[0] = am;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(kp, XfrKeyPair);\n        var ptr1 = kp.ptr;\n        kp.ptr = 0;\n        var ret = wasm.transactionbuilder_add_fee_relative_auto(ptr, low0, high0, ptr1);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Use this func to get the necessary infomations for generating `Relative Inputs`\n    *\n    * - TxoRef::Relative(\"Element index of the result\")\n    * - ClientAssetRecord::from_json(\"Element of the result\")\n    * @returns {any[]}\n    */\n    get_relative_outputs() {\n        wasm.transactionbuilder_get_relative_outputs(8, this.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4);\n        return v0;\n    }\n    /**\n    * As the last operation of any transaction,\n    * add a static fee to the transaction.\n    * @param {FeeInputs} inputs\n    * @returns {TransactionBuilder}\n    */\n    add_fee(inputs) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(inputs, FeeInputs);\n        var ptr0 = inputs.ptr;\n        inputs.ptr = 0;\n        var ret = wasm.transactionbuilder_add_fee(ptr, ptr0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * A simple fee checker for mainnet v1.0.\n    *\n    * SEE [check_fee](ledger::data_model::Transaction::check_fee)\n    * @returns {boolean}\n    */\n    check_fee() {\n        var ret = wasm.transactionbuilder_check_fee(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * Create a new transaction builder.\n    * @param {BigInt} seq_id - Unique sequence ID to prevent replay attacks.\n    * @param {BigInt} seq_id\n    * @returns {TransactionBuilder}\n    */\n    static new(seq_id) {\n        uint64CvtShim[0] = seq_id;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.transactionbuilder_new(low0, high0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransactionBuilder to add an asset definition operation to a transaction builder instance.\n    * @example <caption> Error handling </caption>\n    * try {\n    *     await wasm.add_operation_create_asset(wasm.new_keypair(), \"test_memo\", wasm.random_asset_type(), wasm.AssetRules.default());\n    * } catch (err) {\n    *     console.log(err)\n    * }\n    *\n    * @param {XfrKeyPair} key_pair -  Issuer XfrKeyPair.\n    * @param {string} memo - Text field for asset definition.\n    * @param {string} token_code - Optional Base64 string representing the token code of the asset to be issued.\n    * If empty, a token code will be chosen at random.\n    * @param {AssetRules} asset_rules - Asset rules object specifying which simple policies apply\n    * to the asset.\n    * @param {XfrKeyPair} key_pair\n    * @param {string} memo\n    * @param {string} token_code\n    * @param {AssetRules} asset_rules\n    * @returns {TransactionBuilder}\n    */\n    add_operation_create_asset(key_pair, memo, token_code, asset_rules) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(memo, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(token_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        _assertClass(asset_rules, AssetRules);\n        var ptr2 = asset_rules.ptr;\n        asset_rules.ptr = 0;\n        var ret = wasm.transactionbuilder_add_operation_create_asset(ptr, key_pair.ptr, ptr0, len0, ptr1, len1, ptr2);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @ignore\n    * @param {XfrKeyPair} key_pair\n    * @param {string} memo\n    * @param {string} token_code\n    * @param {string} policy_choice\n    * @param {AssetRules} asset_rules\n    * @returns {TransactionBuilder}\n    */\n    add_operation_create_asset_with_policy(key_pair, memo, token_code, policy_choice, asset_rules) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(memo, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(token_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passStringToWasm0(policy_choice, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        _assertClass(asset_rules, AssetRules);\n        var ptr3 = asset_rules.ptr;\n        asset_rules.ptr = 0;\n        var ret = wasm.transactionbuilder_add_operation_create_asset_with_policy(ptr, key_pair.ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @ignore\n    * @param {string} token_code\n    * @param {string} which_check\n    * @returns {TransactionBuilder}\n    */\n    add_policy_option(token_code, which_check) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ptr0 = passStringToWasm0(token_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(which_check, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_policy_option(ptr, ptr0, len0, ptr1, len1);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransactionBuilder to add an asset issuance to a transaction builder instance.\n    *\n    * Use this function for simple one-shot issuances.\n    *\n    * @param {XfrKeyPair} key_pair  - Issuer XfrKeyPair.\n    * and types of traced assets.\n    * @param {string} code - base64 string representing the token code of the asset to be issued.\n    * @param {BigInt} seq_num - Issuance sequence number. Every subsequent issuance of a given asset type must have a higher sequence number than before.\n    * @param {BigInt} amount - Amount to be issued.\n    * @param {boolean} conf_amount - `true` means the asset amount is confidential, and `false` means it's nonconfidential.\n    * @param {PublicParams} zei_params - Public parameters necessary to generate asset records.\n    * @param {XfrKeyPair} key_pair\n    * @param {string} code\n    * @param {BigInt} seq_num\n    * @param {BigInt} amount\n    * @param {boolean} conf_amount\n    * @param {PublicParams} zei_params\n    * @returns {TransactionBuilder}\n    */\n    add_basic_issue_asset(key_pair, code, seq_num, amount, conf_amount, zei_params) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = seq_num;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        uint64CvtShim[0] = amount;\n        const low2 = u32CvtShim[0];\n        const high2 = u32CvtShim[1];\n        _assertClass(zei_params, PublicParams);\n        var ret = wasm.transactionbuilder_add_basic_issue_asset(ptr, key_pair.ptr, ptr0, len0, low1, high1, low2, high2, conf_amount, zei_params.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that appends a credential commitment to the address\n    * identity registry.\n    * @param {XfrKeyPair} key_pair - Ledger key that is tied to the credential.\n    * @param {CredUserPublicKey} user_public_key - Public key of the credential user.\n    * @param {CredIssuerPublicKey} issuer_public_key - Public key of the credential issuer.\n    * @param {CredentialCommitment} commitment - Credential commitment to add to the address identity registry.\n    * @param {CredPoK} pok- Proof that the credential commitment is valid.\n    * @see {@link module:Findora-Wasm.wasm_credential_commit|wasm_credential_commit} for information about how to generate a credential\n    * commitment.\n    * @param {XfrKeyPair} key_pair\n    * @param {CredUserPublicKey} user_public_key\n    * @param {CredIssuerPublicKey} issuer_public_key\n    * @param {CredentialCommitment} commitment\n    * @param {CredentialPoK} pok\n    * @returns {TransactionBuilder}\n    */\n    add_operation_air_assign(key_pair, user_public_key, issuer_public_key, commitment, pok) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(key_pair, XfrKeyPair);\n        _assertClass(user_public_key, CredUserPublicKey);\n        _assertClass(issuer_public_key, CredIssuerPublicKey);\n        _assertClass(commitment, CredentialCommitment);\n        _assertClass(pok, CredentialPoK);\n        var ret = wasm.transactionbuilder_add_operation_air_assign(ptr, key_pair.ptr, user_public_key.ptr, issuer_public_key.ptr, commitment.ptr, pok.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that removes a hash from ledger's custom data\n    * store.\n    * @param {XfrKeyPair} auth_key_pair - Key pair that is authorized to delete the hash at the\n    * provided key.\n    * @param {Key} key - The key of the custom data store whose value will be cleared if the\n    * transaction validates.\n    * @param {BigInt} seq_num - Nonce to prevent replays.\n    * @param {XfrKeyPair} auth_key_pair\n    * @param {Key} key\n    * @param {BigInt} seq_num\n    * @returns {TransactionBuilder}\n    */\n    add_operation_kv_update_no_hash(auth_key_pair, key, seq_num) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(auth_key_pair, XfrKeyPair);\n        _assertClass(key, Key);\n        uint64CvtShim[0] = seq_num;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.transactionbuilder_add_operation_kv_update_no_hash(ptr, auth_key_pair.ptr, key.ptr, low0, high0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that adds a hash to the ledger's custom data\n    * store.\n    * @param {XfrKeyPair} auth_key_pair - Key pair that is authorized to add the hash at the\n    * provided key.\n    * @param {Key} key - The key of the custom data store the value will be added to if the\n    * transaction validates.\n    * @param {KVHash} hash - The hash to add to the custom data store.\n    * @param {BigInt} seq_num - Nonce to prevent replays.\n    * @param {XfrKeyPair} auth_key_pair\n    * @param {Key} key\n    * @param {BigInt} seq_num\n    * @param {KVHash} kv_hash\n    * @returns {TransactionBuilder}\n    */\n    add_operation_kv_update_with_hash(auth_key_pair, key, seq_num, kv_hash) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(auth_key_pair, XfrKeyPair);\n        _assertClass(key, Key);\n        uint64CvtShim[0] = seq_num;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(kv_hash, KVHash);\n        var ret = wasm.transactionbuilder_add_operation_kv_update_with_hash(ptr, auth_key_pair.ptr, key.ptr, low0, high0, kv_hash.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that adds a hash to the ledger's custom data\n    * store.\n    * @param {XfrKeyPair} auth_key_pair - Asset creator key pair.\n    * @param {String} code - base64 string representing token code of the asset whose memo will be updated.\n    * transaction validates.\n    * @param {String} new_memo - The new asset memo.\n    * @see {@link module:Findora-Wasm~AssetRules#set_updatable|AssetRules.set_updatable} for more information about how\n    * to define an updatable asset.\n    * @param {XfrKeyPair} auth_key_pair\n    * @param {string} code\n    * @param {string} new_memo\n    * @returns {TransactionBuilder}\n    */\n    add_operation_update_memo(auth_key_pair, code, new_memo) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(auth_key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(new_memo, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_operation_update_memo(ptr, auth_key_pair.ptr, ptr0, len0, ptr1, len1);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds a serialized transfer asset operation to a transaction builder instance.\n    * @param {string} op - a JSON-serialized transfer operation.\n    * @see {@link module:Findora-Wasm~TransferOperationBuilder} for details on constructing a transfer operation.\n    * @throws Will throw an error if `op` fails to deserialize.\n    * @param {string} op\n    * @returns {TransactionBuilder}\n    */\n    add_transfer_operation(op) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ptr0 = passStringToWasm0(op, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_transfer_operation(ptr, ptr0, len0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @param {XfrKeyPair} kp\n    * @returns {TransactionBuilder}\n    */\n    sign(kp) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(kp, XfrKeyPair);\n        var ret = wasm.transactionbuilder_sign(ptr, kp.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Extracts the serialized form of a transaction.\n    * @returns {string}\n    */\n    transaction() {\n        try {\n            wasm.transactionbuilder_transaction(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Calculates transaction handle.\n    * @returns {string}\n    */\n    transaction_handle() {\n        try {\n            wasm.transactionbuilder_transaction_handle(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Fetches a client record from a transaction.\n    * @param {number} idx - Record to fetch. Records are added to the transaction builder sequentially.\n    * @param {number} idx\n    * @returns {ClientAssetRecord}\n    */\n    get_owner_record(idx) {\n        var ret = wasm.transactionbuilder_get_owner_record(this.ptr, idx);\n        return ClientAssetRecord.__wrap(ret);\n    }\n    /**\n    * Fetches an owner memo from a transaction\n    * @param {number} idx - Owner memo to fetch. Owner memos are added to the transaction builder sequentially.\n    * @param {number} idx\n    * @returns {OwnerMemo | undefined}\n    */\n    get_owner_memo(idx) {\n        var ret = wasm.transactionbuilder_get_owner_memo(this.ptr, idx);\n        return ret === 0 ? undefined : OwnerMemo.__wrap(ret);\n    }\n}\n/**\n* Structure that enables clients to construct complex transfers.\n*/\nexport class TransferOperationBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TransferOperationBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_transferoperationbuilder_free(ptr);\n    }\n    /**\n    * Create a new transfer operation builder.\n    * @returns {TransferOperationBuilder}\n    */\n    static new() {\n        var ret = wasm.transferoperationbuilder_new();\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * @ignore\n    * @returns {string}\n    */\n    debug() {\n        try {\n            wasm.transferoperationbuilder_debug(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an input to a transfer operation builder.\n    * @param {TxoRef} txo_ref - Absolute or relative utxo reference\n    * @param {string} asset_record - Serialized client asset record to serve as transfer input. This record must exist on the\n    * ledger for the transfer to be valid.\n    * @param {OwnerMemo} owner_memo - Opening parameters.\n    * @param tracing_key {AssetTracerKeyPair} - Tracing key, must be added to traceable\n    * assets.\n    * @param {XfrKeyPair} key - Key pair associated with the input.\n    * @param {BigInt} amount - Amount of input record to transfer.\n    * @see {@link module:Findora-Wasm~TxoRef#create_absolute_txo_ref|TxoRef.create_absolute_txo_ref}\n    * or {@link module:Findora-Wasm~TxoRef#create_relative_txo_ref|TxoRef.create_relative_txo_ref} for details on txo\n    * references.\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for details on fetching blind asset records.\n    * @throws Will throw an error if `oar` or `txo_ref` fail to deserialize.\n    * @param {TxoRef} txo_ref\n    * @param {ClientAssetRecord} asset_record\n    * @param {OwnerMemo | undefined} owner_memo\n    * @param {TracingPolicies} tracing_policies\n    * @param {XfrKeyPair} key\n    * @param {BigInt} amount\n    * @returns {TransferOperationBuilder}\n    */\n    add_input_with_tracing(txo_ref, asset_record, owner_memo, tracing_policies, key, amount) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(txo_ref, TxoRef);\n        var ptr0 = txo_ref.ptr;\n        txo_ref.ptr = 0;\n        _assertClass(asset_record, ClientAssetRecord);\n        var ptr1 = asset_record.ptr;\n        asset_record.ptr = 0;\n        let ptr2 = 0;\n        if (!isLikeNone(owner_memo)) {\n            _assertClass(owner_memo, OwnerMemo);\n            ptr2 = owner_memo.ptr;\n            owner_memo.ptr = 0;\n        }\n        _assertClass(tracing_policies, TracingPolicies);\n        _assertClass(key, XfrKeyPair);\n        uint64CvtShim[0] = amount;\n        const low3 = u32CvtShim[0];\n        const high3 = u32CvtShim[1];\n        var ret = wasm.transferoperationbuilder_add_input_with_tracing(ptr, ptr0, ptr1, ptr2, tracing_policies.ptr, key.ptr, low3, high3);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an input to a transfer operation builder.\n    * @param {TxoRef} txo_ref - Absolute or relative utxo reference\n    * @param {string} asset_record - Serialized client asset record to serve as transfer input. This record must exist on the\n    * ledger for the transfer to be valid\n    * @param {OwnerMemo} owner_memo - Opening parameters.\n    * @param {XfrKeyPair} key - Key pair associated with the input.\n    * @param {BigInt} amount - Amount of input record to transfer\n    * or {@link module:Findora-Wasm~TxoRef#create_relative_txo_ref|TxoRef.create_relative_txo_ref} for details on txo\n    * references.\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for details on fetching blind asset records.\n    * @throws Will throw an error if `oar` or `txo_ref` fail to deserialize.\n    * @param {TxoRef} txo_ref\n    * @param {ClientAssetRecord} asset_record\n    * @param {OwnerMemo | undefined} owner_memo\n    * @param {XfrKeyPair} key\n    * @param {BigInt} amount\n    * @returns {TransferOperationBuilder}\n    */\n    add_input_no_tracing(txo_ref, asset_record, owner_memo, key, amount) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(txo_ref, TxoRef);\n        var ptr0 = txo_ref.ptr;\n        txo_ref.ptr = 0;\n        _assertClass(asset_record, ClientAssetRecord);\n        let ptr1 = 0;\n        if (!isLikeNone(owner_memo)) {\n            _assertClass(owner_memo, OwnerMemo);\n            ptr1 = owner_memo.ptr;\n            owner_memo.ptr = 0;\n        }\n        _assertClass(key, XfrKeyPair);\n        uint64CvtShim[0] = amount;\n        const low2 = u32CvtShim[0];\n        const high2 = u32CvtShim[1];\n        var ret = wasm.transferoperationbuilder_add_input_no_tracing(ptr, ptr0, asset_record.ptr, ptr1, key.ptr, low2, high2);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an output to a transfer operation builder.\n    *\n    * @param {BigInt} amount - amount to transfer to the recipient.\n    * @param {XfrPublicKey} recipient - public key of the recipient.\n    * @param tracing_key {AssetTracerKeyPair} - Optional tracing key, must be added to traced\n    * assets.\n    * @param code {string} - String representation of the asset token code.\n    * @param conf_amount {boolean} - `true` means the output's asset amount is confidential, and `false` means it's nonconfidential.\n    * @param conf_type {boolean} - `true` means the output's asset type is confidential, and `false` means it's nonconfidential.\n    * @throws Will throw an error if `code` fails to deserialize.\n    * @param {BigInt} amount\n    * @param {XfrPublicKey} recipient\n    * @param {TracingPolicies} tracing_policies\n    * @param {string} code\n    * @param {boolean} conf_amount\n    * @param {boolean} conf_type\n    * @returns {TransferOperationBuilder}\n    */\n    add_output_with_tracing(amount, recipient, tracing_policies, code, conf_amount, conf_type) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        uint64CvtShim[0] = amount;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(recipient, XfrPublicKey);\n        _assertClass(tracing_policies, TracingPolicies);\n        var ptr1 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transferoperationbuilder_add_output_with_tracing(ptr, low0, high0, recipient.ptr, tracing_policies.ptr, ptr1, len1, conf_amount, conf_type);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an output to a transfer operation builder.\n    *\n    * @param {BigInt} amount - amount to transfer to the recipient\n    * @param {XfrPublicKey} recipient - public key of the recipient\n    * @param code {string} - String representaiton of the asset token code\n    * @param conf_amount {boolean} - `true` means the output's asset amount is confidential, and `false` means it's nonconfidential.\n    * @param conf_type {boolean} - `true` means the output's asset type is confidential, and `false` means it's nonconfidential.\n    * @throws Will throw an error if `code` fails to deserialize.\n    * @param {BigInt} amount\n    * @param {XfrPublicKey} recipient\n    * @param {string} code\n    * @param {boolean} conf_amount\n    * @param {boolean} conf_type\n    * @returns {TransferOperationBuilder}\n    */\n    add_output_no_tracing(amount, recipient, code, conf_amount, conf_type) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        uint64CvtShim[0] = amount;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(recipient, XfrPublicKey);\n        var ptr1 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transferoperationbuilder_add_output_no_tracing(ptr, low0, high0, recipient.ptr, ptr1, len1, conf_amount, conf_type);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to ensure the transfer inputs and outputs are balanced.\n    * This function will add change outputs for all unspent portions of input records.\n    * @throws Will throw an error if the transaction cannot be balanced.\n    * @returns {TransferOperationBuilder}\n    */\n    balance() {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ret = wasm.transferoperationbuilder_balance(ptr);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to finalize the transaction.\n    *\n    * @throws Will throw an error if input and output amounts do not add up.\n    * @throws Will throw an error if not all record owners have signed the transaction.\n    * @returns {TransferOperationBuilder}\n    */\n    create() {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ret = wasm.transferoperationbuilder_create(ptr);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add a signature to the operation.\n    *\n    * All input owners must sign.\n    *\n    * @param {XfrKeyPair} kp - key pair of one of the input owners.\n    * @param {XfrKeyPair} kp\n    * @returns {TransferOperationBuilder}\n    */\n    sign(kp) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(kp, XfrKeyPair);\n        var ret = wasm.transferoperationbuilder_sign(ptr, kp.ptr);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Co-sign an input index\n    * @param {XfrKeyPair} kp - Co-signature key.\n    * @params {Number} input_idx - Input index to apply co-signature to.\n    * @param {XfrKeyPair} kp\n    * @param {number} input_idx\n    * @returns {TransferOperationBuilder}\n    */\n    add_cosignature(kp, input_idx) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(kp, XfrKeyPair);\n        var ret = wasm.transferoperationbuilder_add_cosignature(ptr, kp.ptr, input_idx);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    builder() {\n        try {\n            wasm.transferoperationbuilder_builder(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Wraps around TransferOperationBuilder to extract an operation expression as JSON.\n    * @returns {string}\n    */\n    transaction() {\n        try {\n            wasm.transferoperationbuilder_transaction(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\n/**\n* Indicates whether the TXO ref is an absolute or relative value.\n*/\nexport class TxoRef {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TxoRef.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_txoref_free(ptr);\n    }\n    /**\n    * Creates a relative txo reference as a JSON string. Relative txo references are offset\n    * backwards from the operation they appear in -- 0 is the most recent, (n-1) is the first output\n    * of the transaction.\n    *\n    * Use relative txo indexing when referring to outputs of intermediate operations (e.g. a\n    * transaction containing both an issuance and a transfer).\n    *\n    * # Arguments\n    * @param {BigInt} idx -  Relative TXO (transaction output) SID.\n    * @param {BigInt} idx\n    * @returns {TxoRef}\n    */\n    static relative(idx) {\n        uint64CvtShim[0] = idx;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.txoref_relative(low0, high0);\n        return TxoRef.__wrap(ret);\n    }\n    /**\n    * Creates an absolute transaction reference as a JSON string.\n    *\n    * Use absolute txo indexing when referring to an output that has been assigned a utxo index (i.e.\n    * when the utxo has been committed to the ledger in an earlier transaction).\n    *\n    * # Arguments\n    * @param {BigInt} idx -  Txo (transaction output) SID.\n    * @param {BigInt} idx\n    * @returns {TxoRef}\n    */\n    static absolute(idx) {\n        uint64CvtShim[0] = idx;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.txoref_absolute(low0, high0);\n        return TxoRef.__wrap(ret);\n    }\n}\n/**\n*/\nexport class XfrKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(XfrKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_xfrkeypair_free(ptr);\n    }\n    /**\n    * @returns {XfrPublicKey}\n    */\n    get pub_key() {\n        var ret = wasm.__wbg_get_xfrkeypair_pub_key(this.ptr);\n        return XfrPublicKey.__wrap(ret);\n    }\n    /**\n    * @param {XfrPublicKey} arg0\n    */\n    set pub_key(arg0) {\n        _assertClass(arg0, XfrPublicKey);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_xfrkeypair_pub_key(this.ptr, ptr0);\n    }\n}\n/**\n*/\nexport class XfrPublicKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(XfrPublicKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_xfrpublickey_free(ptr);\n    }\n}\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_getRandomValues_57e4008f45f0e105 = handleError(function(arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n});\n\nexport const __wbg_randomFillSync_d90848a552cbd666 = handleError(function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n});\n\nexport const __wbg_self_f865985e662246aa = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nexport const __wbg_static_accessor_MODULE_39947eb3fe77895f = function() {\n    var ret = module;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_require_c59851dfa0dc7e78 = handleError(function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n});\n\nexport const __wbg_crypto_bfb05100db79193b = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_msCrypto_f6dddc6ae048b7e2 = function(arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport const __wbg_self_86b4b13392c7af56 = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nexport const __wbg_static_accessor_MODULE_452b4680e8614c81 = function() {\n    var ret = module;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_require_f5521a5b85ad2542 = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_crypto_b8c92eaac23d0d80 = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_msCrypto_9ad6677321a08dd8 = function(arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_getRandomValues_dd27e6b0652b3236 = function(arg0) {\n    var ret = getObject(arg0).getRandomValues;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_getRandomValues_e57c9b75ddead065 = function(arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n};\n\nexport const __wbg_randomFillSync_d2ba53160aec6aba = function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n};\n\nexport const __wbg_buffer_eb5185aa4a8e9c62 = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_length_2e324c9c0e74a81d = function(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nexport const __wbg_new_3d94e83f0a6bf252 = function(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_set_d4d7629a896d4b3e = function(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport const __wbg_newwithlength_02a009c0728d3ba1 = function(arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_subarray_cc54babc55409ee0 = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_debug_string = function(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\nexport const __wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n","let imports = {};\nimports['__wbindgen_placeholder__'] = module.exports;\nlet wasm;\nconst { TextDecoder } = require(String.raw`util`);\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetNodeBufferMemory0 = null;\nfunction getNodeBufferMemory0() {\n    if (cachegetNodeBufferMemory0 === null || cachegetNodeBufferMemory0.buffer !== wasm.memory.buffer) {\n        cachegetNodeBufferMemory0 = Buffer.from(wasm.memory.buffer);\n    }\n    return cachegetNodeBufferMemory0;\n}\n\nfunction passStringToWasm0(arg, malloc) {\n\n    const len = Buffer.byteLength(arg);\n    const ptr = malloc(len);\n    getNodeBufferMemory0().write(arg, ptr, len);\n    WASM_VECTOR_LEN = len;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nconst u32CvtShim = new Uint32Array(2);\n\nconst uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\n\nlet stack_pointer = 32;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n/**\n* Returns the git commit hash and commit date of the commit this library was built against.\n* @returns {string}\n*/\nmodule.exports.build_id = function() {\n    try {\n        wasm.build_id(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Generates random Base64 encoded asset type as a Base64 string. Used in asset definitions.\n* @see {@link\n* module:Findora-Wasm~TransactionBuilder#add_operation_create_asset|add_operation_create_asset}\n* for instructions on how to define an asset with a new\n* asset type\n* @returns {string}\n*/\nmodule.exports.random_asset_type = function() {\n    try {\n        wasm.random_asset_type(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Generates asset type as a Base64 string from a JSON-serialized JavaScript value.\n* @param {any} val\n* @returns {string}\n*/\nmodule.exports.asset_type_from_jsvalue = function(val) {\n    try {\n        wasm.asset_type_from_jsvalue(8, addBorrowedObject(val));\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        heap[stack_pointer++] = undefined;\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Given a serialized state commitment and transaction, returns true if the transaction correctly\n* hashes up to the state commitment and false otherwise.\n* @param {string} state_commitment - String representing the state commitment.\n* @param {string} authenticated_txn - String representing the transaction.\n* @see {@link module:Network~Network#getTxn|Network.getTxn} for instructions on fetching a transaction from the ledger.\n* @see {@link module:Network~Network#getStateCommitment|Network.getStateCommitment}\n* for instructions on fetching a ledger state commitment.\n* @throws Will throw an error if the state commitment or the transaction fails to deserialize.\n* @param {string} state_commitment\n* @param {string} authenticated_txn\n* @returns {boolean}\n*/\nmodule.exports.verify_authenticated_txn = function(state_commitment, authenticated_txn) {\n    var ptr0 = passStringToWasm0(state_commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(authenticated_txn, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.verify_authenticated_txn(ptr0, len0, ptr1, len1);\n    return ret !== 0;\n};\n\n/**\n* Given a serialized state commitment and an authenticated custom data result, returns true if the custom data result correctly\n* hashes up to the state commitment and false otherwise.\n* @param {string} state_commitment - String representing the state commitment.\n* @param {JsValue} authenticated_txn - JSON-encoded value representing the authenticated custom\n* data result.\n* @throws Will throw an error if the state commitment or the authenticated result fail to deserialize.\n* @param {string} state_commitment\n* @param {any} authenticated_res\n* @returns {boolean}\n*/\nmodule.exports.verify_authenticated_custom_data_result = function(state_commitment, authenticated_res) {\n    var ptr0 = passStringToWasm0(state_commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.verify_authenticated_custom_data_result(ptr0, len0, addHeapObject(authenticated_res));\n    return ret !== 0;\n};\n\n/**\n* Performs a simple loan repayment fee calculation.\n*\n* The returned fee is a fraction of the `outstanding_balance`\n* where the interest rate is expressed as a fraction `ir_numerator` / `ir_denominator`.\n*\n* This function is specific to the  Lending Demo.\n* @param {BigInt} ir_numerator - Interest rate numerator.\n* @param {BigInt} ir_denominator - Interest rate denominator.\n* @param {BigInt} outstanding_balance - Amount of outstanding debt.\n* @ignore\n* @param {BigInt} ir_numerator\n* @param {BigInt} ir_denominator\n* @param {BigInt} outstanding_balance\n* @returns {BigInt}\n*/\nmodule.exports.calculate_fee = function(ir_numerator, ir_denominator, outstanding_balance) {\n    uint64CvtShim[0] = ir_numerator;\n    const low0 = u32CvtShim[0];\n    const high0 = u32CvtShim[1];\n    uint64CvtShim[0] = ir_denominator;\n    const low1 = u32CvtShim[0];\n    const high1 = u32CvtShim[1];\n    uint64CvtShim[0] = outstanding_balance;\n    const low2 = u32CvtShim[0];\n    const high2 = u32CvtShim[1];\n    wasm.calculate_fee(8, low0, high0, low1, high1, low2, high2);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    u32CvtShim[0] = r0;\n    u32CvtShim[1] = r1;\n    const n3 = uint64CvtShim[0];\n    return n3;\n};\n\n/**\n* Returns an address to use for cancelling debt tokens in a debt swap.\n* @ignore\n* @returns {XfrPublicKey}\n*/\nmodule.exports.get_null_pk = function() {\n    var ret = wasm.get_null_pk();\n    return XfrPublicKey.__wrap(ret);\n};\n\n/**\n* @ignore\n* @returns {string}\n*/\nmodule.exports.create_default_policy_info = function() {\n    try {\n        wasm.create_default_policy_info(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Create policy information needed for debt token asset types.\n* This data will be parsed by the policy evalautor to ensure\n* that all payment and fee amounts are correct.\n* # Arguments\n*\n* * `ir_numerator` - interest rate numerator\n* * `ir_denominator`- interest rate denominator\n* * `fiat_code` - Base64 string representing asset type used to pay off the loan\n* * `amount` - loan amount\n* @ignore\n* @param {BigInt} ir_numerator\n* @param {BigInt} ir_denominator\n* @param {string} fiat_code\n* @param {BigInt} loan_amount\n* @returns {string}\n*/\nmodule.exports.create_debt_policy_info = function(ir_numerator, ir_denominator, fiat_code, loan_amount) {\n    try {\n        uint64CvtShim[0] = ir_numerator;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        uint64CvtShim[0] = ir_denominator;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        var ptr2 = passStringToWasm0(fiat_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = loan_amount;\n        const low3 = u32CvtShim[0];\n        const high3 = u32CvtShim[1];\n        wasm.create_debt_policy_info(8, low0, high0, low1, high1, ptr2, len2, low3, high3);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Creates the memo needed for debt token asset types. The memo will be parsed by the policy evaluator to ensure\n* that all payment and fee amounts are correct.\n* @param {BigInt} ir_numerator  - Interest rate numerator.\n* @param {BigInt} ir_denominator - Interest rate denominator.\n* @param {string} fiat_code - Base64 string representing asset type used to pay off the loan.\n* @param {BigInt} loan_amount - Loan amount.\n* @throws Will throw an error if `fiat_code` fails to deserialize.\n* @ignore\n* @param {BigInt} ir_numerator\n* @param {BigInt} ir_denominator\n* @param {string} fiat_code\n* @param {BigInt} loan_amount\n* @returns {string}\n*/\nmodule.exports.create_debt_memo = function(ir_numerator, ir_denominator, fiat_code, loan_amount) {\n    try {\n        uint64CvtShim[0] = ir_numerator;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        uint64CvtShim[0] = ir_denominator;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        var ptr2 = passStringToWasm0(fiat_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = loan_amount;\n        const low3 = u32CvtShim[0];\n        const high3 = u32CvtShim[1];\n        wasm.create_debt_memo(8, low0, high0, low1, high1, ptr2, len2, low3, high3);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    const mem = getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n/**\n* Returns a JavaScript object containing decrypted owner record information,\n* where `amount` is the decrypted asset amount, and `asset_type` is the decrypted asset type code.\n*\n* @param {ClientAssetRecord} record - Owner record.\n* @param {OwnerMemo} owner_memo - Owner memo of the associated record.\n* @param {XfrKeyPair} keypair - Keypair of asset owner.\n* @see {@link module:Findora-Wasm~ClientAssetRecord#from_json_record|ClientAssetRecord.from_json_record} for information about how to construct an asset record object\n* from a JSON result returned from the ledger server.\n* @param {ClientAssetRecord} record\n* @param {OwnerMemo | undefined} owner_memo\n* @param {XfrKeyPair} keypair\n* @returns {any}\n*/\nmodule.exports.open_client_asset_record = function(record, owner_memo, keypair) {\n    _assertClass(record, ClientAssetRecord);\n    let ptr0 = 0;\n    if (!isLikeNone(owner_memo)) {\n        _assertClass(owner_memo, OwnerMemo);\n        ptr0 = owner_memo.ptr;\n        owner_memo.ptr = 0;\n    }\n    _assertClass(keypair, XfrKeyPair);\n    var ret = wasm.open_client_asset_record(record.ptr, ptr0, keypair.ptr);\n    return takeObject(ret);\n};\n\n/**\n* Extracts the public key as a string from a transfer key pair.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nmodule.exports.get_pub_key_str = function(key_pair) {\n    try {\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.get_pub_key_str(8, key_pair.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Extracts the private key as a string from a transfer key pair.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nmodule.exports.get_priv_key_str = function(key_pair) {\n    try {\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.get_priv_key_str(8, key_pair.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Creates a new transfer key pair.\n* @returns {XfrKeyPair}\n*/\nmodule.exports.new_keypair = function() {\n    var ret = wasm.new_keypair();\n    return XfrKeyPair.__wrap(ret);\n};\n\n/**\n* Generates a new keypair deterministically from a seed string and an optional name.\n* @param {string} seed_str\n* @param {string | undefined} name\n* @returns {XfrKeyPair}\n*/\nmodule.exports.new_keypair_from_seed = function(seed_str, name) {\n    var ptr0 = passStringToWasm0(seed_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = isLikeNone(name) ? 0 : passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.new_keypair_from_seed(ptr0, len0, ptr1, len1);\n    return XfrKeyPair.__wrap(ret);\n};\n\n/**\n* Returns base64 encoded representation of an XfrPublicKey.\n* @param {XfrPublicKey} key\n* @returns {string}\n*/\nmodule.exports.public_key_to_base64 = function(key) {\n    try {\n        _assertClass(key, XfrPublicKey);\n        wasm.public_key_to_base64(8, key.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Converts a base64 encoded public key string to a public key.\n* @param {string} pk\n* @returns {XfrPublicKey}\n*/\nmodule.exports.public_key_from_base64 = function(pk) {\n    var ptr0 = passStringToWasm0(pk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.public_key_from_base64(ptr0, len0);\n    return XfrPublicKey.__wrap(ret);\n};\n\n/**\n* Expresses a transfer key pair as a hex-encoded string.\n* To decode the string, use `keypair_from_str` function.\n* @param {XfrKeyPair} key_pair\n* @returns {string}\n*/\nmodule.exports.keypair_to_str = function(key_pair) {\n    try {\n        _assertClass(key_pair, XfrKeyPair);\n        wasm.keypair_to_str(8, key_pair.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Constructs a transfer key pair from a hex-encoded string.\n* The encode a key pair, use `keypair_to_str` function.\n* @param {string} str\n* @returns {XfrKeyPair}\n*/\nmodule.exports.keypair_from_str = function(str) {\n    var ptr0 = passStringToWasm0(str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.keypair_from_str(ptr0, len0);\n    return XfrKeyPair.__wrap(ret);\n};\n\n/**\n* Generates a new credential issuer key.\n* @param {JsValue} attributes - Array of attribute types of the form `[{name: \"credit_score\",\n* size: 3}]`. The size refers to byte-size of the credential. In this case, the \"credit_score\"\n* attribute is represented as a 3 byte string \"760\". `attributes` is the list of attribute types\n* that the issuer can sign off on.\n* @param {any} attributes\n* @returns {CredentialIssuerKeyPair}\n*/\nmodule.exports.wasm_credential_issuer_key_gen = function(attributes) {\n    var ret = wasm.wasm_credential_issuer_key_gen(addHeapObject(attributes));\n    return CredentialIssuerKeyPair.__wrap(ret);\n};\n\n/**\n* Verifies a credential commitment. Used to confirm that a credential is tied to a ledger\n* address.\n* @param {CredIssuerPublicKey} issuer_pub_key - The credential issuer that has attested to the\n* credentials that have been committed to.\n* @param {CredentialCommitment} Credential commitment\n* @param {CredPoK} Proof of knowledge of the underlying commitment\n* @param {XfrPublicKey} Ledger address linked to this credential commitment.\n* @throws Will throw an error during verification failure (i.e. the supplied ledger address is\n* incorrect, the commitment is tied to a different credential issuer, or the proof of knowledge is\n* invalid, etc.)\n* @param {CredIssuerPublicKey} issuer_pub_key\n* @param {CredentialCommitment} commitment\n* @param {CredentialPoK} pok\n* @param {XfrPublicKey} xfr_pk\n*/\nmodule.exports.wasm_credential_verify_commitment = function(issuer_pub_key, commitment, pok, xfr_pk) {\n    _assertClass(issuer_pub_key, CredIssuerPublicKey);\n    _assertClass(commitment, CredentialCommitment);\n    _assertClass(pok, CredentialPoK);\n    _assertClass(xfr_pk, XfrPublicKey);\n    wasm.wasm_credential_verify_commitment(issuer_pub_key.ptr, commitment.ptr, pok.ptr, xfr_pk.ptr);\n};\n\n/**\n* Generates a new reveal proof from a credential commitment key.\n* @param {CredUserSecretKey} user_secret_key - Secret key of the credential user who owns\n* the credentials.\n* @param {Credential} credential - Credential whose attributes will be revealed.\n* @param {JsValue} reveal_fields - Array of strings representing attribute fields to reveal.\n* @throws Will throw an error if a reveal proof cannot be generated from the credential\n* or ```reveal_fields``` fails to deserialize.\n* @param {CredUserSecretKey} user_secret_key\n* @param {Credential} credential\n* @param {CredentialCommitmentKey} key\n* @param {any} reveal_fields\n* @returns {CredentialPoK}\n*/\nmodule.exports.wasm_credential_open_commitment = function(user_secret_key, credential, key, reveal_fields) {\n    _assertClass(user_secret_key, CredUserSecretKey);\n    _assertClass(credential, Credential);\n    _assertClass(key, CredentialCommitmentKey);\n    var ret = wasm.wasm_credential_open_commitment(user_secret_key.ptr, credential.ptr, key.ptr, addHeapObject(reveal_fields));\n    return CredentialPoK.__wrap(ret);\n};\n\n/**\n* Generates a new credential user key.\n* @param {CredIssuerPublicKey} issuer_pub_key - The credential issuer that can sign off on this\n* user's attributes.\n* @param {CredIssuerPublicKey} issuer_pub_key\n* @returns {CredentialUserKeyPair}\n*/\nmodule.exports.wasm_credential_user_key_gen = function(issuer_pub_key) {\n    _assertClass(issuer_pub_key, CredIssuerPublicKey);\n    var ret = wasm.wasm_credential_user_key_gen(issuer_pub_key.ptr);\n    return CredentialUserKeyPair.__wrap(ret);\n};\n\n/**\n* Generates a signature on user attributes that can be used to create a credential.\n* @param {CredIssuerSecretKey} issuer_secret_key - Secret key of credential issuer.\n* @param {CredUserPublicKey} user_public_key - Public key of credential user.\n* @param {JsValue} attributes - Array of attribute assignments of the form `[{name: \"credit_score\",\n* val: \"760\"}]`.\n* @throws Will throw an error if the signature cannot be generated.\n* @param {CredIssuerSecretKey} issuer_secret_key\n* @param {CredUserPublicKey} user_public_key\n* @param {any} attributes\n* @returns {CredentialSignature}\n*/\nmodule.exports.wasm_credential_sign = function(issuer_secret_key, user_public_key, attributes) {\n    _assertClass(issuer_secret_key, CredIssuerSecretKey);\n    _assertClass(user_public_key, CredUserPublicKey);\n    var ret = wasm.wasm_credential_sign(issuer_secret_key.ptr, user_public_key.ptr, addHeapObject(attributes));\n    return CredentialSignature.__wrap(ret);\n};\n\n/**\n* Generates a signature on user attributes that can be used to create a credential.\n* @param {CredIssuerPublicKey} issuer_public_key - Public key of credential issuer.\n* @param {CredentialSignature} signature - Credential issuer signature on attributes.\n* @param {JsValue} attributes - Array of attribute assignments of the form `[{name: \"credit_score\",\n* val: \"760\"}]'.\n* @param {CredIssuerPublicKey} issuer_public_key\n* @param {CredentialSignature} signature\n* @param {any} attributes\n* @returns {Credential}\n*/\nmodule.exports.create_credential = function(issuer_public_key, signature, attributes) {\n    try {\n        _assertClass(issuer_public_key, CredIssuerPublicKey);\n        _assertClass(signature, CredentialSignature);\n        var ret = wasm.create_credential(issuer_public_key.ptr, signature.ptr, addBorrowedObject(attributes));\n        return Credential.__wrap(ret);\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n};\n\n/**\n* Generates a credential commitment. A credential commitment can be used to selectively reveal\n* attribute assignments.\n* @param {CredUserSecretKey} user_secret_key - Secret key of credential user.\n* @param {XfrPublicKey} user_public_key - Ledger signing key to link this credential to.\n* @param {Credential} credential - Credential object.\n* @param {CredUserSecretKey} user_secret_key\n* @param {XfrPublicKey} user_public_key\n* @param {Credential} credential\n* @returns {CredentialCommitmentData}\n*/\nmodule.exports.wasm_credential_commit = function(user_secret_key, user_public_key, credential) {\n    _assertClass(user_secret_key, CredUserSecretKey);\n    _assertClass(user_public_key, XfrPublicKey);\n    _assertClass(credential, Credential);\n    var ret = wasm.wasm_credential_commit(user_secret_key.ptr, user_public_key.ptr, credential.ptr);\n    return CredentialCommitmentData.__wrap(ret);\n};\n\n/**\n* Selectively reveals attributes committed to in a credential commitment\n* @param {CredUserSecretKey} user_sk - Secret key of credential user.\n* @param {Credential} credential - Credential object.\n* @param {JsValue} reveal_fields - Array of string names representing credentials to reveal (i.e.\n* `[\"credit_score\"]`).\n* @param {CredUserSecretKey} user_sk\n* @param {Credential} credential\n* @param {any} reveal_fields\n* @returns {CredentialRevealSig}\n*/\nmodule.exports.wasm_credential_reveal = function(user_sk, credential, reveal_fields) {\n    _assertClass(user_sk, CredUserSecretKey);\n    _assertClass(credential, Credential);\n    var ret = wasm.wasm_credential_reveal(user_sk.ptr, credential.ptr, addHeapObject(reveal_fields));\n    return CredentialRevealSig.__wrap(ret);\n};\n\n/**\n* Verifies revealed attributes from a commitment.\n* @param {CredIssuerPublicKey} issuer_pub_key - Public key of credential issuer.\n* @param {JsValue} attributes - Array of attribute assignments to check of the form `[{name: \"credit_score\",\n* val: \"760\"}]`.\n* @param {CredentialCommitment} commitment - Commitment to the credential.\n* @param {CredentialPoK} pok - Proof that the credential commitment is valid and commits\n* to the attribute values being revealed.\n* @param {CredIssuerPublicKey} issuer_pub_key\n* @param {any} attributes\n* @param {CredentialCommitment} commitment\n* @param {CredentialPoK} pok\n*/\nmodule.exports.wasm_credential_verify = function(issuer_pub_key, attributes, commitment, pok) {\n    _assertClass(issuer_pub_key, CredIssuerPublicKey);\n    _assertClass(commitment, CredentialCommitment);\n    _assertClass(pok, CredentialPoK);\n    wasm.wasm_credential_verify(issuer_pub_key.ptr, addHeapObject(attributes), commitment.ptr, pok.ptr);\n};\n\n/**\n* Returns information about traceable assets for a given transfer.\n* @param {JsValue} xfr_body - JSON of a transfer note from a transfer operation.\n* @param {AssetTracerKeyPair} tracer_keypair - Asset tracer keypair.\n* @param {JsValue} candidate_assets - List of asset types traced by the tracer keypair.\n* @param {any} xfr_body\n* @param {AssetTracerKeyPair} tracer_keypair\n* @param {any} _candidate_assets\n* @returns {any}\n*/\nmodule.exports.trace_assets = function(xfr_body, tracer_keypair, _candidate_assets) {\n    _assertClass(tracer_keypair, AssetTracerKeyPair);\n    var ret = wasm.trace_assets(addHeapObject(xfr_body), tracer_keypair.ptr, addHeapObject(_candidate_assets));\n    return takeObject(ret);\n};\n\n/**\n* Returns bech32 encoded representation of an XfrPublicKey.\n* @param {XfrPublicKey} key\n* @returns {string}\n*/\nmodule.exports.public_key_to_bech32 = function(key) {\n    try {\n        _assertClass(key, XfrPublicKey);\n        wasm.public_key_to_bech32(8, key.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Converts a bech32 encoded public key string to a public key.\n* @param {string} addr\n* @returns {XfrPublicKey}\n*/\nmodule.exports.public_key_from_bech32 = function(addr) {\n    var ptr0 = passStringToWasm0(addr, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.public_key_from_bech32(ptr0, len0);\n    return XfrPublicKey.__wrap(ret);\n};\n\n/**\n* @param {string} pk\n* @returns {string}\n*/\nmodule.exports.bech32_to_base64 = function(pk) {\n    try {\n        var ptr0 = passStringToWasm0(pk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.bech32_to_base64(8, ptr0, len0);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* @param {string} pk\n* @returns {string}\n*/\nmodule.exports.base64_to_bech32 = function(pk) {\n    try {\n        var ptr0 = passStringToWasm0(pk, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.base64_to_bech32(8, ptr0, len0);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} key_pair\n* @param {string} password\n* @returns {Uint8Array}\n*/\nmodule.exports.encryption_pbkdf2_aes256gcm = function(key_pair, password) {\n    var ptr0 = passStringToWasm0(key_pair, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.encryption_pbkdf2_aes256gcm(8, ptr0, len0, ptr1, len1);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v2;\n};\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} enc_key_pair\n* @param {string} password\n* @returns {string}\n*/\nmodule.exports.decryption_pbkdf2_aes256gcm = function(enc_key_pair, password) {\n    try {\n        var ptr0 = passArray8ToWasm0(enc_key_pair, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.decryption_pbkdf2_aes256gcm(8, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* @param {string} sk_str\n* @returns {XfrKeyPair | undefined}\n*/\nmodule.exports.create_keypair_from_secret = function(sk_str) {\n    var ptr0 = passStringToWasm0(sk_str, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.create_keypair_from_secret(ptr0, len0);\n    return ret === 0 ? undefined : XfrKeyPair.__wrap(ret);\n};\n\n/**\n* @param {XfrKeyPair} kp\n* @returns {XfrPublicKey}\n*/\nmodule.exports.get_pk_from_keypair = function(kp) {\n    _assertClass(kp, XfrKeyPair);\n    var ret = wasm.get_pk_from_keypair(kp.ptr);\n    return XfrPublicKey.__wrap(ret);\n};\n\n/**\n* Randomly generate a 12words-length mnemonic.\n* @returns {string}\n*/\nmodule.exports.generate_mnemonic_default = function() {\n    try {\n        wasm.generate_mnemonic_default(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Generate mnemonic with custom length and language.\n* - @param `wordslen`: acceptable value are one of [ 12, 15, 18, 21, 24 ]\n* - @param `lang`: acceptable value are one of [ \"en\", \"zh\", \"zh_traditional\", \"fr\", \"it\", \"ko\", \"sp\", \"jp\" ]\n* @param {number} wordslen\n* @param {string} lang\n* @returns {string}\n*/\nmodule.exports.generate_mnemonic_custom = function(wordslen, lang) {\n    try {\n        var ptr0 = passStringToWasm0(lang, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.generate_mnemonic_custom(8, wordslen, ptr0, len0);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Restore the XfrKeyPair from a mnemonic with a default bip44-path,\n* that is \"m/44'/917'/0'/0/0\" (\"m/44'/coin'/account'/change/address\").\n* @param {string} phrase\n* @returns {XfrKeyPair}\n*/\nmodule.exports.restore_keypair_from_mnemonic_default = function(phrase) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.restore_keypair_from_mnemonic_default(ptr0, len0);\n    return XfrKeyPair.__wrap(ret);\n};\n\n/**\n* Restore the XfrKeyPair from a mnemonic with custom params,\n* in bip44 form.\n* @param {string} phrase\n* @param {string} lang\n* @param {BipPath} path\n* @returns {XfrKeyPair}\n*/\nmodule.exports.restore_keypair_from_mnemonic_bip44 = function(phrase, lang, path) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(lang, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    _assertClass(path, BipPath);\n    var ret = wasm.restore_keypair_from_mnemonic_bip44(ptr0, len0, ptr1, len1, path.ptr);\n    return XfrKeyPair.__wrap(ret);\n};\n\n/**\n* Restore the XfrKeyPair from a mnemonic with custom params,\n* in bip49 form.\n* @param {string} phrase\n* @param {string} lang\n* @param {BipPath} path\n* @returns {XfrKeyPair}\n*/\nmodule.exports.restore_keypair_from_mnemonic_bip49 = function(phrase, lang, path) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(lang, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    _assertClass(path, BipPath);\n    var ret = wasm.restore_keypair_from_mnemonic_bip49(ptr0, len0, ptr1, len1, path.ptr);\n    return XfrKeyPair.__wrap(ret);\n};\n\n/**\n* ID of FRA, in `String` format.\n* @returns {string}\n*/\nmodule.exports.fra_get_asset_code = function() {\n    try {\n        wasm.fra_get_asset_code(8);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\n/**\n* Fee smaller than this value will be denied.\n* @returns {BigInt}\n*/\nmodule.exports.fra_get_minimal_fee = function() {\n    wasm.fra_get_minimal_fee(8);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    u32CvtShim[0] = r0;\n    u32CvtShim[1] = r1;\n    const n0 = uint64CvtShim[0];\n    return n0;\n};\n\n/**\n* The destination for fee to be transfered to.\n* @returns {XfrPublicKey}\n*/\nmodule.exports.fra_get_dest_pubkey = function() {\n    var ret = wasm.fra_get_dest_pubkey();\n    return XfrPublicKey.__wrap(ret);\n};\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n/**\n* When an asset is defined, several options governing the assets must be\n* specified:\n* 1. **Traceable**: Records and identities of traceable assets can be decrypted by a provided tracing key. By defaults, assets do not have\n* any tracing policies.\n* 2. **Transferable**: Non-transferable assets can only be transferred once from the issuer to another user. By default, assets are transferable.\n* 3. **Updatable**: Whether the asset memo can be updated. By default, assets are not updatable.\n* 4. **Transfer signature rules**: Signature weights and threshold for a valid transfer. By\n*    default, there are no special signature requirements.\n* 5. **Max units**: Optional limit on the total number of units of this asset that can be issued.\n*    By default, assets do not have issuance caps.\n* @see {@link module:Findora-Wasm~TracingPolicies|TracingPolicies} for more information about tracing policies.\n* @see {@link module:Findora-Wasm~TransactionBuilder#add_operation_update_memo|add_operation_update_memo} for more information about how to add\n* a memo update operation to a transaction.\n* @see {@link module:Findora-Wasm~SignatureRules|SignatureRules} for more information about co-signatures.\n* @see {@link\n* module:Findora-Wasm~TransactionBuilder#add_operation_create_asset|add_operation_create_asset}\n* for information about how to add asset rules to an asset definition.\n*/\nclass AssetRules {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetRules.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_assetrules_free(ptr);\n    }\n    /**\n    * Create a default set of asset rules. See class description for defaults.\n    * @returns {AssetRules}\n    */\n    static new() {\n        var ret = wasm.assetrules_new();\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Adds an asset tracing policy.\n    * @param {TracingPolicy} policy - Tracing policy for the new asset.\n    * @param {TracingPolicy} policy\n    * @returns {AssetRules}\n    */\n    add_tracing_policy(policy) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(policy, TracingPolicy);\n        var ret = wasm.assetrules_add_tracing_policy(ptr, policy.ptr);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Set a cap on the number of units of this asset that can be issued.\n    * @param {BigInt} max_units - Maximum number of units that can be issued.\n    * @param {BigInt} max_units\n    * @returns {AssetRules}\n    */\n    set_max_units(max_units) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        uint64CvtShim[0] = max_units;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.assetrules_set_max_units(ptr, low0, high0);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Transferability toggle. Assets that are not transferable can only be transferred by the asset\n    * issuer.\n    * @param {boolean} transferable - Boolean indicating whether asset can be transferred.\n    * @param {boolean} transferable\n    * @returns {AssetRules}\n    */\n    set_transferable(transferable) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ret = wasm.assetrules_set_transferable(ptr, transferable);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * The updatable flag determines whether the asset memo can be updated after issuance.\n    * @param {boolean} updatable - Boolean indicating whether asset memo can be updated.\n    * @see {@link module:Findora-Wasm~TransactionBuilder#add_operation_update_memo|add_operation_update_memo} for more information about how to add\n    * a memo update operation to a transaction.\n    * @param {boolean} updatable\n    * @returns {AssetRules}\n    */\n    set_updatable(updatable) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ret = wasm.assetrules_set_updatable(ptr, updatable);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Co-signature rules. Assets with co-signatue rules require additional weighted signatures to\n    * be transferred.\n    * @param {SignatureRules} multisig_rules - Co-signature restrictions.\n    * @param {SignatureRules} multisig_rules\n    * @returns {AssetRules}\n    */\n    set_transfer_multisig_rules(multisig_rules) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(multisig_rules, SignatureRules);\n        var ptr0 = multisig_rules.ptr;\n        multisig_rules.ptr = 0;\n        var ret = wasm.assetrules_set_transfer_multisig_rules(ptr, ptr0);\n        return AssetRules.__wrap(ret);\n    }\n    /**\n    * Set the decimal number of asset. Return error string if failed, otherwise return changed asset.\n    * #param {Number} decimals - The number of decimals used to set its user representation.\n    * Decimals should be 0 ~ 255.\n    * @param {number} decimals\n    * @returns {AssetRules}\n    */\n    set_decimals(decimals) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ret = wasm.assetrules_set_decimals(ptr, decimals);\n        return AssetRules.__wrap(ret);\n    }\n}\nmodule.exports.AssetRules = AssetRules;\n/**\n* Key pair used by asset tracers to decrypt asset amounts, types, and identity\n* commitments associated with traceable asset transfers.\n* @see {@link module:Findora-Wasm.TracingPolicy|TracingPolicy} for information about tracing policies.\n* @see {@link module:Findora-Wasm~AssetRules#add_tracing_policy|add_tracing_policy} for information about how to add a tracing policy to\n* an asset definition.\n*/\nclass AssetTracerKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetTracerKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_assettracerkeypair_free(ptr);\n    }\n    /**\n    * Creates a new tracer key pair.\n    * @returns {AssetTracerKeyPair}\n    */\n    static new() {\n        var ret = wasm.assettracerkeypair_new();\n        return AssetTracerKeyPair.__wrap(ret);\n    }\n}\nmodule.exports.AssetTracerKeyPair = AssetTracerKeyPair;\n/**\n* Object representing an asset definition. Used to fetch tracing policies and any other\n* information that may be required to construct a valid transfer or issuance.\n*/\nclass AssetType {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetType.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_assettype_free(ptr);\n    }\n    /**\n    * Builds an asset type from a JSON-encoded JavaScript value.\n    * @param {JsValue} val - JSON-encoded asset type fetched from ledger server with the `asset_token/{code}` route.\n    * Note: The first field of an asset type is `properties`. See the example below.\n    *\n    * @example\n    * \"properties\":{\n    *   \"code\":{\n    *     \"val\":[151,8,106,38,126,101,250,236,134,77,83,180,43,152,47,57,83,30,60,8,132,218,48,52,167,167,190,244,34,45,78,80]\n    *   },\n    *   \"issuer\":{\"key\":“iFW4jY_DQVSGED05kTseBBn0BllPB9Q9escOJUpf4DY=”},\n    *   \"memo\":“test memo”,\n    *   \"asset_rules\":{\n    *     \"transferable\":true,\n    *     \"updatable\":false,\n    *     \"transfer_multisig_rules\":null,\n    *     \"max_units\":5000\n    *   }\n    * }\n    *\n    * @see {@link module:Findora-Network~Network#getAssetProperties|Network.getAsset} for information about how to\n    * fetch an asset type from the ledger server.\n    * @param {any} json\n    * @returns {AssetType}\n    */\n    static from_json(json) {\n        try {\n            var ret = wasm.assettype_from_json(addBorrowedObject(json));\n            return AssetType.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Fetch the tracing policies associated with this asset type.\n    * @returns {TracingPolicies}\n    */\n    get_tracing_policies() {\n        var ret = wasm.assettype_get_tracing_policies(this.ptr);\n        return TracingPolicies.__wrap(ret);\n    }\n}\nmodule.exports.AssetType = AssetType;\n/**\n* Authenticated address identity registry value. Contains a proof that the AIR result is stored\n* on the ledger.\n*/\nclass AuthenticatedAIRResult {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AuthenticatedAIRResult.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_authenticatedairresult_free(ptr);\n    }\n    /**\n    * Construct an AIRResult from the JSON-encoded value returned by the ledger.\n    * @see {@link module:Findora-Network~Network#getAIRResult|Network.getAIRResult} for information about how to fetch a\n    * value from the address identity registry.\n    * @param {any} json\n    * @returns {AuthenticatedAIRResult}\n    */\n    static from_json(json) {\n        try {\n            var ret = wasm.authenticatedairresult_from_json(addBorrowedObject(json));\n            return AuthenticatedAIRResult.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Returns true if the authenticated AIR result proofs verify succesfully. If the proofs are\n    * valid, the identity commitment contained in the AIR result is a valid part of the ledger.\n    * @param {string} state_commitment - String representing the ledger state commitment.\n    * @param {string} state_commitment\n    * @returns {boolean}\n    */\n    is_valid(state_commitment) {\n        var ptr0 = passStringToWasm0(state_commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.authenticatedairresult_is_valid(this.ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n    * Returns the underlying credential commitment of the AIR result.\n    * @returns {CredentialCommitment | undefined}\n    */\n    get_commitment() {\n        var ret = wasm.authenticatedairresult_get_commitment(this.ptr);\n        return ret === 0 ? undefined : CredentialCommitment.__wrap(ret);\n    }\n}\nmodule.exports.AuthenticatedAIRResult = AuthenticatedAIRResult;\n/**\n* Object representing an authenticable asset record. Clients can validate authentication proofs\n* against a ledger state commitment.\n*/\nclass AuthenticatedAssetRecord {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AuthenticatedAssetRecord.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_authenticatedassetrecord_free(ptr);\n    }\n    /**\n    * Given a serialized state commitment, returns true if the\n    * authenticated UTXO proofs validate correctly and false otherwise. If the proofs validate, the\n    * asset record contained in this structure exists on the ledger and is unspent.\n    * @param {string} state_commitment - String representing the state commitment.\n    * @see {@link module:Findora-Network~Network#getStateCommitment|getStateCommitment} for instructions on fetching a ledger state commitment.\n    * @throws Will throw an error if the state commitment fails to deserialize.\n    * @param {string} state_commitment\n    * @returns {boolean}\n    */\n    is_valid(state_commitment) {\n        var ptr0 = passStringToWasm0(state_commitment, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.authenticatedassetrecord_is_valid(this.ptr, ptr0, len0);\n        return ret !== 0;\n    }\n    /**\n    * Builds an AuthenticatedAssetRecord from a JSON-encoded asset record returned from the ledger\n    * server.\n    * @param {JsValue} val - JSON-encoded asset record fetched from ledger server.\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for information about how to\n    * fetch an asset record from the ledger server.\n    * @param {any} record\n    * @returns {AuthenticatedAssetRecord}\n    */\n    static from_json_record(record) {\n        try {\n            var ret = wasm.authenticatedassetrecord_from_json_record(addBorrowedObject(record));\n            return AuthenticatedAssetRecord.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\nmodule.exports.AuthenticatedAssetRecord = AuthenticatedAssetRecord;\n/**\n* Use this struct to express a Bip44/Bip49 path.\n*/\nclass BipPath {\n\n    static __wrap(ptr) {\n        const obj = Object.create(BipPath.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_bippath_free(ptr);\n    }\n    /**\n    * @param {number} coin\n    * @param {number} account\n    * @param {number} change\n    * @param {number} address\n    * @returns {BipPath}\n    */\n    static new(coin, account, change, address) {\n        var ret = wasm.bippath_new(coin, account, change, address);\n        return BipPath.__wrap(ret);\n    }\n}\nmodule.exports.BipPath = BipPath;\n/**\n* This object represents an asset record owned by a ledger key pair.\n* @see {@link module:Findora-Wasm.open_client_asset_record|open_client_asset_record} for information about how to decrypt an encrypted asset\n* record.\n*/\nclass ClientAssetRecord {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ClientAssetRecord.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_clientassetrecord_free(ptr);\n    }\n    /**\n    * Builds a client record from a JSON-encoded JavaScript value.\n    *\n    * @param {JsValue} val - JSON-encoded autehtnicated asset record fetched from ledger server with the `utxo_sid/{sid}` route,\n    * where `sid` can be fetched from the query server with the `get_owned_utxos/{address}` route.\n    * Note: The first field of an asset record is `utxo`. See the example below.\n    *\n    * @example\n    * \"utxo\":{\n    *   \"amount\":{\n    *     \"NonConfidential\":5\n    *   },\n    *  \"asset_type\":{\n    *     \"NonConfidential\":[113,168,158,149,55,64,18,189,88,156,133,204,156,46,106,46,232,62,69,233,157,112,240,132,164,120,4,110,14,247,109,127]\n    *   },\n    *   \"public_key\":\"Glf8dKF6jAPYHzR_PYYYfzaWqpYcMvnrIcazxsilmlA=\"\n    * }\n    *\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for information about how to\n    * fetch an asset record from the ledger server.\n    * @param {any} val\n    * @returns {ClientAssetRecord}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.clientassetrecord_from_json(addBorrowedObject(val));\n            return ClientAssetRecord.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * ClientAssetRecord ==> JsValue\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.clientassetrecord_to_json(this.ptr);\n        return takeObject(ret);\n    }\n}\nmodule.exports.ClientAssetRecord = ClientAssetRecord;\n/**\n* Public key of a credential issuer.\n*/\nclass CredIssuerPublicKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredIssuerPublicKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credissuerpublickey_free(ptr);\n    }\n}\nmodule.exports.CredIssuerPublicKey = CredIssuerPublicKey;\n/**\n* Secret key of a credential issuer.\n*/\nclass CredIssuerSecretKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredIssuerSecretKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credissuersecretkey_free(ptr);\n    }\n}\nmodule.exports.CredIssuerSecretKey = CredIssuerSecretKey;\n/**\n* Public key of a credential user.\n*/\nclass CredUserPublicKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredUserPublicKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_creduserpublickey_free(ptr);\n    }\n}\nmodule.exports.CredUserPublicKey = CredUserPublicKey;\n/**\n* Secret key of a credential user.\n*/\nclass CredUserSecretKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredUserSecretKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credusersecretkey_free(ptr);\n    }\n}\nmodule.exports.CredUserSecretKey = CredUserSecretKey;\n/**\n* A user credential that can be used to selectively reveal credential attributes.\n* @see {@link module:Findora-Wasm.wasm_credential_commit|wasm_credential_commit} for information about how to commit to a credential.\n* @see {@link module:Findora-Wasm.wasm_credential_reveal|wasm_credential_reveal} for information about how to selectively reveal credential\n* attributes.\n*/\nclass Credential {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Credential.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credential_free(ptr);\n    }\n}\nmodule.exports.Credential = Credential;\n/**\n* Commitment to a credential record.\n* @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n* credential commitment.\n*/\nclass CredentialCommitment {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialCommitment.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialcommitment_free(ptr);\n    }\n}\nmodule.exports.CredentialCommitment = CredentialCommitment;\n/**\n* Commitment to a credential record, proof that the commitment is valid, and credential key that can be used\n* to open a commitment.\n*/\nclass CredentialCommitmentData {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialCommitmentData.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialcommitmentdata_free(ptr);\n    }\n    /**\n    * Returns the underlying credential commitment.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialCommitment}\n    */\n    get_commitment() {\n        var ret = wasm.credentialcommitmentdata_get_commitment(this.ptr);\n        return CredentialCommitment.__wrap(ret);\n    }\n    /**\n    * Returns the underlying proof of knowledge that the credential is valid.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialPoK}\n    */\n    get_pok() {\n        var ret = wasm.credentialcommitmentdata_get_pok(this.ptr);\n        return CredentialPoK.__wrap(ret);\n    }\n    /**\n    * Returns the key used to generate the commitment.\n    * @see {@link module:Findora-Wasm.wasm_credential_open_commitment|wasm_credential_open_commitment} for information about how to open a\n    * credential commitment.\n    * @returns {CredentialCommitmentKey}\n    */\n    get_commit_key() {\n        var ret = wasm.credentialcommitmentdata_get_commit_key(this.ptr);\n        return CredentialCommitmentKey.__wrap(ret);\n    }\n}\nmodule.exports.CredentialCommitmentData = CredentialCommitmentData;\n/**\n* Key used to generate a credential commitment.\n* @see {@link module:Findora-Wasm.wasm_credential_open_commitment|wasm_credential_open_commitment} for information about how to\n* open a credential commitment.\n*/\nclass CredentialCommitmentKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialCommitmentKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialcommitmentkey_free(ptr);\n    }\n}\nmodule.exports.CredentialCommitmentKey = CredentialCommitmentKey;\n/**\n* Key pair of a credential issuer.\n*/\nclass CredentialIssuerKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialIssuerKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialissuerkeypair_free(ptr);\n    }\n    /**\n    * Returns the credential issuer's public key.\n    * @returns {CredIssuerPublicKey}\n    */\n    get_pk() {\n        var ret = wasm.credentialissuerkeypair_get_pk(this.ptr);\n        return CredIssuerPublicKey.__wrap(ret);\n    }\n    /**\n    * Returns the credential issuer's secret key.\n    * @returns {CredIssuerSecretKey}\n    */\n    get_sk() {\n        var ret = wasm.credentialissuerkeypair_get_sk(this.ptr);\n        return CredIssuerSecretKey.__wrap(ret);\n    }\n    /**\n    * Convert the key pair to a serialized value that can be used in the browser.\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.credentialissuerkeypair_to_json(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Generate a key pair from a JSON-serialized JavaScript value.\n    * @param {any} val\n    * @returns {CredentialIssuerKeyPair}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.credentialissuerkeypair_from_json(addBorrowedObject(val));\n            return CredentialIssuerKeyPair.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\nmodule.exports.CredentialIssuerKeyPair = CredentialIssuerKeyPair;\n/**\n* Proof that a credential is a valid re-randomization of a credential signed by a certain asset\n* issuer.\n* @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n* credential commitment.\n*/\nclass CredentialPoK {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialPoK.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialpok_free(ptr);\n    }\n}\nmodule.exports.CredentialPoK = CredentialPoK;\n/**\n* Reveal signature of a credential record.\n*/\nclass CredentialRevealSig {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialRevealSig.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialrevealsig_free(ptr);\n    }\n    /**\n    * Returns the underlying credential commitment.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialCommitment}\n    */\n    get_commitment() {\n        var ret = wasm.credentialcommitmentdata_get_commitment(this.ptr);\n        return CredentialCommitment.__wrap(ret);\n    }\n    /**\n    * Returns the underlying proof of knowledge that the credential is valid.\n    * @see {@link module:Findora-Wasm.wasm_credential_verify_commitment|wasm_credential_verify_commitment} for information about how to verify a\n    * credential commitment.\n    * @returns {CredentialPoK}\n    */\n    get_pok() {\n        var ret = wasm.credentialrevealsig_get_pok(this.ptr);\n        return CredentialPoK.__wrap(ret);\n    }\n}\nmodule.exports.CredentialRevealSig = CredentialRevealSig;\n/**\n* Signature of a credential record.\n*/\nclass CredentialSignature {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialSignature.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialsignature_free(ptr);\n    }\n}\nmodule.exports.CredentialSignature = CredentialSignature;\n/**\n* Key pair of a credential user.\n*/\nclass CredentialUserKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(CredentialUserKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_credentialuserkeypair_free(ptr);\n    }\n    /**\n    * Returns the credential issuer's public key.\n    * @returns {CredUserPublicKey}\n    */\n    get_pk() {\n        var ret = wasm.credentialuserkeypair_get_pk(this.ptr);\n        return CredUserPublicKey.__wrap(ret);\n    }\n    /**\n    * Returns the credential issuer's secret key.\n    * @returns {CredUserSecretKey}\n    */\n    get_sk() {\n        var ret = wasm.credentialuserkeypair_get_sk(this.ptr);\n        return CredUserSecretKey.__wrap(ret);\n    }\n    /**\n    * Convert the key pair to a serialized value that can be used in the browser.\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.credentialuserkeypair_to_json(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Generate a key pair from a JSON-serialized JavaScript value.\n    * @param {any} val\n    * @returns {CredentialUserKeyPair}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.credentialuserkeypair_from_json(addBorrowedObject(val));\n            return CredentialUserKeyPair.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\nmodule.exports.CredentialUserKeyPair = CredentialUserKeyPair;\n/**\n*/\nclass FeeInputs {\n\n    static __wrap(ptr) {\n        const obj = Object.create(FeeInputs.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_feeinputs_free(ptr);\n    }\n    /**\n    * @returns {FeeInputs}\n    */\n    static new() {\n        var ret = wasm.feeinputs_new();\n        return FeeInputs.__wrap(ret);\n    }\n    /**\n    * @param {BigInt} am\n    * @param {TxoRef} tr\n    * @param {ClientAssetRecord} ar\n    * @param {OwnerMemo | undefined} om\n    * @param {XfrKeyPair} kp\n    */\n    append(am, tr, ar, om, kp) {\n        uint64CvtShim[0] = am;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(tr, TxoRef);\n        var ptr1 = tr.ptr;\n        tr.ptr = 0;\n        _assertClass(ar, ClientAssetRecord);\n        var ptr2 = ar.ptr;\n        ar.ptr = 0;\n        let ptr3 = 0;\n        if (!isLikeNone(om)) {\n            _assertClass(om, OwnerMemo);\n            ptr3 = om.ptr;\n            om.ptr = 0;\n        }\n        _assertClass(kp, XfrKeyPair);\n        var ptr4 = kp.ptr;\n        kp.ptr = 0;\n        wasm.feeinputs_append(this.ptr, low0, high0, ptr1, ptr2, ptr3, ptr4);\n    }\n    /**\n    * @param {BigInt} am\n    * @param {TxoRef} tr\n    * @param {ClientAssetRecord} ar\n    * @param {OwnerMemo | undefined} om\n    * @param {XfrKeyPair} kp\n    * @returns {FeeInputs}\n    */\n    append2(am, tr, ar, om, kp) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        uint64CvtShim[0] = am;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(tr, TxoRef);\n        var ptr1 = tr.ptr;\n        tr.ptr = 0;\n        _assertClass(ar, ClientAssetRecord);\n        var ptr2 = ar.ptr;\n        ar.ptr = 0;\n        let ptr3 = 0;\n        if (!isLikeNone(om)) {\n            _assertClass(om, OwnerMemo);\n            ptr3 = om.ptr;\n            om.ptr = 0;\n        }\n        _assertClass(kp, XfrKeyPair);\n        var ptr4 = kp.ptr;\n        kp.ptr = 0;\n        var ret = wasm.feeinputs_append2(ptr, low0, high0, ptr1, ptr2, ptr3, ptr4);\n        return FeeInputs.__wrap(ret);\n    }\n}\nmodule.exports.FeeInputs = FeeInputs;\n/**\n* Blinding factor for a custom data operation. A blinding factor adds a random value to the\n* custom data being hashed to make the hash hiding.\n*/\nclass KVBlind {\n\n    static __wrap(ptr) {\n        const obj = Object.create(KVBlind.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_kvblind_free(ptr);\n    }\n    /**\n    * Generate a random blinding factor.\n    * @returns {KVBlind}\n    */\n    static gen_random() {\n        var ret = wasm.kvblind_gen_random();\n        return KVBlind.__wrap(ret);\n    }\n    /**\n    * Convert the key pair to a JSON-encoded value that can be used in the browser.\n    * @returns {any}\n    */\n    to_json() {\n        var ret = wasm.kvblind_to_json(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Create a KVBlind from a JSON-encoded value.\n    * @param {any} val\n    * @returns {KVBlind}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.kvblind_from_json(addBorrowedObject(val));\n            return KVBlind.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\nmodule.exports.KVBlind = KVBlind;\n/**\n* Hash that can be stored in the ledger's custom data store.\n*/\nclass KVHash {\n\n    static __wrap(ptr) {\n        const obj = Object.create(KVHash.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_kvhash_free(ptr);\n    }\n    /**\n    * Generate a new custom data hash without a blinding factor.\n    * @param {JsValue} data - Data to hash. Must be an array of bytes.\n    * @param {any} data\n    * @returns {KVHash}\n    */\n    static new_no_blind(data) {\n        try {\n            var ret = wasm.kvhash_new_no_blind(addBorrowedObject(data));\n            return KVHash.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Generate a new custom data hash with a blinding factor.\n    * @param {JsValue} data - Data to hash. Must be an array of bytes.\n    * @param {KVBlind} kv_blind - Optional blinding factor.\n    * @param {any} data\n    * @param {KVBlind} kv_blind\n    * @returns {KVHash}\n    */\n    static new_with_blind(data, kv_blind) {\n        try {\n            _assertClass(kv_blind, KVBlind);\n            var ret = wasm.kvhash_new_with_blind(addBorrowedObject(data), kv_blind.ptr);\n            return KVHash.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n}\nmodule.exports.KVHash = KVHash;\n/**\n* Key for hashes in the ledger's custom data store.\n*/\nclass Key {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Key.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_key_free(ptr);\n    }\n    /**\n    * Generate a random key.\n    * Figure out how to store prng ref in browser: https://bugtracker.findora.org/issues/63\n    * @returns {Key}\n    */\n    static gen_random() {\n        var ret = wasm.key_gen_random();\n        return Key.__wrap(ret);\n    }\n    /**\n    * Returns a base64 encoded version of the Key.\n    * @returns {string}\n    */\n    to_base64() {\n        try {\n            wasm.key_to_base64(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Generates a Key from a base64-encoded String.\n    * @param {string} string\n    * @returns {Key}\n    */\n    static from_base64(string) {\n        var ptr0 = passStringToWasm0(string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.key_from_base64(ptr0, len0);\n        return Key.__wrap(ret);\n    }\n}\nmodule.exports.Key = Key;\n/**\n* Asset owner memo. Contains information needed to decrypt an asset record.\n* @see {@link module:Findora-Wasm.ClientAssetRecord|ClientAssetRecord} for more details about asset records.\n*/\nclass OwnerMemo {\n\n    static __wrap(ptr) {\n        const obj = Object.create(OwnerMemo.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_ownermemo_free(ptr);\n    }\n    /**\n    * Builds an owner memo from a JSON-serialized JavaScript value.\n    * @param {JsValue} val - JSON owner memo fetched from query server with the `get_owner_memo/{sid}` route,\n    * where `sid` can be fetched from the query server with the `get_owned_utxos/{address}` route. See the example below.\n    *\n    * @example\n    * {\n    *   \"blind_share\":[91,251,44,28,7,221,67,155,175,213,25,183,70,90,119,232,212,238,226,142,159,200,54,19,60,115,38,221,248,202,74,248],\n    *   \"lock\":{\"ciphertext\":[119,54,117,136,125,133,112,193],\"encoded_rand\":\"8KDql2JphPB5WLd7-aYE1bxTQAcweFSmrqymLvPDntM=\"}\n    * }\n    * @param {any} val\n    * @returns {OwnerMemo}\n    */\n    static from_json(val) {\n        try {\n            var ret = wasm.ownermemo_from_json(addBorrowedObject(val));\n            return OwnerMemo.__wrap(ret);\n        } finally {\n            heap[stack_pointer++] = undefined;\n        }\n    }\n    /**\n    * Creates a clone of the owner memo.\n    * @returns {OwnerMemo}\n    */\n    clone() {\n        var ret = wasm.ownermemo_clone(this.ptr);\n        return OwnerMemo.__wrap(ret);\n    }\n}\nmodule.exports.OwnerMemo = OwnerMemo;\n/**\n* Public parameters necessary for generating asset records. Generating this is expensive and\n* should be done as infrequently as possible.\n* @see {@link module:Findora-Wasm~TransactionBuilder#add_basic_issue_asset|add_basic_issue_asset}\n* for information using public parameters to create issuance asset records.\n*/\nclass PublicParams {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PublicParams.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_publicparams_free(ptr);\n    }\n    /**\n    * Generates a new set of parameters.\n    * @returns {PublicParams}\n    */\n    static new() {\n        var ret = wasm.publicparams_new();\n        return PublicParams.__wrap(ret);\n    }\n}\nmodule.exports.PublicParams = PublicParams;\n/**\n* Stores threshold and weights for a multisignature requirement.\n*/\nclass SignatureRules {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SignatureRules.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_signaturerules_free(ptr);\n    }\n    /**\n    * Creates a new set of co-signature rules.\n    *\n    * @param {BigInt} threshold - Minimum sum of signature weights that is required for an asset\n    * transfer.\n    * @param {JsValue} weights - Array of public key weights of the form `[[\"kAb...\", BigInt(5)]]', where the\n    * first element of each tuple is a base64 encoded public key and the second is the key's\n    * associated weight.\n    * @param {BigInt} threshold\n    * @param {any} weights\n    * @returns {SignatureRules}\n    */\n    static new(threshold, weights) {\n        uint64CvtShim[0] = threshold;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.signaturerules_new(low0, high0, addHeapObject(weights));\n        return SignatureRules.__wrap(ret);\n    }\n}\nmodule.exports.SignatureRules = SignatureRules;\n/**\n* A collection of tracing policies. Use this object when constructing asset transfers to generate\n* the correct tracing proofs for traceable assets.\n*/\nclass TracingPolicies {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TracingPolicies.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_tracingpolicies_free(ptr);\n    }\n}\nmodule.exports.TracingPolicies = TracingPolicies;\n/**\n* Tracing policy for asset transfers. Can be configured to track credentials, the asset type and\n* amount, or both.\n*/\nclass TracingPolicy {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TracingPolicy.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_tracingpolicy_free(ptr);\n    }\n    /**\n    * @param {AssetTracerKeyPair} tracing_key\n    * @returns {TracingPolicy}\n    */\n    static new_with_tracing(tracing_key) {\n        _assertClass(tracing_key, AssetTracerKeyPair);\n        var ret = wasm.tracingpolicy_new_with_tracing(tracing_key.ptr);\n        return TracingPolicy.__wrap(ret);\n    }\n    /**\n    * @param {AssetTracerKeyPair} tracing_key\n    * @param {CredIssuerPublicKey} cred_issuer_key\n    * @param {any} reveal_map\n    * @param {boolean} tracing\n    * @returns {TracingPolicy}\n    */\n    static new_with_identity_tracing(tracing_key, cred_issuer_key, reveal_map, tracing) {\n        _assertClass(tracing_key, AssetTracerKeyPair);\n        _assertClass(cred_issuer_key, CredIssuerPublicKey);\n        var ret = wasm.tracingpolicy_new_with_identity_tracing(tracing_key.ptr, cred_issuer_key.ptr, addHeapObject(reveal_map), tracing);\n        return TracingPolicy.__wrap(ret);\n    }\n}\nmodule.exports.TracingPolicy = TracingPolicy;\n/**\n* Structure that allows users to construct arbitrary transactions.\n*/\nclass TransactionBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TransactionBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_transactionbuilder_free(ptr);\n    }\n    /**\n    * @param am: amount to pay\n    * @param kp: owner's XfrKeyPair\n    * @param {BigInt} am\n    * @param {XfrKeyPair} kp\n    * @returns {TransactionBuilder}\n    */\n    add_fee_relative_auto(am, kp) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        uint64CvtShim[0] = am;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(kp, XfrKeyPair);\n        var ptr1 = kp.ptr;\n        kp.ptr = 0;\n        var ret = wasm.transactionbuilder_add_fee_relative_auto(ptr, low0, high0, ptr1);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Use this func to get the necessary infomations for generating `Relative Inputs`\n    *\n    * - TxoRef::Relative(\"Element index of the result\")\n    * - ClientAssetRecord::from_json(\"Element of the result\")\n    * @returns {any[]}\n    */\n    get_relative_outputs() {\n        wasm.transactionbuilder_get_relative_outputs(8, this.ptr);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        var v0 = getArrayJsValueFromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 4);\n        return v0;\n    }\n    /**\n    * As the last operation of any transaction,\n    * add a static fee to the transaction.\n    * @param {FeeInputs} inputs\n    * @returns {TransactionBuilder}\n    */\n    add_fee(inputs) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(inputs, FeeInputs);\n        var ptr0 = inputs.ptr;\n        inputs.ptr = 0;\n        var ret = wasm.transactionbuilder_add_fee(ptr, ptr0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * A simple fee checker for mainnet v1.0.\n    *\n    * SEE [check_fee](ledger::data_model::Transaction::check_fee)\n    * @returns {boolean}\n    */\n    check_fee() {\n        var ret = wasm.transactionbuilder_check_fee(this.ptr);\n        return ret !== 0;\n    }\n    /**\n    * Create a new transaction builder.\n    * @param {BigInt} seq_id - Unique sequence ID to prevent replay attacks.\n    * @param {BigInt} seq_id\n    * @returns {TransactionBuilder}\n    */\n    static new(seq_id) {\n        uint64CvtShim[0] = seq_id;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.transactionbuilder_new(low0, high0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransactionBuilder to add an asset definition operation to a transaction builder instance.\n    * @example <caption> Error handling </caption>\n    * try {\n    *     await wasm.add_operation_create_asset(wasm.new_keypair(), \"test_memo\", wasm.random_asset_type(), wasm.AssetRules.default());\n    * } catch (err) {\n    *     console.log(err)\n    * }\n    *\n    * @param {XfrKeyPair} key_pair -  Issuer XfrKeyPair.\n    * @param {string} memo - Text field for asset definition.\n    * @param {string} token_code - Optional Base64 string representing the token code of the asset to be issued.\n    * If empty, a token code will be chosen at random.\n    * @param {AssetRules} asset_rules - Asset rules object specifying which simple policies apply\n    * to the asset.\n    * @param {XfrKeyPair} key_pair\n    * @param {string} memo\n    * @param {string} token_code\n    * @param {AssetRules} asset_rules\n    * @returns {TransactionBuilder}\n    */\n    add_operation_create_asset(key_pair, memo, token_code, asset_rules) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(memo, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(token_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        _assertClass(asset_rules, AssetRules);\n        var ptr2 = asset_rules.ptr;\n        asset_rules.ptr = 0;\n        var ret = wasm.transactionbuilder_add_operation_create_asset(ptr, key_pair.ptr, ptr0, len0, ptr1, len1, ptr2);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @ignore\n    * @param {XfrKeyPair} key_pair\n    * @param {string} memo\n    * @param {string} token_code\n    * @param {string} policy_choice\n    * @param {AssetRules} asset_rules\n    * @returns {TransactionBuilder}\n    */\n    add_operation_create_asset_with_policy(key_pair, memo, token_code, policy_choice, asset_rules) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(memo, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(token_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passStringToWasm0(policy_choice, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        _assertClass(asset_rules, AssetRules);\n        var ptr3 = asset_rules.ptr;\n        asset_rules.ptr = 0;\n        var ret = wasm.transactionbuilder_add_operation_create_asset_with_policy(ptr, key_pair.ptr, ptr0, len0, ptr1, len1, ptr2, len2, ptr3);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @ignore\n    * @param {string} token_code\n    * @param {string} which_check\n    * @returns {TransactionBuilder}\n    */\n    add_policy_option(token_code, which_check) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ptr0 = passStringToWasm0(token_code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(which_check, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_policy_option(ptr, ptr0, len0, ptr1, len1);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransactionBuilder to add an asset issuance to a transaction builder instance.\n    *\n    * Use this function for simple one-shot issuances.\n    *\n    * @param {XfrKeyPair} key_pair  - Issuer XfrKeyPair.\n    * and types of traced assets.\n    * @param {string} code - base64 string representing the token code of the asset to be issued.\n    * @param {BigInt} seq_num - Issuance sequence number. Every subsequent issuance of a given asset type must have a higher sequence number than before.\n    * @param {BigInt} amount - Amount to be issued.\n    * @param {boolean} conf_amount - `true` means the asset amount is confidential, and `false` means it's nonconfidential.\n    * @param {PublicParams} zei_params - Public parameters necessary to generate asset records.\n    * @param {XfrKeyPair} key_pair\n    * @param {string} code\n    * @param {BigInt} seq_num\n    * @param {BigInt} amount\n    * @param {boolean} conf_amount\n    * @param {PublicParams} zei_params\n    * @returns {TransactionBuilder}\n    */\n    add_basic_issue_asset(key_pair, code, seq_num, amount, conf_amount, zei_params) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = seq_num;\n        const low1 = u32CvtShim[0];\n        const high1 = u32CvtShim[1];\n        uint64CvtShim[0] = amount;\n        const low2 = u32CvtShim[0];\n        const high2 = u32CvtShim[1];\n        _assertClass(zei_params, PublicParams);\n        var ret = wasm.transactionbuilder_add_basic_issue_asset(ptr, key_pair.ptr, ptr0, len0, low1, high1, low2, high2, conf_amount, zei_params.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that appends a credential commitment to the address\n    * identity registry.\n    * @param {XfrKeyPair} key_pair - Ledger key that is tied to the credential.\n    * @param {CredUserPublicKey} user_public_key - Public key of the credential user.\n    * @param {CredIssuerPublicKey} issuer_public_key - Public key of the credential issuer.\n    * @param {CredentialCommitment} commitment - Credential commitment to add to the address identity registry.\n    * @param {CredPoK} pok- Proof that the credential commitment is valid.\n    * @see {@link module:Findora-Wasm.wasm_credential_commit|wasm_credential_commit} for information about how to generate a credential\n    * commitment.\n    * @param {XfrKeyPair} key_pair\n    * @param {CredUserPublicKey} user_public_key\n    * @param {CredIssuerPublicKey} issuer_public_key\n    * @param {CredentialCommitment} commitment\n    * @param {CredentialPoK} pok\n    * @returns {TransactionBuilder}\n    */\n    add_operation_air_assign(key_pair, user_public_key, issuer_public_key, commitment, pok) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(key_pair, XfrKeyPair);\n        _assertClass(user_public_key, CredUserPublicKey);\n        _assertClass(issuer_public_key, CredIssuerPublicKey);\n        _assertClass(commitment, CredentialCommitment);\n        _assertClass(pok, CredentialPoK);\n        var ret = wasm.transactionbuilder_add_operation_air_assign(ptr, key_pair.ptr, user_public_key.ptr, issuer_public_key.ptr, commitment.ptr, pok.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that removes a hash from ledger's custom data\n    * store.\n    * @param {XfrKeyPair} auth_key_pair - Key pair that is authorized to delete the hash at the\n    * provided key.\n    * @param {Key} key - The key of the custom data store whose value will be cleared if the\n    * transaction validates.\n    * @param {BigInt} seq_num - Nonce to prevent replays.\n    * @param {XfrKeyPair} auth_key_pair\n    * @param {Key} key\n    * @param {BigInt} seq_num\n    * @returns {TransactionBuilder}\n    */\n    add_operation_kv_update_no_hash(auth_key_pair, key, seq_num) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(auth_key_pair, XfrKeyPair);\n        _assertClass(key, Key);\n        uint64CvtShim[0] = seq_num;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.transactionbuilder_add_operation_kv_update_no_hash(ptr, auth_key_pair.ptr, key.ptr, low0, high0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that adds a hash to the ledger's custom data\n    * store.\n    * @param {XfrKeyPair} auth_key_pair - Key pair that is authorized to add the hash at the\n    * provided key.\n    * @param {Key} key - The key of the custom data store the value will be added to if the\n    * transaction validates.\n    * @param {KVHash} hash - The hash to add to the custom data store.\n    * @param {BigInt} seq_num - Nonce to prevent replays.\n    * @param {XfrKeyPair} auth_key_pair\n    * @param {Key} key\n    * @param {BigInt} seq_num\n    * @param {KVHash} kv_hash\n    * @returns {TransactionBuilder}\n    */\n    add_operation_kv_update_with_hash(auth_key_pair, key, seq_num, kv_hash) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(auth_key_pair, XfrKeyPair);\n        _assertClass(key, Key);\n        uint64CvtShim[0] = seq_num;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(kv_hash, KVHash);\n        var ret = wasm.transactionbuilder_add_operation_kv_update_with_hash(ptr, auth_key_pair.ptr, key.ptr, low0, high0, kv_hash.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds an operation to the transaction builder that adds a hash to the ledger's custom data\n    * store.\n    * @param {XfrKeyPair} auth_key_pair - Asset creator key pair.\n    * @param {String} code - base64 string representing token code of the asset whose memo will be updated.\n    * transaction validates.\n    * @param {String} new_memo - The new asset memo.\n    * @see {@link module:Findora-Wasm~AssetRules#set_updatable|AssetRules.set_updatable} for more information about how\n    * to define an updatable asset.\n    * @param {XfrKeyPair} auth_key_pair\n    * @param {string} code\n    * @param {string} new_memo\n    * @returns {TransactionBuilder}\n    */\n    add_operation_update_memo(auth_key_pair, code, new_memo) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(auth_key_pair, XfrKeyPair);\n        var ptr0 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passStringToWasm0(new_memo, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_operation_update_memo(ptr, auth_key_pair.ptr, ptr0, len0, ptr1, len1);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Adds a serialized transfer asset operation to a transaction builder instance.\n    * @param {string} op - a JSON-serialized transfer operation.\n    * @see {@link module:Findora-Wasm~TransferOperationBuilder} for details on constructing a transfer operation.\n    * @throws Will throw an error if `op` fails to deserialize.\n    * @param {string} op\n    * @returns {TransactionBuilder}\n    */\n    add_transfer_operation(op) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ptr0 = passStringToWasm0(op, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.transactionbuilder_add_transfer_operation(ptr, ptr0, len0);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * @param {XfrKeyPair} kp\n    * @returns {TransactionBuilder}\n    */\n    sign(kp) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(kp, XfrKeyPair);\n        var ret = wasm.transactionbuilder_sign(ptr, kp.ptr);\n        return TransactionBuilder.__wrap(ret);\n    }\n    /**\n    * Extracts the serialized form of a transaction.\n    * @returns {string}\n    */\n    transaction() {\n        try {\n            wasm.transactionbuilder_transaction(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Calculates transaction handle.\n    * @returns {string}\n    */\n    transaction_handle() {\n        try {\n            wasm.transactionbuilder_transaction_handle(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Fetches a client record from a transaction.\n    * @param {number} idx - Record to fetch. Records are added to the transaction builder sequentially.\n    * @param {number} idx\n    * @returns {ClientAssetRecord}\n    */\n    get_owner_record(idx) {\n        var ret = wasm.transactionbuilder_get_owner_record(this.ptr, idx);\n        return ClientAssetRecord.__wrap(ret);\n    }\n    /**\n    * Fetches an owner memo from a transaction\n    * @param {number} idx - Owner memo to fetch. Owner memos are added to the transaction builder sequentially.\n    * @param {number} idx\n    * @returns {OwnerMemo | undefined}\n    */\n    get_owner_memo(idx) {\n        var ret = wasm.transactionbuilder_get_owner_memo(this.ptr, idx);\n        return ret === 0 ? undefined : OwnerMemo.__wrap(ret);\n    }\n}\nmodule.exports.TransactionBuilder = TransactionBuilder;\n/**\n* Structure that enables clients to construct complex transfers.\n*/\nclass TransferOperationBuilder {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TransferOperationBuilder.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_transferoperationbuilder_free(ptr);\n    }\n    /**\n    * Create a new transfer operation builder.\n    * @returns {TransferOperationBuilder}\n    */\n    static new() {\n        var ret = wasm.transferoperationbuilder_new();\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * @ignore\n    * @returns {string}\n    */\n    debug() {\n        try {\n            wasm.transferoperationbuilder_debug(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an input to a transfer operation builder.\n    * @param {TxoRef} txo_ref - Absolute or relative utxo reference\n    * @param {string} asset_record - Serialized client asset record to serve as transfer input. This record must exist on the\n    * ledger for the transfer to be valid.\n    * @param {OwnerMemo} owner_memo - Opening parameters.\n    * @param tracing_key {AssetTracerKeyPair} - Tracing key, must be added to traceable\n    * assets.\n    * @param {XfrKeyPair} key - Key pair associated with the input.\n    * @param {BigInt} amount - Amount of input record to transfer.\n    * @see {@link module:Findora-Wasm~TxoRef#create_absolute_txo_ref|TxoRef.create_absolute_txo_ref}\n    * or {@link module:Findora-Wasm~TxoRef#create_relative_txo_ref|TxoRef.create_relative_txo_ref} for details on txo\n    * references.\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for details on fetching blind asset records.\n    * @throws Will throw an error if `oar` or `txo_ref` fail to deserialize.\n    * @param {TxoRef} txo_ref\n    * @param {ClientAssetRecord} asset_record\n    * @param {OwnerMemo | undefined} owner_memo\n    * @param {TracingPolicies} tracing_policies\n    * @param {XfrKeyPair} key\n    * @param {BigInt} amount\n    * @returns {TransferOperationBuilder}\n    */\n    add_input_with_tracing(txo_ref, asset_record, owner_memo, tracing_policies, key, amount) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(txo_ref, TxoRef);\n        var ptr0 = txo_ref.ptr;\n        txo_ref.ptr = 0;\n        _assertClass(asset_record, ClientAssetRecord);\n        var ptr1 = asset_record.ptr;\n        asset_record.ptr = 0;\n        let ptr2 = 0;\n        if (!isLikeNone(owner_memo)) {\n            _assertClass(owner_memo, OwnerMemo);\n            ptr2 = owner_memo.ptr;\n            owner_memo.ptr = 0;\n        }\n        _assertClass(tracing_policies, TracingPolicies);\n        _assertClass(key, XfrKeyPair);\n        uint64CvtShim[0] = amount;\n        const low3 = u32CvtShim[0];\n        const high3 = u32CvtShim[1];\n        var ret = wasm.transferoperationbuilder_add_input_with_tracing(ptr, ptr0, ptr1, ptr2, tracing_policies.ptr, key.ptr, low3, high3);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an input to a transfer operation builder.\n    * @param {TxoRef} txo_ref - Absolute or relative utxo reference\n    * @param {string} asset_record - Serialized client asset record to serve as transfer input. This record must exist on the\n    * ledger for the transfer to be valid\n    * @param {OwnerMemo} owner_memo - Opening parameters.\n    * @param {XfrKeyPair} key - Key pair associated with the input.\n    * @param {BigInt} amount - Amount of input record to transfer\n    * or {@link module:Findora-Wasm~TxoRef#create_relative_txo_ref|TxoRef.create_relative_txo_ref} for details on txo\n    * references.\n    * @see {@link module:Findora-Network~Network#getUtxo|Network.getUtxo} for details on fetching blind asset records.\n    * @throws Will throw an error if `oar` or `txo_ref` fail to deserialize.\n    * @param {TxoRef} txo_ref\n    * @param {ClientAssetRecord} asset_record\n    * @param {OwnerMemo | undefined} owner_memo\n    * @param {XfrKeyPair} key\n    * @param {BigInt} amount\n    * @returns {TransferOperationBuilder}\n    */\n    add_input_no_tracing(txo_ref, asset_record, owner_memo, key, amount) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(txo_ref, TxoRef);\n        var ptr0 = txo_ref.ptr;\n        txo_ref.ptr = 0;\n        _assertClass(asset_record, ClientAssetRecord);\n        let ptr1 = 0;\n        if (!isLikeNone(owner_memo)) {\n            _assertClass(owner_memo, OwnerMemo);\n            ptr1 = owner_memo.ptr;\n            owner_memo.ptr = 0;\n        }\n        _assertClass(key, XfrKeyPair);\n        uint64CvtShim[0] = amount;\n        const low2 = u32CvtShim[0];\n        const high2 = u32CvtShim[1];\n        var ret = wasm.transferoperationbuilder_add_input_no_tracing(ptr, ptr0, asset_record.ptr, ptr1, key.ptr, low2, high2);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an output to a transfer operation builder.\n    *\n    * @param {BigInt} amount - amount to transfer to the recipient.\n    * @param {XfrPublicKey} recipient - public key of the recipient.\n    * @param tracing_key {AssetTracerKeyPair} - Optional tracing key, must be added to traced\n    * assets.\n    * @param code {string} - String representation of the asset token code.\n    * @param conf_amount {boolean} - `true` means the output's asset amount is confidential, and `false` means it's nonconfidential.\n    * @param conf_type {boolean} - `true` means the output's asset type is confidential, and `false` means it's nonconfidential.\n    * @throws Will throw an error if `code` fails to deserialize.\n    * @param {BigInt} amount\n    * @param {XfrPublicKey} recipient\n    * @param {TracingPolicies} tracing_policies\n    * @param {string} code\n    * @param {boolean} conf_amount\n    * @param {boolean} conf_type\n    * @returns {TransferOperationBuilder}\n    */\n    add_output_with_tracing(amount, recipient, tracing_policies, code, conf_amount, conf_type) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        uint64CvtShim[0] = amount;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(recipient, XfrPublicKey);\n        _assertClass(tracing_policies, TracingPolicies);\n        var ptr1 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transferoperationbuilder_add_output_with_tracing(ptr, low0, high0, recipient.ptr, tracing_policies.ptr, ptr1, len1, conf_amount, conf_type);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add an output to a transfer operation builder.\n    *\n    * @param {BigInt} amount - amount to transfer to the recipient\n    * @param {XfrPublicKey} recipient - public key of the recipient\n    * @param code {string} - String representaiton of the asset token code\n    * @param conf_amount {boolean} - `true` means the output's asset amount is confidential, and `false` means it's nonconfidential.\n    * @param conf_type {boolean} - `true` means the output's asset type is confidential, and `false` means it's nonconfidential.\n    * @throws Will throw an error if `code` fails to deserialize.\n    * @param {BigInt} amount\n    * @param {XfrPublicKey} recipient\n    * @param {string} code\n    * @param {boolean} conf_amount\n    * @param {boolean} conf_type\n    * @returns {TransferOperationBuilder}\n    */\n    add_output_no_tracing(amount, recipient, code, conf_amount, conf_type) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        uint64CvtShim[0] = amount;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        _assertClass(recipient, XfrPublicKey);\n        var ptr1 = passStringToWasm0(code, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.transferoperationbuilder_add_output_no_tracing(ptr, low0, high0, recipient.ptr, ptr1, len1, conf_amount, conf_type);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to ensure the transfer inputs and outputs are balanced.\n    * This function will add change outputs for all unspent portions of input records.\n    * @throws Will throw an error if the transaction cannot be balanced.\n    * @returns {TransferOperationBuilder}\n    */\n    balance() {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ret = wasm.transferoperationbuilder_balance(ptr);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to finalize the transaction.\n    *\n    * @throws Will throw an error if input and output amounts do not add up.\n    * @throws Will throw an error if not all record owners have signed the transaction.\n    * @returns {TransferOperationBuilder}\n    */\n    create() {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        var ret = wasm.transferoperationbuilder_create(ptr);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Wraps around TransferOperationBuilder to add a signature to the operation.\n    *\n    * All input owners must sign.\n    *\n    * @param {XfrKeyPair} kp - key pair of one of the input owners.\n    * @param {XfrKeyPair} kp\n    * @returns {TransferOperationBuilder}\n    */\n    sign(kp) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(kp, XfrKeyPair);\n        var ret = wasm.transferoperationbuilder_sign(ptr, kp.ptr);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * Co-sign an input index\n    * @param {XfrKeyPair} kp - Co-signature key.\n    * @params {Number} input_idx - Input index to apply co-signature to.\n    * @param {XfrKeyPair} kp\n    * @param {number} input_idx\n    * @returns {TransferOperationBuilder}\n    */\n    add_cosignature(kp, input_idx) {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        _assertClass(kp, XfrKeyPair);\n        var ret = wasm.transferoperationbuilder_add_cosignature(ptr, kp.ptr, input_idx);\n        return TransferOperationBuilder.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    builder() {\n        try {\n            wasm.transferoperationbuilder_builder(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Wraps around TransferOperationBuilder to extract an operation expression as JSON.\n    * @returns {string}\n    */\n    transaction() {\n        try {\n            wasm.transferoperationbuilder_transaction(8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n}\nmodule.exports.TransferOperationBuilder = TransferOperationBuilder;\n/**\n* Indicates whether the TXO ref is an absolute or relative value.\n*/\nclass TxoRef {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TxoRef.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_txoref_free(ptr);\n    }\n    /**\n    * Creates a relative txo reference as a JSON string. Relative txo references are offset\n    * backwards from the operation they appear in -- 0 is the most recent, (n-1) is the first output\n    * of the transaction.\n    *\n    * Use relative txo indexing when referring to outputs of intermediate operations (e.g. a\n    * transaction containing both an issuance and a transfer).\n    *\n    * # Arguments\n    * @param {BigInt} idx -  Relative TXO (transaction output) SID.\n    * @param {BigInt} idx\n    * @returns {TxoRef}\n    */\n    static relative(idx) {\n        uint64CvtShim[0] = idx;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.txoref_relative(low0, high0);\n        return TxoRef.__wrap(ret);\n    }\n    /**\n    * Creates an absolute transaction reference as a JSON string.\n    *\n    * Use absolute txo indexing when referring to an output that has been assigned a utxo index (i.e.\n    * when the utxo has been committed to the ledger in an earlier transaction).\n    *\n    * # Arguments\n    * @param {BigInt} idx -  Txo (transaction output) SID.\n    * @param {BigInt} idx\n    * @returns {TxoRef}\n    */\n    static absolute(idx) {\n        uint64CvtShim[0] = idx;\n        const low0 = u32CvtShim[0];\n        const high0 = u32CvtShim[1];\n        var ret = wasm.txoref_absolute(low0, high0);\n        return TxoRef.__wrap(ret);\n    }\n}\nmodule.exports.TxoRef = TxoRef;\n/**\n*/\nclass XfrKeyPair {\n\n    static __wrap(ptr) {\n        const obj = Object.create(XfrKeyPair.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_xfrkeypair_free(ptr);\n    }\n    /**\n    * @returns {XfrPublicKey}\n    */\n    get pub_key() {\n        var ret = wasm.__wbg_get_xfrkeypair_pub_key(this.ptr);\n        return XfrPublicKey.__wrap(ret);\n    }\n    /**\n    * @param {XfrPublicKey} arg0\n    */\n    set pub_key(arg0) {\n        _assertClass(arg0, XfrPublicKey);\n        var ptr0 = arg0.ptr;\n        arg0.ptr = 0;\n        wasm.__wbg_set_xfrkeypair_pub_key(this.ptr, ptr0);\n    }\n}\nmodule.exports.XfrKeyPair = XfrKeyPair;\n/**\n*/\nclass XfrPublicKey {\n\n    static __wrap(ptr) {\n        const obj = Object.create(XfrPublicKey.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        wasm.__wbg_xfrpublickey_free(ptr);\n    }\n}\nmodule.exports.XfrPublicKey = XfrPublicKey;\n\nmodule.exports.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nmodule.exports.__wbindgen_json_serialize = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nmodule.exports.__wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_getRandomValues_57e4008f45f0e105 = handleError(function(arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n});\n\nmodule.exports.__wbg_randomFillSync_d90848a552cbd666 = handleError(function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n});\n\nmodule.exports.__wbg_self_f865985e662246aa = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nmodule.exports.__wbg_static_accessor_MODULE_39947eb3fe77895f = function() {\n    var ret = module;\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_require_c59851dfa0dc7e78 = handleError(function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n});\n\nmodule.exports.__wbg_crypto_bfb05100db79193b = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_msCrypto_f6dddc6ae048b7e2 = function(arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nmodule.exports.__wbg_self_86b4b13392c7af56 = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nmodule.exports.__wbg_static_accessor_MODULE_452b4680e8614c81 = function() {\n    var ret = module;\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_require_f5521a5b85ad2542 = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_crypto_b8c92eaac23d0d80 = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_msCrypto_9ad6677321a08dd8 = function(arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_getRandomValues_dd27e6b0652b3236 = function(arg0) {\n    var ret = getObject(arg0).getRandomValues;\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_getRandomValues_e57c9b75ddead065 = function(arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n};\n\nmodule.exports.__wbg_randomFillSync_d2ba53160aec6aba = function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n};\n\nmodule.exports.__wbg_buffer_eb5185aa4a8e9c62 = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_length_2e324c9c0e74a81d = function(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nmodule.exports.__wbg_new_3d94e83f0a6bf252 = function(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_set_d4d7629a896d4b3e = function(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nmodule.exports.__wbg_newwithlength_02a009c0728d3ba1 = function(arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_subarray_cc54babc55409ee0 = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbindgen_debug_string = function(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nmodule.exports.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nmodule.exports.__wbindgen_rethrow = function(arg0) {\n    throw takeObject(arg0);\n};\n\nmodule.exports.__wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\nconst path = require('path').join(__dirname, 'wasm_bg.wasm');\nconst bytes = require('fs').readFileSync(path);\n\nconst wasmModule = new WebAssembly.Module(bytes);\nconst wasmInstance = new WebAssembly.Instance(wasmModule, imports);\nwasm = wasmInstance.exports;\nmodule.exports.__wasm = wasm;\n\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 3891;\nmodule.exports = webpackEmptyContext;","var debug;\n\nmodule.exports = function () {\n  if (!debug) {\n    try {\n      /* eslint global-require: off */\n      debug = require(\"debug\")(\"follow-redirects\");\n    }\n    catch (error) {\n      debug = function () { /* */ };\n    }\n  }\n  debug.apply(null, arguments);\n};\n","var url = require(\"url\");\nvar URL = url.URL;\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar Writable = require(\"stream\").Writable;\nvar assert = require(\"assert\");\nvar debug = require(\"./debug\");\n\n// Create handlers that pass events from native requests\nvar eventHandlers = Object.create(null);\n[\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\"\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  // Abort the internal request\n  this._currentRequest.removeAllListeners();\n  this._currentRequest.on(\"error\", noop);\n  this._currentRequest.abort();\n\n  // Abort this request\n  this.emit(\"abort\");\n  this.removeAllListeners();\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer() {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n  }\n\n  // Prevent a timeout from triggering\n  function clearTimer() {\n    clearTimeout(this._timeout);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!this.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Start the timer when the socket is opened\n  if (this.socket) {\n    startTimer();\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  this.once(\"response\", clearTimer);\n  this.once(\"error\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new TypeError(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var event in eventHandlers) {\n    /* istanbul ignore else */\n    if (event) {\n      request.on(event, eventHandlers[event]);\n    }\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      statusCode >= 300 && statusCode < 400) {\n    // Abort the current request\n    this._currentRequest.removeAllListeners();\n    this._currentRequest.on(\"error\", noop);\n    this._currentRequest.abort();\n    // Discard the remainder of the response to avoid waiting for data\n    response.destroy();\n\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new TooManyRedirectsError());\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe, […]\n    // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\n    // the request method from POST to GET for the subsequent request.\n    if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n        // RFC7231§6.4.4: The 303 (See Other) status code indicates that\n        // the server is redirecting the user agent to a different resource […]\n        // A user agent can perform a retrieval request targeting that URI\n        // (a GET or HEAD request if using HTTP) […]\n        (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      removeMatchingHeaders(/^content-/i, this._options.headers);\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    var previousHostName = removeMatchingHeaders(/^host$/i, this._options.headers) ||\n      url.parse(this._currentUrl).hostname;\n\n    // Create the redirected request\n    var redirectUrl = url.resolve(this._currentUrl, location);\n    debug(\"redirecting to\", redirectUrl);\n    this._isRedirect = true;\n    var redirectUrlParts = url.parse(redirectUrl);\n    Object.assign(this._options, redirectUrlParts);\n\n    // Drop the Authorization header if redirecting to another host\n    if (redirectUrlParts.hostname !== previousHostName) {\n      removeMatchingHeaders(/^authorization$/i, this._options.headers);\n    }\n\n    // Evaluate the beforeRedirect callback\n    if (typeof this._options.beforeRedirect === \"function\") {\n      var responseDetails = { headers: response.headers };\n      try {\n        this._options.beforeRedirect.call(null, this._options, responseDetails);\n      }\n      catch (err) {\n        this.emit(\"error\", err);\n        return;\n      }\n      this._sanitizeOptions(this._options);\n    }\n\n    // Perform the redirected request\n    try {\n      this._performRequest();\n    }\n    catch (cause) {\n      var error = new RedirectionError(\"Redirected request failed: \" + cause.message);\n      error.cause = cause;\n      this.emit(\"error\", error);\n    }\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters\n      if (typeof input === \"string\") {\n        var urlStr = input;\n        try {\n          input = urlToOptions(new URL(urlStr));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          input = url.parse(urlStr);\n        }\n      }\n      else if (URL && (input instanceof URL)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (typeof options === \"function\") {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return lastValue;\n}\n\nfunction createErrorType(code, defaultMessage) {\n  function CustomError(message) {\n    Error.captureStackTrace(this, this.constructor);\n    this.message = message || defaultMessage;\n  }\n  CustomError.prototype = new Error();\n  CustomError.prototype.constructor = CustomError;\n  CustomError.prototype.name = \"Error [\" + code + \"]\";\n  CustomError.prototype.code = code;\n  return CustomError;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","var json_stringify = require('./lib/stringify.js').stringify;\nvar json_parse     = require('./lib/parse.js');\n\nmodule.exports = function(options) {\n    return  {\n        parse: json_parse(options),\n        stringify: json_stringify\n    }\n};\n//create the default method members with no options applied for backwards compatibility\nmodule.exports.parse = json_parse();\nmodule.exports.stringify = json_stringify;\n","var BigNumber = null;\n\n// regexpxs extracted from\n// (c) BSD-3-Clause\n// https://github.com/fastify/secure-json-parse/graphs/contributors and https://github.com/hapijs/bourne/graphs/contributors\n\nconst suspectProtoRx = /(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])(?:p|\\\\u0070)(?:r|\\\\u0072)(?:o|\\\\u006[Ff])(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])/;\nconst suspectConstructorRx = /(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)/;\n\n/*\n    json_parse.js\n    2012-06-20\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    This file creates a json_parse function.\n    During create you can (optionally) specify some behavioural switches\n\n        require('json-bigint')(options)\n\n            The optional options parameter holds switches that drive certain\n            aspects of the parsing process:\n            * options.strict = true will warn about duplicate-key usage in the json.\n              The default (strict = false) will silently ignore those and overwrite\n              values for keys that are in duplicate use.\n\n    The resulting function follows this signature:\n        json_parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = json_parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n*/\n\n/*members \"\", \"\\\"\", \"\\/\", \"\\\\\", at, b, call, charAt, f, fromCharCode,\n    hasOwnProperty, message, n, name, prototype, push, r, t, text\n*/\n\nvar json_parse = function (options) {\n  'use strict';\n\n  // This is a function that can parse a JSON text, producing a JavaScript\n  // data structure. It is a simple, recursive descent parser. It does not use\n  // eval or regular expressions, so it can be used as a model for implementing\n  // a JSON parser in other languages.\n\n  // We are defining the function inside of another function to avoid creating\n  // global variables.\n\n  // Default options one can override by passing options to the parse()\n  var _options = {\n    strict: false, // not being strict means do not generate syntax errors for \"duplicate key\"\n    storeAsString: false, // toggles whether the values should be stored as BigNumber (default) or a string\n    alwaysParseAsBig: false, // toggles whether all numbers should be Big\n    useNativeBigInt: false, // toggles whether to use native BigInt instead of bignumber.js\n    protoAction: 'error',\n    constructorAction: 'error',\n  };\n\n  // If there are options, then use them to override the default _options\n  if (options !== undefined && options !== null) {\n    if (options.strict === true) {\n      _options.strict = true;\n    }\n    if (options.storeAsString === true) {\n      _options.storeAsString = true;\n    }\n    _options.alwaysParseAsBig =\n      options.alwaysParseAsBig === true ? options.alwaysParseAsBig : false;\n    _options.useNativeBigInt =\n      options.useNativeBigInt === true ? options.useNativeBigInt : false;\n\n    if (typeof options.constructorAction !== 'undefined') {\n      if (\n        options.constructorAction === 'error' ||\n        options.constructorAction === 'ignore' ||\n        options.constructorAction === 'preserve'\n      ) {\n        _options.constructorAction = options.constructorAction;\n      } else {\n        throw new Error(\n          `Incorrect value for constructorAction option, must be \"error\", \"ignore\" or undefined but passed ${options.constructorAction}`\n        );\n      }\n    }\n\n    if (typeof options.protoAction !== 'undefined') {\n      if (\n        options.protoAction === 'error' ||\n        options.protoAction === 'ignore' ||\n        options.protoAction === 'preserve'\n      ) {\n        _options.protoAction = options.protoAction;\n      } else {\n        throw new Error(\n          `Incorrect value for protoAction option, must be \"error\", \"ignore\" or undefined but passed ${options.protoAction}`\n        );\n      }\n    }\n  }\n\n  var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n      '\"': '\"',\n      '\\\\': '\\\\',\n      '/': '/',\n      b: '\\b',\n      f: '\\f',\n      n: '\\n',\n      r: '\\r',\n      t: '\\t',\n    },\n    text,\n    error = function (m) {\n      // Call error when something is wrong.\n\n      throw {\n        name: 'SyntaxError',\n        message: m,\n        at: at,\n        text: text,\n      };\n    },\n    next = function (c) {\n      // If a c parameter is provided, verify that it matches the current character.\n\n      if (c && c !== ch) {\n        error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n      }\n\n      // Get the next character. When there are no more characters,\n      // return the empty string.\n\n      ch = text.charAt(at);\n      at += 1;\n      return ch;\n    },\n    number = function () {\n      // Parse a number value.\n\n      var number,\n        string = '';\n\n      if (ch === '-') {\n        string = '-';\n        next('-');\n      }\n      while (ch >= '0' && ch <= '9') {\n        string += ch;\n        next();\n      }\n      if (ch === '.') {\n        string += '.';\n        while (next() && ch >= '0' && ch <= '9') {\n          string += ch;\n        }\n      }\n      if (ch === 'e' || ch === 'E') {\n        string += ch;\n        next();\n        if (ch === '-' || ch === '+') {\n          string += ch;\n          next();\n        }\n        while (ch >= '0' && ch <= '9') {\n          string += ch;\n          next();\n        }\n      }\n      number = +string;\n      if (!isFinite(number)) {\n        error('Bad number');\n      } else {\n        if (BigNumber == null) BigNumber = require('bignumber.js');\n        //if (number > 9007199254740992 || number < -9007199254740992)\n        // Bignumber has stricter check: everything with length > 15 digits disallowed\n        if (string.length > 15)\n          return _options.storeAsString\n            ? string\n            : _options.useNativeBigInt\n            ? BigInt(string)\n            : new BigNumber(string);\n        else\n          return !_options.alwaysParseAsBig\n            ? number\n            : _options.useNativeBigInt\n            ? BigInt(number)\n            : new BigNumber(number);\n      }\n    },\n    string = function () {\n      // Parse a string value.\n\n      var hex,\n        i,\n        string = '',\n        uffff;\n\n      // When parsing for string values, we must look for \" and \\ characters.\n\n      if (ch === '\"') {\n        var startAt = at;\n        while (next()) {\n          if (ch === '\"') {\n            if (at - 1 > startAt) string += text.substring(startAt, at - 1);\n            next();\n            return string;\n          }\n          if (ch === '\\\\') {\n            if (at - 1 > startAt) string += text.substring(startAt, at - 1);\n            next();\n            if (ch === 'u') {\n              uffff = 0;\n              for (i = 0; i < 4; i += 1) {\n                hex = parseInt(next(), 16);\n                if (!isFinite(hex)) {\n                  break;\n                }\n                uffff = uffff * 16 + hex;\n              }\n              string += String.fromCharCode(uffff);\n            } else if (typeof escapee[ch] === 'string') {\n              string += escapee[ch];\n            } else {\n              break;\n            }\n            startAt = at;\n          }\n        }\n      }\n      error('Bad string');\n    },\n    white = function () {\n      // Skip whitespace.\n\n      while (ch && ch <= ' ') {\n        next();\n      }\n    },\n    word = function () {\n      // true, false, or null.\n\n      switch (ch) {\n        case 't':\n          next('t');\n          next('r');\n          next('u');\n          next('e');\n          return true;\n        case 'f':\n          next('f');\n          next('a');\n          next('l');\n          next('s');\n          next('e');\n          return false;\n        case 'n':\n          next('n');\n          next('u');\n          next('l');\n          next('l');\n          return null;\n      }\n      error(\"Unexpected '\" + ch + \"'\");\n    },\n    value, // Place holder for the value function.\n    array = function () {\n      // Parse an array value.\n\n      var array = [];\n\n      if (ch === '[') {\n        next('[');\n        white();\n        if (ch === ']') {\n          next(']');\n          return array; // empty array\n        }\n        while (ch) {\n          array.push(value());\n          white();\n          if (ch === ']') {\n            next(']');\n            return array;\n          }\n          next(',');\n          white();\n        }\n      }\n      error('Bad array');\n    },\n    object = function () {\n      // Parse an object value.\n\n      var key,\n        object = Object.create(null);\n\n      if (ch === '{') {\n        next('{');\n        white();\n        if (ch === '}') {\n          next('}');\n          return object; // empty object\n        }\n        while (ch) {\n          key = string();\n          white();\n          next(':');\n          if (\n            _options.strict === true &&\n            Object.hasOwnProperty.call(object, key)\n          ) {\n            error('Duplicate key \"' + key + '\"');\n          }\n\n          if (suspectProtoRx.test(key) === true) {\n            if (_options.protoAction === 'error') {\n              error('Object contains forbidden prototype property');\n            } else if (_options.protoAction === 'ignore') {\n              value();\n            } else {\n              object[key] = value();\n            }\n          } else if (suspectConstructorRx.test(key) === true) {\n            if (_options.constructorAction === 'error') {\n              error('Object contains forbidden constructor property');\n            } else if (_options.constructorAction === 'ignore') {\n              value();\n            } else {\n              object[key] = value();\n            }\n          } else {\n            object[key] = value();\n          }\n\n          white();\n          if (ch === '}') {\n            next('}');\n            return object;\n          }\n          next(',');\n          white();\n        }\n      }\n      error('Bad object');\n    };\n\n  value = function () {\n    // Parse a JSON value. It could be an object, an array, a string, a number,\n    // or a word.\n\n    white();\n    switch (ch) {\n      case '{':\n        return object();\n      case '[':\n        return array();\n      case '\"':\n        return string();\n      case '-':\n        return number();\n      default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n  };\n\n  // Return the json_parse function. It will have access to all of the above\n  // functions and variables.\n\n  return function (source, reviver) {\n    var result;\n\n    text = source + '';\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n      error('Syntax error');\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function'\n      ? (function walk(holder, key) {\n          var k,\n            v,\n            value = holder[key];\n          if (value && typeof value === 'object') {\n            Object.keys(value).forEach(function (k) {\n              v = walk(value, k);\n              if (v !== undefined) {\n                value[k] = v;\n              } else {\n                delete value[k];\n              }\n            });\n          }\n          return reviver.call(holder, key, value);\n        })({ '': result }, '')\n      : result;\n  };\n};\n\nmodule.exports = json_parse;\n","var BigNumber = require('bignumber.js');\n\n/*\n    json2.js\n    2013-05-26\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    See http://www.JSON.org/js.html\n\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n\n\n    This file creates a global JSON object containing two methods: stringify\n    and parse.\n\n        JSON.stringify(value, replacer, space)\n            value       any JavaScript value, usually an object or array.\n\n            replacer    an optional parameter that determines how object\n                        values are stringified for objects. It can be a\n                        function or an array of strings.\n\n            space       an optional parameter that specifies the indentation\n                        of nested structures. If it is omitted, the text will\n                        be packed without extra whitespace. If it is a number,\n                        it will specify the number of spaces to indent at each\n                        level. If it is a string (such as '\\t' or '&nbsp;'),\n                        it contains the characters used to indent at each level.\n\n            This method produces a JSON text from a JavaScript value.\n\n            When an object value is found, if the object contains a toJSON\n            method, its toJSON method will be called and the result will be\n            stringified. A toJSON method does not serialize: it returns the\n            value represented by the name/value pair that should be serialized,\n            or undefined if nothing should be serialized. The toJSON method\n            will be passed the key associated with the value, and this will be\n            bound to the value\n\n            For example, this would serialize Dates as ISO strings.\n\n                Date.prototype.toJSON = function (key) {\n                    function f(n) {\n                        // Format integers to have at least two digits.\n                        return n < 10 ? '0' + n : n;\n                    }\n\n                    return this.getUTCFullYear()   + '-' +\n                         f(this.getUTCMonth() + 1) + '-' +\n                         f(this.getUTCDate())      + 'T' +\n                         f(this.getUTCHours())     + ':' +\n                         f(this.getUTCMinutes())   + ':' +\n                         f(this.getUTCSeconds())   + 'Z';\n                };\n\n            You can provide an optional replacer method. It will be passed the\n            key and value of each member, with this bound to the containing\n            object. The value that is returned from your method will be\n            serialized. If your method returns undefined, then the member will\n            be excluded from the serialization.\n\n            If the replacer parameter is an array of strings, then it will be\n            used to select the members to be serialized. It filters the results\n            such that only members with keys listed in the replacer array are\n            stringified.\n\n            Values that do not have JSON representations, such as undefined or\n            functions, will not be serialized. Such values in objects will be\n            dropped; in arrays they will be replaced with null. You can use\n            a replacer function to replace those with JSON values.\n            JSON.stringify(undefined) returns undefined.\n\n            The optional space parameter produces a stringification of the\n            value that is filled with line breaks and indentation to make it\n            easier to read.\n\n            If the space parameter is a non-empty string, then that string will\n            be used for indentation. If the space parameter is a number, then\n            the indentation will be that many spaces.\n\n            Example:\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}]);\n            // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\\t');\n            // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n            text = JSON.stringify([new Date()], function (key, value) {\n                return this[key] instanceof Date ?\n                    'Date(' + this[key] + ')' : value;\n            });\n            // text is '[\"Date(---current time---)\"]'\n\n\n        JSON.parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = JSON.parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n            myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n                var d;\n                if (typeof value === 'string' &&\n                        value.slice(0, 5) === 'Date(' &&\n                        value.slice(-1) === ')') {\n                    d = new Date(value.slice(5, -1));\n                    if (d) {\n                        return d;\n                    }\n                }\n                return value;\n            });\n\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n*/\n\n/*jslint evil: true, regexp: true */\n\n/*members \"\", \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\\"\", JSON, \"\\\\\", apply,\n    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n    test, toJSON, toString, valueOf\n*/\n\n\n// Create a JSON object only if one does not already exist. We create the\n// methods in a closure to avoid creating global variables.\n\nvar JSON = module.exports;\n\n(function () {\n    'use strict';\n\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n < 10 ? '0' + n : n;\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n            var c = meta[a];\n            return typeof c === 'string'\n                ? c\n                : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            mind = gap,\n            partial,\n            value = holder[key],\n            isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value));\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n        if (value && typeof value === 'object' &&\n                typeof value.toJSON === 'function') {\n            value = value.toJSON(key);\n        }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value) {\n        case 'string':\n            if (isBigNumber) {\n                return value;\n            } else {\n                return quote(value);\n            }\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n        case 'bigint':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n            return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n            if (!value) {\n                return 'null';\n            }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n            gap += indent;\n            partial = [];\n\n// Is the value an array?\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                v = partial.length === 0\n                    ? '[]'\n                    : gap\n                    ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                    : '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    if (typeof rep[i] === 'string') {\n                        k = rep[i];\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                Object.keys(value).forEach(function(k) {\n                    var v = str(k, value);\n                    if (v) {\n                        partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                    }\n                });\n            }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n            v = partial.length === 0\n                ? '{}'\n                : gap\n                ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n                : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== 'function') {\n        JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap = '';\n            indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                    typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n            return str('', {'': value});\n        };\n    }\n}());\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","import { CACHE_ENTRIES } from './config/cache';\nimport Cache from './services/cacheStore/factory';\nimport { FileCacheProvider, MemoryCacheProvider } from './services/cacheStore/providers';\nimport { CacheItem } from './services/cacheStore/types';\n\ntype SdkCacheProvider = typeof FileCacheProvider | typeof MemoryCacheProvider;\n\nexport interface SdkEnvironmentConfig {\n  hostUrl: string;\n  queryPort?: string;\n  ledgerPort?: string;\n  submissionPort?: string;\n  cacheProvider?: SdkCacheProvider;\n  cachePath?: string;\n}\n\nexport default class Sdk {\n  public static environment = {\n    hostUrl: 'https://dev-staging.dev.findora.org',\n    queryPort: '8667',\n    ledgerPort: '8668',\n    submissionPort: '8669',\n    explorerApiPort: '26657',\n    cacheProvider: MemoryCacheProvider,\n    cachePath: './cache',\n  };\n\n  public static init(sdkEnv: SdkEnvironmentConfig): void {\n    Sdk.environment = { ...Sdk.environment, ...sdkEnv };\n  }\n\n  public static async setUtxoData(walletAddress: string, utxoCache: CacheItem[]): Promise<true> {\n    const cacheDataToSave: CacheItem = {};\n\n    utxoCache.forEach(item => {\n      cacheDataToSave[`sid_${item.sid}`] = item;\n    });\n\n    await Cache.write(\n      `${CACHE_ENTRIES.UTXO_DATA}_${walletAddress}`,\n      cacheDataToSave,\n      Sdk.environment.cacheProvider,\n    );\n\n    return true;\n  }\n}\n","import { BigNumberValue, create as createBigNumber, fromWei } from '../../services/bigNumber';\nimport { addUtxo, AddUtxoItem } from '../../services/utxoHelper';\nimport { createKeypair, WalletKeypar } from '../keypair';\nimport * as Network from '../network';\nimport { getFraAssetCode } from '../sdkAsset';\n\nexport const getAssetBalance = async (\n  walletKeypair: WalletKeypar,\n  assetCode: string,\n  sids: number[],\n): Promise<BigNumberValue> => {\n  let utxoDataList;\n\n  try {\n    utxoDataList = await addUtxo(walletKeypair, sids);\n  } catch (error) {\n    throw new Error(`Could not get list of addUtxo, Details: \"${error.message}\"`);\n  }\n\n  if (!utxoDataList.length) {\n    return createBigNumber(0);\n  }\n\n  const filteredUtxoList = utxoDataList.filter(row => row?.body?.asset_type === assetCode);\n\n  if (!filteredUtxoList.length) {\n    return createBigNumber(0);\n  }\n\n  const currentBalance = filteredUtxoList.reduce((acc: number, currentUtxoItem: AddUtxoItem) => {\n    return acc + Number(currentUtxoItem.body?.amount || 0);\n  }, 0);\n\n  return createBigNumber(currentBalance);\n};\n\nexport const getBalance = async (walletKeypair: WalletKeypar, assetCode?: string): Promise<string> => {\n  const sidsResult = await Network.getOwnedSids(walletKeypair.publickey);\n\n  const { response: sids } = sidsResult;\n\n  if (!sids) {\n    throw new Error('No sids were fetched!');\n  }\n\n  const fraAssetCode = await getFraAssetCode();\n\n  const assetCodeToUse = assetCode || fraAssetCode;\n\n  try {\n    const balanceInWei = await getAssetBalance(walletKeypair, assetCodeToUse, sids);\n\n    const balance = fromWei(balanceInWei, 6).toFormat(6);\n    return balance;\n  } catch (err) {\n    throw new Error(`Could not fetch balance for \"${assetCodeToUse}\". Error - ${err.message}`);\n  }\n};\n\nexport const create = async (password: string): Promise<WalletKeypar> => {\n  let walletKeyPair;\n\n  try {\n    walletKeyPair = await createKeypair(password);\n  } catch (error) {\n    throw new Error(`Could not create a new account. \"${error.message}\"`);\n  }\n  return walletKeyPair;\n};\n","export * from './account';\n","export * as Asset from './sdkAsset';\nexport * as Keypair from './keypair';\nexport * as Network from './network';\nexport * as Account from './account';\nexport * as Transaction from './transaction';\n","export * from './keypair';\n","import { getLedger } from '../../services/ledger/ledgerWrapper';\nimport { XfrKeyPair } from '../../services/ledger/types';\n\nexport interface LightWalletKeypair {\n  address: string;\n  publickey: string;\n}\n\nexport interface WalletKeypar extends LightWalletKeypair {\n  keyStore: Uint8Array;\n  keypair: XfrKeyPair;\n  privateStr: string;\n}\n\nexport const getPrivateKeyStr = async (keypair: XfrKeyPair): Promise<string> => {\n  const ledger = await getLedger();\n  const privateStr = ledger.get_priv_key_str(keypair).replace(/^\"|\"$/g, '');\n  return privateStr;\n};\n\nexport const getPublicKeyStr = async (keypair: XfrKeyPair): Promise<string> => {\n  const ledger = await getLedger();\n  const publickey = ledger.get_pub_key_str(keypair).replace(/\"/g, '');\n  return publickey;\n};\n\nexport const getAddress = async (keypair: XfrKeyPair): Promise<string> => {\n  const ledger = await getLedger();\n  const address = ledger.public_key_to_bech32(ledger.get_pk_from_keypair(keypair));\n  return address;\n};\n\nexport const getAddressByPublicKey = async (publicKey: string): Promise<string> => {\n  const ledger = await getLedger();\n  const address = ledger.base64_to_bech32(publicKey);\n  return address;\n};\n\nexport const getAddressPublicAndKey = async (address: string): Promise<LightWalletKeypair> => {\n  const ledger = await getLedger();\n\n  const publickey = ledger.bech32_to_base64(address);\n\n  return {\n    address,\n    publickey,\n  };\n};\n\nexport const restoreFromPrivateKey = async (privateStr: string, password: string): Promise<WalletKeypar> => {\n  const ledger = await getLedger();\n\n  const toSend = `\"${privateStr}\"`;\n\n  let keypair;\n\n  try {\n    keypair = ledger.create_keypair_from_secret(toSend);\n  } catch (error) {\n    throw new Error(`could not restore keypair. details: \"${error.message}\"`);\n  }\n\n  if (!keypair) {\n    throw new Error('could not restore keypair. Keypair is empty');\n  }\n\n  const keypairStr = ledger.keypair_to_str(keypair);\n  const encrypted = ledger.encryption_pbkdf2_aes256gcm(keypairStr, password);\n\n  const publickey = await getPublicKeyStr(keypair);\n  const address = await getAddress(keypair);\n\n  return {\n    keyStore: encrypted,\n    publickey,\n    address,\n    keypair,\n    privateStr,\n  };\n};\n\nexport const restoreFromMnemonic = async (mnemonic: string[], password: string): Promise<WalletKeypar> => {\n  const ledger = await getLedger();\n\n  const keypair = ledger.restore_keypair_from_mnemonic_default(mnemonic.join(' '));\n  const keyPairStr = ledger.keypair_to_str(keypair);\n  const encrypted = ledger.encryption_pbkdf2_aes256gcm(keyPairStr, password);\n\n  const publickey = await getPublicKeyStr(keypair);\n  const address = await getAddress(keypair);\n\n  return {\n    keyStore: encrypted,\n    publickey,\n    address,\n    keypair,\n    privateStr: keyPairStr,\n  };\n};\n\nexport const restoreFromKeystore = async (keyStore: Uint8Array, password: string): Promise<WalletKeypar> => {\n  const ledger = await getLedger();\n\n  try {\n    const keyPairStr = ledger.decryption_pbkdf2_aes256gcm(keyStore, password);\n    const keypair = ledger.keypair_from_str(keyPairStr);\n    const encrypted = ledger.encryption_pbkdf2_aes256gcm(keyPairStr, password);\n\n    const publickey = await getPublicKeyStr(keypair);\n    const address = await getAddress(keypair);\n    const privateStr = await getPrivateKeyStr(keypair);\n\n    return {\n      keyStore: encrypted,\n      publickey,\n      address,\n      keypair,\n      privateStr,\n    };\n  } catch (err) {\n    throw new Error(`could not restore keypair from the key string. Details: \"${err.message}\"`);\n  }\n};\n\nexport const restoreFromKeystoreString = async (\n  keyStoreString: string,\n  password: string,\n): Promise<WalletKeypar> => {\n  try {\n    const keyStoreObject = JSON.parse(keyStoreString).encryptedKey;\n    const keyStore: Uint8Array = new Uint8Array(Object.values(keyStoreObject));\n\n    const result = await restoreFromKeystore(keyStore, password);\n\n    return result;\n  } catch (err) {\n    throw new Error(`could not restore keypair from the key store string. Details: \"${err.message}\"`);\n  }\n};\n\nexport const createKeypair = async (password: string): Promise<WalletKeypar> => {\n  const ledger = await getLedger();\n\n  const keypair = ledger.new_keypair();\n  const keyPairStr = ledger.keypair_to_str(keypair);\n  const encrypted = ledger.encryption_pbkdf2_aes256gcm(keyPairStr, password);\n\n  const privateStr = await getPrivateKeyStr(keypair);\n  const publickey = await getPublicKeyStr(keypair);\n  const address = await getAddress(keypair);\n\n  return {\n    keyStore: encrypted,\n    publickey,\n    address,\n    keypair,\n    privateStr,\n  };\n};\n\nexport const getMnemonic = async (desiredLength: number, mnemonicLang = 'EN'): Promise<string[]> => {\n  const ledger = await getLedger();\n  const result = String(ledger.generate_mnemonic_custom(desiredLength, mnemonicLang)).split(' ');\n  return result;\n};\n","export * from './network';\n","import axios from 'axios';\nimport JSONbig from 'json-bigint';\n\nimport Sdk from '../../Sdk';\nimport * as Types from './types';\n\nconst getQueryRoute = (): string => {\n  const { hostUrl, queryPort } = Sdk.environment;\n\n  const url = `${hostUrl}:${queryPort}`;\n\n  return url;\n};\n\nconst getSubmitRoute = (): string => {\n  const { hostUrl, submissionPort } = Sdk.environment;\n\n  const url = `${hostUrl}:${submissionPort}`;\n\n  return url;\n};\n\nconst getLedgerRoute = (): string => {\n  const { hostUrl, ledgerPort } = Sdk.environment;\n\n  const url = `${hostUrl}:${ledgerPort}`;\n\n  return url;\n};\n\nconst getExplorerApiRoute = (): string => {\n  const { hostUrl, explorerApiPort } = Sdk.environment;\n\n  const url = `${hostUrl}:${explorerApiPort}`;\n\n  return url;\n};\n\nexport const apiPost = async (\n  url: string,\n  data?: Types.ParsedTransactionData,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.NetworkAxiosDataResult> => {\n  let axiosResponse;\n\n  try {\n    axiosResponse = await axios.post(url, data, config);\n  } catch (err) {\n    return { error: { message: err.message } };\n  }\n\n  try {\n    const myResponse = JSONbig({ useNativeBigInt: true }).parse(axiosResponse.data);\n    return { response: myResponse };\n  } catch (_) {\n    return { response: axiosResponse.data };\n  }\n};\n\nexport const apiGet = async (\n  url: string,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.NetworkAxiosDataResult> => {\n  let axiosResponse;\n\n  try {\n    axiosResponse = await axios.get(url, config);\n  } catch (err) {\n    return { error: { message: err.message } };\n  }\n\n  try {\n    const myResponse = JSONbig({ useNativeBigInt: true }).parse(axiosResponse.data);\n    return { response: myResponse };\n  } catch (_) {\n    return { response: axiosResponse.data };\n  }\n};\n\nexport const getOwnedSids = async (\n  address: string,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.OwnedSidsDataResult> => {\n  const url = `${getQueryRoute()}/get_owned_utxos/${address}`;\n\n  const dataResult = await apiGet(url, config);\n\n  return dataResult;\n};\n\nexport const getUtxo = async (\n  utxoSid: number,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.UtxoDataResult> => {\n  const url = `${getLedgerRoute()}/utxo_sid/${utxoSid}`;\n\n  const dataResult = await apiGet(url, config);\n\n  return dataResult;\n};\n\nexport const getOwnerMemo = async (\n  utxoSid: number,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.OwnerMemoDataResult> => {\n  const url = `${getQueryRoute()}/get_owner_memo/${utxoSid}`;\n\n  const dataResult = await apiGet(url, config);\n\n  return dataResult;\n};\n\nexport const getStateCommitment = async (\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.StateCommitmentDataResult> => {\n  const url = `${getLedgerRoute()}/global_state`;\n\n  const dataResult = await apiGet(url, config);\n\n  return dataResult;\n};\n\nexport const getSubmitTransactionData = <T extends Types.TransactionData>(data?: T): Types.DataResult => {\n  let txData;\n\n  if (!data) {\n    return { response: txData };\n  }\n\n  try {\n    txData = JSONbig.parse(data);\n    return { response: txData };\n  } catch (err) {\n    return { error: { message: `Can't submit transaction. Can't parse transaction data. ${err.message}` } };\n  }\n};\n\nexport const submitTransaction = async <T extends Types.TransactionData>(\n  data?: T,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.SubmitTransactionDataResult> => {\n  const url = `${getSubmitRoute()}/submit_transaction`;\n\n  const { response: txData, error } = getSubmitTransactionData(data);\n\n  if (error) {\n    return { error };\n  }\n\n  const dataResult = await apiPost(url, txData, config);\n\n  return dataResult;\n};\n\nexport const getAssetToken = async (\n  assetCode: string,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.AssetTokenDataResult> => {\n  const url = `${getLedgerRoute()}/asset_token/${assetCode}`;\n\n  const dataResult = await apiGet(url, config);\n\n  return dataResult;\n};\n\nexport const getTransactionStatus = async (\n  handle: string,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.TransactionStatusDataResult> => {\n  const url = `${getSubmitRoute()}/txn_status/${handle}`;\n\n  const dataResult = await apiGet(url, config);\n\n  return dataResult;\n};\n\nexport const getBlock = async (\n  height: number,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.BlockDetailsDataResult> => {\n  const url = `${getExplorerApiRoute()}/block`;\n\n  const dataResult = await apiGet(url, { ...config, params: { height } });\n\n  return dataResult;\n};\n\nexport const getHashSwap = async (\n  hash: string,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.HashSwapDataResult> => {\n  const url = `${getExplorerApiRoute()}/tx_search`;\n  const dataResult = await apiGet(url, { ...config, params: { query: `\"tx.prehash='${hash}'\"` } });\n\n  return dataResult;\n};\n\nexport const getTxList = async (\n  address: string,\n  type: 'to' | 'from',\n  page = 1,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.TxListDataResult> => {\n  const url = `${getExplorerApiRoute()}/tx_search`;\n\n  const query = type === 'from' ? `\"addr.from.${address}='y'\"` : `\"addr.to.${address}='y'\"`;\n\n  const params = {\n    query,\n    page,\n    per_page: 10,\n    order_by: '\"desc\"',\n  };\n\n  const dataResult = await apiGet(url, { ...config, params });\n\n  return dataResult;\n};\n\nexport const getTransactionDetails = async (\n  hash: string,\n  config?: Types.NetworkAxiosConfig,\n): Promise<Types.TxDetailsDataResult> => {\n  const params = {\n    hash: `0x${hash}`,\n  };\n  const url = `${getExplorerApiRoute()}/tx`;\n\n  const dataResult = await apiGet(url, { ...config, params });\n\n  return dataResult;\n};\n","export * from './sdkAsset';\n","// import JSONbig from 'json-bigint';\n\nimport { DEFAULT_ASSET_RULES } from '../../config/asset';\nimport { toWei } from '../../services/bigNumber';\nimport * as Fee from '../../services/fee';\nimport { getLedger } from '../../services/ledger/ledgerWrapper';\nimport { AssetRules as LedgerAssetRules, TransactionBuilder, XfrKeyPair } from '../../services/ledger/types';\nimport { getAddressByPublicKey, WalletKeypar } from '../keypair';\nimport * as Network from '../network';\n\nexport interface AssetRules {\n  transferable: boolean;\n  updatable: boolean;\n  decimals: number;\n  traceable?: boolean;\n  maxNumbers?: number;\n}\n\nexport interface AssetBlindRules {\n  isAmountBlind?: boolean;\n  isTypeBlind?: boolean;\n}\n\nexport const getFraAssetCode = async (): Promise<string> => {\n  const ledger = await getLedger();\n  const assetCode = ledger.fra_get_asset_code();\n  return assetCode;\n};\n\nexport const getAssetCode = async (val: number[]): Promise<string> => {\n  const ledger = await getLedger();\n\n  const decryptedAsetType = ledger.asset_type_from_jsvalue(val);\n  return decryptedAsetType;\n};\n\nexport const getRandomAssetCode = async (): Promise<string> => {\n  const ledger = await getLedger();\n  const assetCode = ledger.random_asset_type();\n  return assetCode;\n};\n\nconst getDefaultAssetRules = async (): Promise<LedgerAssetRules> => {\n  const ledger = await getLedger();\n\n  const defaultTransferable = DEFAULT_ASSET_RULES.transferable;\n  const defaultUpdatable = DEFAULT_ASSET_RULES.updatable;\n  const defaultDecimals = DEFAULT_ASSET_RULES.decimals;\n\n  const assetRules = ledger.AssetRules.new()\n    .set_transferable(defaultTransferable)\n    .set_updatable(defaultUpdatable)\n    .set_decimals(defaultDecimals);\n\n  return assetRules;\n};\n\nconst getAssetRules = async (newAssetRules?: AssetRules): Promise<LedgerAssetRules> => {\n  if (!newAssetRules) {\n    const defaultAssetRules = await getDefaultAssetRules();\n\n    return defaultAssetRules;\n  }\n\n  const ledger = await getLedger();\n\n  const { transferable, updatable, decimals, traceable, maxNumbers } = newAssetRules;\n\n  let assetRules = ledger.AssetRules.new()\n    .set_transferable(transferable)\n    .set_updatable(updatable)\n    .set_decimals(decimals);\n\n  if (maxNumbers && BigInt(maxNumbers) > BigInt(0)) {\n    assetRules = assetRules.set_max_units(BigInt(maxNumbers));\n  }\n\n  if (traceable) {\n    const trackingKey = ledger.AssetTracerKeyPair.new();\n    const tracingPolicy = ledger.TracingPolicy.new_with_tracing(trackingKey);\n\n    assetRules = assetRules.add_tracing_policy(tracingPolicy);\n  }\n\n  return assetRules;\n};\n\nconst getDefineAssetTransactionBuilder = async (\n  walletKeypair: XfrKeyPair,\n  assetName: string,\n  assetRules: LedgerAssetRules,\n  assetMemo = 'memo',\n): Promise<TransactionBuilder> => {\n  const ledger = await getLedger();\n\n  const { response: stateCommitment, error } = await Network.getStateCommitment();\n\n  if (error) {\n    throw new Error(error.message);\n  }\n\n  if (!stateCommitment) {\n    throw new Error('could not receive response from state commitement call');\n  }\n\n  const [_, height] = stateCommitment;\n  const blockCount = BigInt(height);\n\n  const definitionTransaction = ledger.TransactionBuilder.new(BigInt(blockCount)).add_operation_create_asset(\n    walletKeypair,\n    assetMemo,\n    assetName,\n    assetRules,\n  );\n\n  return definitionTransaction;\n};\n\nconst getIssueAssetTransactionBuilder = async (\n  walletKeypair: XfrKeyPair,\n  assetName: string,\n  amountToIssue: number,\n  assetBlindRules: AssetBlindRules,\n  assetDecimals: number,\n): Promise<TransactionBuilder> => {\n  const ledger = await getLedger();\n\n  const { response: stateCommitment, error } = await Network.getStateCommitment();\n\n  if (error) {\n    throw new Error(error.message);\n  }\n\n  if (!stateCommitment) {\n    throw new Error('could not receive response from state commitement call');\n  }\n\n  const [_, height] = stateCommitment;\n  const blockCount = BigInt(height);\n\n  const utxoNumbers = BigInt(toWei(amountToIssue, assetDecimals).toString());\n\n  const blindIsAmount = assetBlindRules?.isAmountBlind;\n\n  const zeiParams = ledger.PublicParams.new();\n\n  const definitionTransaction = ledger.TransactionBuilder.new(BigInt(blockCount)).add_basic_issue_asset(\n    walletKeypair,\n    assetName,\n    BigInt(blockCount),\n    utxoNumbers,\n    !!blindIsAmount,\n    zeiParams,\n  );\n\n  return definitionTransaction;\n};\n\nexport const defineAsset = async (\n  walletInfo: WalletKeypar,\n  assetName: string,\n  assetMemo?: string,\n  newAssetRules?: AssetRules,\n): Promise<string> => {\n  const assetRules = await getAssetRules(newAssetRules);\n\n  const transferOperationBuilder = await Fee.buildTransferOperationWithFee(walletInfo);\n\n  let receivedTransferOperation;\n\n  try {\n    receivedTransferOperation = transferOperationBuilder.create().sign(walletInfo.keypair).transaction();\n  } catch (error) {\n    throw new Error(`Could not create transfer operation, Error: \"${error.messaage}\"`);\n  }\n\n  let transactionBuilder;\n\n  try {\n    transactionBuilder = await getDefineAssetTransactionBuilder(\n      walletInfo.keypair,\n      assetName,\n      assetRules,\n      assetMemo,\n    );\n  } catch (error) {\n    throw new Error(`Could not get \"defineTransactionBuilder\", Error: \"${error.messaage}\"`);\n  }\n\n  try {\n    transactionBuilder = transactionBuilder.add_transfer_operation(receivedTransferOperation);\n  } catch (error) {\n    throw new Error(`Could not add transfer operation, Error: \"${error.messaage}\"`);\n  }\n\n  const submitData = transactionBuilder.transaction();\n\n  let result;\n\n  try {\n    result = await Network.submitTransaction(submitData);\n  } catch (error) {\n    throw new Error(`Error Could not define asset: \"${error.message}\"`);\n  }\n\n  const { response: handle, error: submitError } = result;\n\n  if (submitError) {\n    throw new Error(`Could not submit define asset transaction: \"${submitError.message}\"`);\n  }\n\n  if (!handle) {\n    throw new Error(`Could not define asset - submit handle is missing`);\n  }\n\n  return handle;\n};\n\nexport const issueAsset = async (\n  walletInfo: WalletKeypar,\n  assetName: string,\n  amountToIssue: number,\n  assetBlindRules: AssetBlindRules,\n  assetDecimals: number,\n): Promise<string> => {\n  const transferOperationBuilder = await Fee.buildTransferOperationWithFee(walletInfo);\n\n  let receivedTransferOperation;\n\n  try {\n    receivedTransferOperation = transferOperationBuilder.create().sign(walletInfo.keypair).transaction();\n  } catch (error) {\n    throw new Error(`Could not create transfer operation, Error: \"${error.messaage}\"`);\n  }\n\n  let transactionBuilder;\n\n  try {\n    transactionBuilder = await getIssueAssetTransactionBuilder(\n      walletInfo.keypair,\n      assetName,\n      amountToIssue,\n      assetBlindRules,\n      assetDecimals,\n    );\n  } catch (error) {\n    throw new Error(`Could not get \"issueAssetTransactionBuilder\", Error: \"${error.messaage}\"`);\n  }\n\n  try {\n    transactionBuilder = transactionBuilder.add_transfer_operation(receivedTransferOperation);\n  } catch (error) {\n    throw new Error(`Could not add transfer operation, Error: \"${error.messaage}\"`);\n  }\n\n  const submitData = transactionBuilder.transaction();\n\n  let result;\n\n  try {\n    result = await Network.submitTransaction(submitData);\n  } catch (error) {\n    throw new Error(`Could not issue asset: \"${error.message}\"`);\n  }\n\n  const { response: handle, error: submitError } = result;\n\n  if (submitError) {\n    throw new Error(`Could not submit issue asset transaction: \"${submitError.message}\"`);\n  }\n\n  if (!handle) {\n    throw new Error(`Could not issue asset - submit handle is missing`);\n  }\n\n  return handle;\n};\n\nexport const getAssetDetails = async (assetCode: string): Promise<FindoraWallet.IAsset> => {\n  let result;\n\n  try {\n    result = await Network.getAssetToken(assetCode);\n  } catch (error) {\n    throw new Error(`Error Could not define asset: \"${error.message}\"`);\n  }\n\n  const { response: assetResult, error: submitError } = result;\n\n  if (submitError) {\n    throw new Error(`Could not submit define asset transaction: \"${submitError.message}\"`);\n  }\n\n  if (!assetResult) {\n    throw new Error(`Could not issue asset - submit handle is missing`);\n  }\n\n  const asset = assetResult.properties;\n  const issuerAddress = await getAddressByPublicKey(asset.issuer.key);\n\n  const assetDetails = {\n    code: assetCode,\n    issuer: asset.issuer.key,\n    address: issuerAddress,\n    memo: asset.memo,\n    assetRules: { ...DEFAULT_ASSET_RULES, ...asset?.asset_rules },\n    numbers: BigInt(0),\n    name: '',\n  };\n\n  return assetDetails;\n};\n","import _get from 'lodash/get';\nimport * as Network from '../network';\n\nimport * as Types from './types';\nimport { TxListDataResult, TxInfo } from '../network/types';\n\nexport const getTxListFromResponse = (result: TxListDataResult): null | TxInfo[] =>\n  _get(result, 'response.result.txs', null);\n\nexport const getTxOperationsList = (parsedTx: Types.ParsedTx): Types.TxOperation[] =>\n  _get(parsedTx, 'body.operations', []);\n\nexport const getBlockTime = async (height: number) => {\n  const blockDetailsResult = await Network.getBlock(height);\n\n  const { response } = blockDetailsResult;\n\n  const block = response?.result;\n  const blockTime = block?.block.header.time;\n  return blockTime;\n};\n","export * from './transaction';\n","import * as Keypair from '../../keypair';\nimport { DEFAULT_ASSET_RULES } from '../../../config/asset';\n\nimport { DefineAssetOperation, TxOperation } from '../types';\n\nexport interface ProcessedDefineAsset {\n  defineAsset: DefineAssetOperation;\n  from: string[];\n  to: string[];\n  type: string;\n  assetRules: FindoraWallet.IAssetRules;\n}\n\nexport const processDefineAsset = async (operationItem: TxOperation): Promise<ProcessedDefineAsset> => {\n  const operation = operationItem.DefineAsset!;\n\n  const asset = operation.body.asset;\n\n  const from = await Keypair.getAddressByPublicKey(asset.issuer.key);\n\n  const data = {\n    defineAsset: operation,\n    from: [from],\n    assetRules: { ...DEFAULT_ASSET_RULES, ...asset.asset_rules },\n    to: [from],\n    type: 'defineAsset',\n    originalOperation: operationItem,\n  };\n\n  return data;\n};\n","import _get from 'lodash/get';\n\nimport * as Types from '../types';\n\nimport { processUnsupported, Unsupported } from './unsupported';\nimport { processDefineAsset, ProcessedDefineAsset } from './defineAsset';\nimport { processTransferAsset, ProcessedTransferAsset } from './transferAsset';\nimport { processIssueAsset, ProcessedIssueAsset } from './issueAsset';\n\nexport type ProcessedTx = ProcessedDefineAsset | ProcessedTransferAsset | ProcessedIssueAsset | Unsupported;\n\nexport type ProcessorType = (op: Types.TxOperation) => Promise<ProcessedTx>;\n\nexport interface TxOperationProcessors {\n  [key: string]: ProcessorType;\n}\n\nexport const getOperationProcessor = (\n  operationItem: Types.TxOperation,\n  processors: TxOperationProcessors,\n): ProcessorType => {\n  for (let el of Object.keys(processors)) {\n    if (el in operationItem) {\n      return _get(processors, el, processors.Unsupported);\n    }\n  }\n\n  return processors.Unsupported;\n};\n\nexport const processorsMap: TxOperationProcessors = {\n  DefineAsset: processDefineAsset,\n  TransferAsset: processTransferAsset,\n  IssueAsset: processIssueAsset,\n  Unsupported: processUnsupported,\n};\n","import * as Keypair from '../../keypair';\nimport * as Asset from '../../sdkAsset';\nimport { IssueAssetOperation, TxOperation } from '../types';\n\nexport interface ProcessedIssueAsset {\n  issueAsset: IssueAssetOperation;\n  from: string[];\n  to: string[];\n  type: string;\n}\n\nexport const processIssueAsset = async (operationItem: TxOperation): Promise<ProcessedIssueAsset> => {\n  const operation = operationItem.IssueAsset!;\n\n  const asset = operation.body;\n\n  const code = await Asset.getAssetCode(asset.code.val);\n  const from = await Keypair.getAddressByPublicKey(operation.pubkey.key);\n\n  const data = {\n    issueAsset: { ...operation, code },\n    from: [from],\n    to: [from],\n    type: 'issueAsset',\n    originalOperation: operationItem,\n  };\n\n  return data;\n};\n","import * as Keypair from '../../keypair';\nimport { TransferAssetOperation, TxOperation } from '../types';\n\nexport interface ProcessedTransferAsset {\n  transferAsset: TransferAssetOperation;\n  from: string[];\n  to: string[];\n  type: string;\n}\n\nexport const processTransferAsset = async (operationItem: TxOperation): Promise<ProcessedTransferAsset> => {\n  const operation = operationItem.TransferAsset!;\n\n  const transfer = operation.body.transfer;\n\n  const fromPromise = transfer.inputs.map(async item => Keypair.getAddressByPublicKey(item.public_key));\n  const toPromise = transfer.outputs.map(async item => Keypair.getAddressByPublicKey(item.public_key));\n\n  const from = await Promise.all(fromPromise);\n  const to = await Promise.all(toPromise);\n\n  const data = {\n    transferAsset: operation,\n    from,\n    to,\n    type: 'transferAsset',\n    originalOperation: operationItem,\n  };\n\n  return data;\n};\n","import { TxOperation } from '../types';\n\nexport interface Unsupported {\n  result: boolean;\n  type: string;\n  originalOperation: TxOperation;\n}\n\nexport const processUnsupported = async (op: TxOperation): Promise<Unsupported> => {\n  const data = {\n    result: false,\n    type: 'unsupported',\n    originalOperation: op,\n  };\n\n  return data;\n};\n","import _get from 'lodash/get';\nimport { TxInfo } from '../network/types';\nimport * as Types from './types';\nimport { processorsMap, ProcessedTx, getOperationProcessor } from './operationProcessors';\nimport * as helpers from './helpers';\nimport atob from 'atob';\n\nconst processTxOperationItem = async (operationItem: Types.TxOperation): Promise<ProcessedTx> => {\n  const dataProcessor = getOperationProcessor(operationItem, processorsMap);\n\n  const processedData = await dataProcessor(operationItem);\n\n  return processedData;\n};\n\nconst processTxOperationList = async (operationsList: Types.TxOperation[]) => {\n  return Promise.all(operationsList.map(operationItem => processTxOperationItem(operationItem)));\n};\n\nexport const processTxInfoItem = async (txItem: TxInfo): Promise<Types.ProcessedTxInfo> => {\n  let parsedTx: Types.ParsedTx;\n\n  try {\n    parsedTx = JSON.parse(atob(txItem.tx));\n  } catch (err) {\n    const e: Error = err as Error;\n    throw new Error(`cant parse the tx info from the tx item. Details: \"${e.message}\"`);\n  }\n\n  if (!parsedTx) {\n    throw new Error('parsed tx is empty');\n  }\n\n  const time = await helpers.getBlockTime(txItem.height);\n  const hash = txItem.hash;\n  const code = txItem.tx_result.code;\n\n  const operationsList = helpers.getTxOperationsList(parsedTx);\n\n  const processedOperationList = await processTxOperationList(operationsList);\n\n  const processedUpdatedTxList = processedOperationList.map(txOperation => ({ ...txItem, ...txOperation }));\n\n  return {\n    code,\n    data: processedUpdatedTxList,\n    hash,\n    time,\n  };\n};\n\nexport const processeTxInfoList = async (txList: TxInfo[]): Promise<Types.ProcessedTxInfo[]> => {\n  return Promise.all(txList.map(txItem => processTxInfoItem(txItem)));\n};\n","import { toWei } from '../../services/bigNumber';\nimport * as Fee from '../../services/fee';\nimport { getLedger } from '../../services/ledger/ledgerWrapper';\nimport { TransactionBuilder } from '../../services/ledger/types';\nimport { getAddressByPublicKey, getAddressPublicAndKey, LightWalletKeypair, WalletKeypar } from '../keypair';\nimport * as Network from '../network';\nimport { ProcessedTxListResponseResult } from './types';\nimport * as AssetApi from '../sdkAsset';\nimport * as helpers from './helpers';\nimport { processeTxInfoList } from './processor';\n\nexport const getTransactionBuilder = async (): Promise<TransactionBuilder> => {\n  const ledger = await getLedger();\n\n  const { response: stateCommitment, error } = await Network.getStateCommitment();\n\n  if (error) {\n    throw new Error(error.message);\n  }\n\n  if (!stateCommitment) {\n    throw new Error('could not receive response from state commitement call');\n  }\n\n  const [_, height] = stateCommitment;\n  const blockCount = BigInt(height);\n\n  const transactionBuilder = ledger.TransactionBuilder.new(BigInt(blockCount));\n\n  return transactionBuilder;\n};\n\nexport interface TransferReciever {\n  reciverWalletInfo: WalletKeypar | LightWalletKeypair;\n  amount: number;\n}\n\nexport const sendToMany = async (\n  walletInfo: WalletKeypar,\n  recieversList: TransferReciever[],\n  assetCode: string,\n  decimals: number,\n  assetBlindRules?: AssetApi.AssetBlindRules,\n): Promise<string> => {\n  const ledger = await getLedger();\n\n  const recieversInfo: Fee.ReciverInfo[] = [];\n\n  recieversList.forEach(reciver => {\n    const { reciverWalletInfo: toWalletInfo, amount: numbers } = reciver;\n    const toPublickey = ledger.public_key_from_base64(toWalletInfo.publickey);\n    const utxoNumbers = BigInt(toWei(numbers, decimals).toString());\n\n    const recieverInfoItem = {\n      toPublickey,\n      utxoNumbers,\n    };\n\n    recieversInfo.push(recieverInfoItem);\n  });\n\n  const transferOperationBuilder = await Fee.buildTransferOperation(\n    walletInfo,\n    recieversInfo,\n    assetCode,\n    assetBlindRules,\n  );\n\n  let receivedTransferOperation;\n\n  try {\n    receivedTransferOperation = transferOperationBuilder.create().sign(walletInfo.keypair).transaction();\n  } catch (error) {\n    const e: Error = error as Error;\n\n    throw new Error(`Could not create transfer operation, Error: \"${e.message}\"`);\n  }\n\n  const transferOperationBuilderFee = await Fee.buildTransferOperationWithFee(walletInfo);\n\n  let receivedTransferOperationFee;\n\n  try {\n    receivedTransferOperationFee = transferOperationBuilderFee\n      .create()\n      .sign(walletInfo.keypair)\n      .transaction();\n  } catch (error) {\n    const e: Error = error as Error;\n\n    throw new Error(`Could not create transfer operation, Error: \"${e.message}\"`);\n  }\n\n  let transactionBuilder;\n\n  try {\n    transactionBuilder = await getTransactionBuilder();\n  } catch (error) {\n    const e: Error = error as Error;\n\n    throw new Error(`Could not get \"defineTransactionBuilder\", Error: \"${e.message}\"`);\n  }\n\n  try {\n    transactionBuilder = transactionBuilder.add_transfer_operation(receivedTransferOperation);\n  } catch (err) {\n    const e: Error = err as Error;\n\n    throw new Error(`Could not add transfer operation, Error: \"${e.message}\"`);\n  }\n\n  try {\n    transactionBuilder = transactionBuilder.add_transfer_operation(receivedTransferOperationFee);\n  } catch (err) {\n    const e: Error = err as Error;\n\n    throw new Error(`Could not add transfer operation, Error: \"${e.message}\"`);\n  }\n\n  const submitData = transactionBuilder.transaction();\n\n  let result;\n\n  try {\n    result = await Network.submitTransaction(submitData);\n  } catch (err) {\n    const e: Error = err as Error;\n\n    throw new Error(`Error Could not submit transaction: \"${e.message}\"`);\n  }\n\n  const { response: handle, error: submitError } = result;\n\n  if (submitError) {\n    throw new Error(`Could not submit issue asset transaction: \"${submitError.message}\"`);\n  }\n\n  if (!handle) {\n    throw new Error(`Could not issue asset - submit handle is missing`);\n  }\n\n  return handle;\n};\n\nexport const sendToAddress = async (\n  walletInfo: WalletKeypar,\n  address: string,\n  numbers: number,\n  assetCode: string,\n  decimals: number,\n  assetBlindRules?: AssetApi.AssetBlindRules,\n): Promise<string> => {\n  const toWalletInfoLight = await getAddressPublicAndKey(address);\n\n  const recieversInfo = [{ reciverWalletInfo: toWalletInfoLight, amount: numbers }];\n\n  return sendToMany(walletInfo, recieversInfo, assetCode, decimals, assetBlindRules);\n};\n\nexport const sendToPublicKey = async (\n  walletInfo: WalletKeypar,\n  publicKey: string,\n  numbers: number,\n  assetCode: string,\n  decimals: number,\n  assetBlindRules?: AssetApi.AssetBlindRules,\n): Promise<string> => {\n  const address = await getAddressByPublicKey(publicKey);\n\n  return sendToAddress(walletInfo, address, numbers, assetCode, decimals, assetBlindRules);\n};\n\nexport const getTxList = async (\n  address: string,\n  type: 'to' | 'from',\n  page = 1,\n): Promise<ProcessedTxListResponseResult> => {\n  const dataResult = await Network.getTxList(address, type, page);\n\n  if (!dataResult.response) {\n    throw new Error('could not fetch a list of transactions. No response from the server.');\n  }\n\n  const txList = helpers.getTxListFromResponse(dataResult);\n\n  if (!txList) {\n    throw new Error('could not get a list of transactions from the server response.');\n  }\n\n  const processedTxList = await processeTxInfoList(txList);\n\n  return {\n    total_count: dataResult.response.result.total_count,\n    txs: processedTxList,\n  };\n};\n","/* eslint-disable @typescript-eslint/naming-convention */\nconst DEFAULT_DECIMALS = 6;\nconst DEFAULT_TRANSFERABLE = true;\nconst DEFAULT_UPDATABLE = true;\n\nexport const DEFAULT_ASSET_RULES = {\n  max_units: null,\n  transfer_multisig_rules: null,\n  transferable: DEFAULT_TRANSFERABLE,\n  updatable: DEFAULT_UPDATABLE,\n  tracing_policies: [],\n  decimals: DEFAULT_DECIMALS,\n};\n","/* eslint-disable @typescript-eslint/naming-convention */\nexport const CACHE_ENTRIES = {\n  UTXO_DATA: 'utxoDataCache',\n};\n","export { Random } from './random';\nexport { getWebLedger, getNodeLedger } from './services/ledger/ledgerWrapper';\nexport * as Api from './api';\n\nexport * as Sdk from './Sdk';\n","export class Random {\n  public static getBytes(count: number): Uint8Array {\n    const out = new Uint8Array(count);\n\n    return out;\n  }\n}\n","import BigNumber from 'bignumber.js';\n\nexport type BigNumberValue = BigNumber.Value;\n\nexport const toWei = (value: BigNumberValue, precision = 6): BigNumber => {\n  return new BigNumber(value).times(10 ** precision);\n};\n\nexport const fromWei = (value: BigNumberValue, precision = 6): BigNumber => {\n  return new BigNumber(value).div(10 ** precision);\n};\n\nexport const calDecimalPrecision = (val: BigNumberValue, num: number): string => {\n  const x = new BigNumber(val);\n  const y = new BigNumber(10 ** num);\n  const newAmount = x.dividedBy(y).toFormat();\n  return newAmount;\n};\n\nexport const create = (value: BigNumberValue): BigNumber => new BigNumber(value);\n\nexport const totalSum = (amounts: BigNumberValue[]): BigNumber => {\n  let amount = new BigNumber(0);\n\n  amounts.forEach(currentAmount => {\n    amount = new BigNumber(currentAmount).plus(amount);\n  });\n\n  return amount;\n};\n\nexport const plus = (currentValue: BigNumberValue, valueToAdd: BigNumberValue): BigNumberValue =>\n  new BigNumber(currentValue).plus(valueToAdd);\n","import { CacheFactory, CacheItem, CacheProvider } from './types';\n\nconst read = async <T extends CacheProvider>(entryName: string, provider: T): Promise<CacheItem> =>\n  provider.read(entryName);\n\nconst write = async <T extends CacheProvider>(\n  entryName: string,\n  data: CacheItem,\n  provider: T,\n): Promise<boolean> => provider.write(entryName, data);\n\nconst prune = async <T extends CacheProvider>(provider: T): Promise<boolean> =>\n  provider?.prune ? provider.prune() : true;\n\nconst factory: CacheFactory = {\n  read,\n  write,\n  prune,\n};\n\nexport default factory;\n","import fs from 'fs';\nimport JSONbig from 'json-bigint';\n\nimport { readFile, writeFile } from '../../utils';\nimport { CacheItem, CacheProvider } from '../types';\n\nconst readCache = async (filePath: string): Promise<CacheItem> => {\n  let fileContent;\n  let cacheData = {};\n\n  console.log(`Reading file cache from \"${filePath}\"`);\n\n  try {\n    if (!fs.existsSync(filePath)) {\n      return cacheData;\n    }\n  } catch (err) {\n    console.log(`File doesnt exist at \"${filePath}\", so returning default cache data`, err);\n    return cacheData;\n  }\n\n  try {\n    fileContent = await readFile(filePath);\n  } catch (error) {\n    throw new Error(`could not read file \"${filePath}\". Error. ${error.message} `);\n  }\n\n  try {\n    cacheData = JSONbig({ useNativeBigInt: true }).parse(fileContent);\n  } catch (error) {\n    throw new Error(`could not read parse cache data from  \"${fileContent}\". Error. ${error.message} `);\n  }\n\n  return cacheData;\n};\n\nconst writeCache = async (filePath: string, data: CacheItem): Promise<boolean> => {\n  let result;\n  let cacheData;\n\n  console.log(`Writing file cache to \"${filePath}\"`);\n  try {\n    cacheData = JSONbig({ useNativeBigInt: true }).stringify(data);\n  } catch (err) {\n    throw new Error(`can not stringify data for cache, \"${err.message}\"`);\n  }\n\n  try {\n    result = await writeFile(filePath, cacheData);\n  } catch (error) {\n    throw new Error(`can not write cache for \"${filePath}\", \"${error.message}\"`);\n  }\n\n  return result;\n};\n\nexport const fileCacheProvider: CacheProvider = {\n  read: readCache,\n  write: writeCache,\n};\n","export { fileCacheProvider as FileCacheProvider } from './fileCacheProvider';\nexport { memoryCacheProvider as MemoryCacheProvider } from './memoryCacheProvider';\n","import { CacheItem, CacheProvider } from '../types';\n\nclass MemoryCache {\n  public static data: CacheItem = {};\n}\n\nconst readCache = async (fileName: string): Promise<CacheItem> => {\n  let cacheData = {};\n\n  cacheData = MemoryCache.data[fileName];\n\n  return cacheData;\n};\n\nconst writeCache = async (fileName: string, data: CacheItem): Promise<boolean> => {\n  MemoryCache.data[fileName] = { ...data };\n\n  return true;\n};\n\nexport const memoryCacheProvider: CacheProvider = {\n  read: readCache,\n  write: writeCache,\n};\n","import { WalletKeypar } from '../api/keypair';\nimport * as Network from '../api/network';\nimport { getLedger } from './ledger/ledgerWrapper';\nimport { TransferOperationBuilder, XfrPublicKey } from './ledger/types';\nimport { addUtxo, addUtxoInputs, getSendUtxo, UtxoInputsInfo } from './utxoHelper';\n\nexport interface ReciverInfo {\n  utxoNumbers: BigInt;\n  toPublickey: XfrPublicKey;\n}\n/**\n * @todo - rename the whole file from Fee to smth like TransferHelper, which better represents its purpose\n */\nexport const getTransferOperation = async (\n  walletInfo: WalletKeypar,\n  utxoInputs: UtxoInputsInfo,\n  recieversInfo: ReciverInfo[],\n  totalUtxoNumbers: BigInt,\n  assetCode: string,\n  assetBlindRules?: { isAmountBlind?: boolean; isTypeBlind?: boolean },\n): Promise<TransferOperationBuilder> => {\n  const ledger = await getLedger();\n\n  const blindIsAmount = assetBlindRules?.isAmountBlind;\n  const blindIsType = assetBlindRules?.isTypeBlind;\n\n  let transferOp = ledger.TransferOperationBuilder.new();\n\n  const { inputParametersList, inputAmount } = utxoInputs;\n\n  inputParametersList.forEach(inputParameters => {\n    const { txoRef, assetRecord, amount, memoData } = inputParameters;\n\n    const ownerMemo = memoData ? ledger.OwnerMemo.from_json(memoData) : null;\n\n    const newOwnerMemo = ownerMemo?.clone();\n\n    transferOp = transferOp.add_input_no_tracing(\n      txoRef,\n      assetRecord,\n      newOwnerMemo,\n      walletInfo.keypair,\n      amount,\n    );\n  });\n\n  recieversInfo.forEach(reciverInfo => {\n    const { utxoNumbers, toPublickey } = reciverInfo;\n\n    transferOp = transferOp.add_output_no_tracing(\n      utxoNumbers,\n      toPublickey,\n      assetCode,\n      !!blindIsAmount,\n      !!blindIsType,\n    );\n  });\n\n  if (inputAmount > totalUtxoNumbers) {\n    const numberToSubmit = BigInt(Number(inputAmount) - Number(totalUtxoNumbers));\n\n    transferOp = transferOp.add_output_no_tracing(\n      numberToSubmit,\n      ledger.get_pk_from_keypair(walletInfo.keypair),\n      assetCode,\n      !!blindIsAmount,\n      !!blindIsType,\n    );\n  }\n\n  return transferOp;\n};\n\nexport const buildTransferOperationWithFee = async (\n  walletInfo: WalletKeypar,\n  assetBlindRules?: { isAmountBlind?: boolean; isTypeBlind?: boolean },\n): Promise<TransferOperationBuilder> => {\n  const ledger = await getLedger();\n\n  const sidsResult = await Network.getOwnedSids(walletInfo.publickey);\n\n  const { response: sids } = sidsResult;\n\n  if (!sids) {\n    throw new Error('no sids were fetched!');\n  }\n\n  const utxoDataList = await addUtxo(walletInfo, sids);\n\n  const minimalFee = ledger.fra_get_minimal_fee();\n\n  const fraAssetCode = ledger.fra_get_asset_code();\n\n  const sendUtxoList = getSendUtxo(fraAssetCode, minimalFee, utxoDataList);\n\n  const utxoInputsInfo = await addUtxoInputs(sendUtxoList);\n\n  const toPublickey = ledger.fra_get_dest_pubkey();\n\n  const recieversInfo = [\n    {\n      utxoNumbers: minimalFee,\n      toPublickey,\n    },\n  ];\n\n  const trasferOperation = await getTransferOperation(\n    walletInfo,\n    utxoInputsInfo,\n    recieversInfo,\n    minimalFee,\n    fraAssetCode,\n    assetBlindRules,\n  );\n\n  return trasferOperation;\n};\n\nexport const buildTransferOperation = async (\n  walletInfo: WalletKeypar,\n  recieversInfo: ReciverInfo[],\n  assetCode: string,\n  assetBlindRules?: { isAmountBlind?: boolean; isTypeBlind?: boolean },\n): Promise<TransferOperationBuilder> => {\n  const sidsResult = await Network.getOwnedSids(walletInfo.publickey);\n\n  const { response: sids } = sidsResult;\n\n  if (!sids) {\n    throw new Error('no sids were fetched!');\n  }\n\n  const totalUtxoNumbers = recieversInfo.reduce((acc, receiver) => {\n    return BigInt(Number(receiver.utxoNumbers) + Number(acc));\n  }, BigInt(0));\n\n  const utxoDataList = await addUtxo(walletInfo, sids);\n\n  const sendUtxoList = getSendUtxo(assetCode, totalUtxoNumbers, utxoDataList);\n\n  const utxoInputsInfo = await addUtxoInputs(sendUtxoList);\n\n  const trasferOperation = await getTransferOperation(\n    walletInfo,\n    utxoInputsInfo,\n    recieversInfo,\n    totalUtxoNumbers,\n    assetCode,\n    assetBlindRules,\n  );\n\n  return trasferOperation;\n};\n","import nodeLedger, { LedgerForNode } from './nodeLedger';\nimport webLedger, { LedgerForWeb } from './webLedger';\n\nexport type Ledger = LedgerForNode | LedgerForWeb;\n\nexport const getWebLedger = async (): Promise<Ledger> => {\n  const myLedger = await webLedger();\n\n  return myLedger;\n};\n\nexport const getNodeLedger = async (): Promise<Ledger> => {\n  const myLedger = await nodeLedger();\n\n  return myLedger;\n};\n\nexport const getLedger = async (): Promise<Ledger> => {\n  const isNodeEnv = typeof process !== 'undefined' && process.release.name === 'node';\n\n  if (isNodeEnv) {\n    return getNodeLedger();\n  }\n\n  return getWebLedger();\n};\n","export type LedgerForNode = typeof import('findora-wallet-wasm/nodejs/wasm.js');\n\nconst getNodeLedger = async (): Promise<LedgerForNode> => {\n  const ledger = await import('findora-wallet-wasm/nodejs/wasm.js');\n  return ledger;\n};\n\nexport default getNodeLedger;\n","export type LedgerForWeb = typeof import('findora-wallet-wasm/bundler/wasm.js');\n\nconst getWebLedger = async (): Promise<LedgerForWeb> => {\n  const ledger = await import('findora-wallet-wasm/bundler/wasm.js');\n  return ledger;\n};\n\nexport default getWebLedger;\n","import fs from 'fs';\n\nexport const uint8arrayToHexStr = (input: Uint8Array): string => Buffer.from(input).toString('hex');\n\nexport const writeFile = async (filePath: string, cacheData: string): Promise<true> => {\n  return new Promise((resolve, reject) => {\n    fs.writeFile(filePath, cacheData, 'utf8', err => {\n      if (err) {\n        reject(err);\n      }\n      resolve(true);\n    });\n  });\n};\n\nexport const readFile = (filePath: string): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    fs.readFile(filePath, 'utf8', (err, data) => {\n      if (err) {\n        reject(err);\n      }\n      resolve(data);\n    });\n  });\n};\n","import { WalletKeypar } from '../api/keypair';\nimport * as Network from '../api/network';\nimport { LedgerUtxo, OwnedMemoResponse, UtxoResponse } from '../api/network/types';\nimport { CACHE_ENTRIES } from '../config/cache';\nimport Sdk from '../Sdk';\nimport Cache from './cacheStore/factory';\nimport { CacheItem } from './cacheStore/types';\nimport { getLedger } from './ledger/ledgerWrapper';\nimport {\n  ClientAssetRecord as LedgerClientAssetRecord,\n  OwnerMemo as LedgerOwnerMemo,\n  TxoRef as LedgerTxoRef,\n} from './ledger/types';\n\nexport interface LedgerUtxoItem {\n  sid: number;\n  utxo: LedgerUtxo;\n  ownerMemo: LedgerOwnerMemo | undefined;\n}\n\nexport interface AddUtxoItem extends LedgerUtxoItem {\n  address: string;\n  body: any;\n  memoData: OwnedMemoResponse | undefined;\n}\n\nexport interface UtxoOutputItem extends LedgerUtxoItem {\n  originAmount: BigInt;\n  amount: BigInt;\n  memoData: OwnedMemoResponse | undefined;\n}\n\nexport interface UtxoInputParameter {\n  txoRef: LedgerTxoRef;\n  assetRecord: LedgerClientAssetRecord;\n  ownerMemo: LedgerOwnerMemo | undefined;\n  amount: BigInt;\n  memoData: OwnedMemoResponse | undefined;\n}\n\nexport interface UtxoInputsInfo {\n  inputParametersList: UtxoInputParameter[];\n  inputAmount: BigInt;\n}\n\nexport const decryptUtxoItem = async (\n  sid: number,\n  walletInfo: WalletKeypar,\n  utxoData: UtxoResponse,\n  memoData?: OwnedMemoResponse,\n): Promise<AddUtxoItem> => {\n  const ledger = await getLedger();\n\n  let assetRecord;\n\n  try {\n    assetRecord = ledger.ClientAssetRecord.from_json(utxoData.utxo);\n  } catch (error) {\n    throw new Error(`Can not get client asset record. Details: \"${error.message}\"`);\n  }\n\n  let ownerMemo;\n\n  try {\n    ownerMemo = memoData ? ledger.OwnerMemo.from_json(memoData) : null;\n  } catch (error) {\n    throw new Error(`Can not decode owner memo. Details: \"${error.message}\"`);\n  }\n\n  let decryptAssetData;\n\n  try {\n    decryptAssetData = await ledger.open_client_asset_record(\n      assetRecord,\n      ownerMemo?.clone(),\n      walletInfo.keypair,\n    );\n  } catch (error) {\n    throw new Error(`Can not open client asset record to decode. Details: \"${error.message}\"`);\n  }\n\n  let decryptedAsetType;\n\n  try {\n    decryptedAsetType = ledger.asset_type_from_jsvalue(decryptAssetData.asset_type);\n  } catch (error) {\n    throw new Error(`Can not decrypt asset type. Details: \"${error.message}\"`);\n  }\n\n  decryptAssetData.asset_type = decryptedAsetType;\n\n  decryptAssetData.amount = BigInt(decryptAssetData.amount);\n\n  const item = {\n    address: walletInfo.address,\n    sid,\n    body: decryptAssetData || {},\n    utxo: { ...utxoData.utxo },\n    ownerMemo: ownerMemo?.clone(),\n    memoData,\n  };\n\n  return item;\n};\n\nexport const getUtxoItem = async (\n  sid: number,\n  walletInfo: WalletKeypar,\n  cachedItem?: AddUtxoItem,\n): Promise<AddUtxoItem> => {\n  if (cachedItem) {\n    return cachedItem;\n  }\n\n  console.log(`Fetching sid \"${sid}\"`);\n\n  const utxoDataResult = await Network.getUtxo(sid);\n\n  const { response: utxoData, error: utxoError } = utxoDataResult;\n\n  if (utxoError || !utxoData) {\n    throw new Error(`Could not fetch utxo data for sid \"${sid}\", Error - ${utxoError?.message}`);\n  }\n\n  const memoDataResult = await Network.getOwnerMemo(sid);\n\n  const { response: memoData, error: memoError } = memoDataResult;\n\n  if (memoError) {\n    throw new Error(`Could not fetch memo data for sid \"${sid}\", Error - ${memoError.message}`);\n  }\n\n  const item = await decryptUtxoItem(sid, walletInfo, utxoData, memoData);\n\n  return item;\n};\n\n// creates a list of items with descrypted utxo information\nexport const addUtxo = async (walletInfo: WalletKeypar, addSids: number[]): Promise<AddUtxoItem[]> => {\n  const utxoDataList = [];\n  const cacheDataToSave: CacheItem = {};\n  let utxoDataCache;\n\n  const cacheEntryName = `${CACHE_ENTRIES.UTXO_DATA}_${walletInfo.address}`;\n  const fullPathToCacheEntry = `${Sdk.environment.cachePath}/${cacheEntryName}.json`;\n\n  try {\n    utxoDataCache = await Cache.read(fullPathToCacheEntry, Sdk.environment.cacheProvider);\n  } catch (error) {\n    throw new Error(`Error reading the cache, \"${error.message}\"`);\n  }\n\n  for (let i = 0; i < addSids.length; i++) {\n    const sid = addSids[i];\n\n    try {\n      const item = await getUtxoItem(sid, walletInfo, utxoDataCache?.[`sid_${sid}`]);\n      utxoDataList.push(item);\n      cacheDataToSave[`sid_${item.sid}`] = item;\n    } catch (error) {\n      console.log(`could not process addUtxo for sid ${sid}, Details: \"${error.message}\"`);\n      continue;\n    }\n  }\n\n  try {\n    await Cache.write(fullPathToCacheEntry, cacheDataToSave, Sdk.environment.cacheProvider);\n  } catch (err) {\n    console.log(`could not write cache for utxoData, \"${err.message}\"`);\n  }\n\n  return utxoDataList;\n};\n\n// creates a list of utxo like object, which are suitable for the required send operation\nexport const getSendUtxo = (code: string, amount: BigInt, utxoDataList: AddUtxoItem[]): UtxoOutputItem[] => {\n  let balance = amount;\n\n  const result = [];\n\n  for (let i = 0; i < utxoDataList.length; i++) {\n    const assetItem = utxoDataList[i];\n\n    if (assetItem.body.asset_type === code) {\n      const _amount = BigInt(assetItem.body.amount);\n\n      if (balance <= BigInt(0)) {\n        break;\n      } else if (BigInt(_amount) >= balance) {\n        result.push({\n          amount: balance,\n          originAmount: _amount,\n          sid: assetItem.sid,\n          utxo: { ...assetItem.utxo },\n          ownerMemo: assetItem.ownerMemo,\n          memoData: assetItem.memoData,\n        });\n        break;\n      } else {\n        balance = BigInt(Number(balance) - Number(_amount));\n        result.push({\n          amount: _amount,\n          originAmount: _amount,\n          sid: assetItem.sid,\n          utxo: { ...assetItem.utxo },\n          ownerMemo: assetItem.ownerMemo,\n          memoData: assetItem.memoData,\n        });\n      }\n    }\n  }\n\n  return result;\n};\n\n// creates a list of inputs, which would be used by transaction builder in a fee service\nexport const addUtxoInputs = async (utxoSids: UtxoOutputItem[]): Promise<UtxoInputsInfo> => {\n  const ledger = await getLedger();\n\n  let inputAmount = BigInt(0);\n\n  const inputParametersList = [];\n\n  for (let i = 0; i < utxoSids.length; i += 1) {\n    const item = utxoSids[i];\n\n    inputAmount = BigInt(Number(inputAmount) + Number(item.originAmount));\n\n    let assetRecord;\n\n    try {\n      assetRecord = ledger.ClientAssetRecord.from_json(item.utxo);\n    } catch (error) {\n      throw new Error(`Can not get client asset record. Details: \"${error.message}\"`);\n    }\n\n    let txoRef;\n\n    try {\n      txoRef = ledger.TxoRef.absolute(BigInt(item.sid));\n    } catch (error) {\n      throw new Error(`Cannot convert given sid id to a BigInt, \"${item.sid}\"`);\n    }\n\n    const inputParameters: UtxoInputParameter = {\n      txoRef,\n      assetRecord,\n      ownerMemo: item?.ownerMemo,\n      amount: item.amount,\n      memoData: item.memoData,\n    };\n\n    inputParametersList.push(inputParameters);\n  }\n\n  const res = { inputParametersList, inputAmount };\n\n  return res;\n};\n","module.exports = require(\"assert\");;","module.exports = require(\"fs\");;","module.exports = require(\"http\");;","module.exports = require(\"https\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"stream\");;","module.exports = require(\"tty\");;","module.exports = require(\"url\");;","module.exports = require(\"util\");;","module.exports = require(\"zlib\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","__webpack_require__.v = (exports, wasmModuleId, wasmModuleHash, importsObj) => {\n\tvar req = new Promise(function (resolve, reject) {\n\t\tvar { readFile } = require('fs');\n\t\tvar { join } = require('path');\n\n\t\ttry {\n\t\t\treadFile(join(__dirname, \"\" + wasmModuleHash + \".module.wasm\"), function(err, buffer){\n\t\t\t\tif (err) return reject(err);\n\n\t\t\t\t// Fake fetch response\n\t\t\t\tresolve({\n\t\t\t\t\tarrayBuffer() { return buffer; }\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) { reject(err); }\n\t});\n\t// no support for streaming compilation\n\treturn req\n\t\t.then((x) => (x.arrayBuffer()))\n\t\t.then((bytes) => (WebAssembly.instantiate(bytes, importsObj)))\n\t\t.then((res) => (Object.assign(exports, res.instance.exports)));\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3607);\n"],"sourceRoot":""}